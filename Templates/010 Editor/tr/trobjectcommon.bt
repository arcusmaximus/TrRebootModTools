//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: trobjectcommon.bt
//   Authors: arc_
//   Purpose: Common structures for parsing object metadata
//------------------------------------------------

#ifndef TR_OBJECT_COMMON
#define TR_OBJECT_COMMON

enum TypeNameHash
{
    _NONE = 0,
    ACTIONGRAPHS = 0x2777E1B3,
    ADRENALINEMODE = 0x0B477B722,
    AIACTIVECOVER = 0x0F641D46C,
    AIBEHAVIOR = 0x58AEBB4E,
    AIINTERACT = 0x44F20780,
    AIINVESTIGATE = 0x14F270B7,
    AIMOTION = 0x62E7CB93,
    ANIMATED = 0x3A1D3C00,
    ANIMATEDDIALOGUE = 0x0F73B10F4,
    ANIMTARGET = 0x0EC75512B,
    AREARESERVER = 0x15F10542,
    ASYMMETRICSURVIVALINSTINCT = 0x0AA622D53,
    ATTACK = 0x0CB30FFCA,
    BARK = 0x334C6C,
    BENDIE = 0x0CC261618,
    BODYDRAG = 0x8655308C,
    BONEPARAMSTATE = 0x9875F33C,
    BONESPRINGS = 0x0AA3451FD,
    BUDDY = 0x66F2CEA,
    BUDDYRULES = 0x969DB185,
    BUFF = 0x32B443,
    BUILDPOINT = 0x455D7DB5,
    CAMERA = 0x0CA5B0831,
    CAMERASPLINES = 0x0D1BD6FB9,
    CANOPY = 0x0CA5BFDE3,
    CAPABILITIES = 0x91DD14FA,
    CELL = 0x32F4E0,
    CHECKPOINT = 0x62E498D,
    CLASS = 0x67DE7D4,
    CLOTH = 0x66229E7,
    COLD = 0x32EF2F,
    COLLECTIBLE = 0x5E52CD59,
    COLLISIONBOX = 0x66E93A2D,
    COLLISIONCAPSULE = 0x76F10B34,
    COLLISIONGEOM = 0x9036C2F4,
    COLLISIONMARKER = 0x512C0DBA,
    COLLISIONSPHERE = 0x0C6BFF66,
    COMBATSOLVER = 0x42B15FAA,
    CONCEALMENT = 0x9562F817,
    CONSUMABLE = 0x0C4872A8E,
    CONTROLLER = 0x7CBAAE2E,
    CORPSE = 0x0CA830A7E,
    COVERPOINT = 0x83AE4E56,
    CUSTOMIZATIONSPAWNER = 0x24D05086,
    DAMAGE = 0x0C907CC22,
    DECALVOLUME = 0x0F6E5D9A0,
    DEFZONE = 0x88588C23,
    DESTRUCTIBLE = 0x0AA19BC6D,
    DIRECTIVEHANDLER = 0x3511DE68,
    DISGUISE = 0x398CF9DD,
    DISGUISECOUNTER = 0x9714761A,
    DRAWABLE = 0x783A7FBA,
    DYNAMICHAIR = 0x59E52A2B,
    DYNAMICMARKUP = 0x4A9F4FDB,
    DYNAMICSPAWNER = 0x0CABCF811,
    DYNAMICSPAWNERV2 = 0x6E61073F,
    DYNAMICTREE = 0x6FABAC0F,
    DYNAMICTUNING = 0x87C9C2E2,
    ELEMENT = 0x4F237D5F,
    FINGEROFGOD = 0x3575836F,
    FLAG = 0x34ABDB,
    FLAMMABLE = 0x85D0E26A,
    FLUIDCONTAINER = 0x6D1CA4A,
    FLUIDVOLUME = 0x26EE4105,
    FOGVOLUME = 0x5672D24D,
    FOLLOWCONSTRAINTSPLINE = 0x3E40B2B3,
    FORCEFIELD = 0x7131D1BD,
    FX = 0x0D37,
    FXKILLVOLUME = 0x5F2A9CFD,
    FXWINDLIST = 0x9562597E,
    FXWINDPOINTLIST = 0x5CE18734,
    FXWINDSPLINELIST = 0x0D0DB925,
    GATHERPOINTS = 0x0FF71BC5A,
    GENERICBOXSHAPELIST = 0x0AEBE5F70,
    GENERICCAPSULESHAPELIST = 0x0FD122231,
    GENERICDOUBLERADIICAPSULESHAPELIST = 0x0B9A307B8,
    GENERICSPHERESHAPELIST = 0x0D7B077A8,
    GLOBALMARKETPLACEINFO = 0x0DE938E8B,
    GLOBALOBJECT = 0x0E42A87CF,
    GRAPPLE = 0x55931035,
    GRASSINFLUENCEBOX = 0x0DAF01D3A,
    GRASSINFLUENCEPOINT = 0x94668CE0,
    GRASSVOLUME = 0x579D9E0B,
    GROUP = 0x69C5C34,
    GUARDASSIGNMENT = 0x89956871,
    GUARDZONEINFO = 0x5D24BC45,
    HARDACCESSORY = 0x0C8F5B47E,
    HEALTH = 0x0D132F59E,
    HELICOPTER = 0x0ED45DF46,
    HELICOPTERSPLINE = 0x7E47BC2E,
    HUNGER = 0x0FFAF238C,
    HUNTMANAGER = 0x9C54C0F6,
    IK = 0x0DCC,
    INTERACT = 0x0FA0FCD90,
    INTERACTABLE = 0x0E4E2FB6A,
    INVENTORY = 0x829EC25,
    INVENTORYMEMBER = 0x0C35DA469,
    JUMPHELPERS = 0x1E24C20B,
    LEVELOBJECTIVE = 0x380EF4AF,
    LIGHTINSTANCE = 0x6A7D6FC8,
    LIVESPAWNER = 0x31A03763,
    LIVESPAWNERRELAY = 0x0D00EB849,
    LOCALGROUP = 0x9F40D3EA,
    LODPIVOTMARKER = 0x0E5F54637,
    LOOKAT = 0x67BBC62,
    LOOT = 0x3D9371,
    MARKUP = 0x73B3B1F,
    MARKUPDETECTION = 0x740969C8,
    MATERIALSWAP = 0x3ACB8C2E,
    MELEEMOVE = 0x4F5C9280,
    MERCHANT = 0x610F706F,
    MESH = 0x392D29,
    MESHREF = 0x5F8E3154,
    MODELHOST = 0x0BAC15452,
    MOVESETPROFILE = 0x0C5FDA125,
    MOVIE = 0x7163FC0,
    MULTIPLAYER3DTEXT = 0x19D47C1C,
    NAMEDVALUE = 0x0CA1378E9,
    NETSYNC = 0x9E33BC07,
    NPC = 0x1C6A9,
    OBJECT = 0x0E447306B,
    OBJECTNETDATA = 0x0E6B70FE0,
    OBJECTREF = 0x0F787272F,
    OBSTACLE = 0x0D6B5D8D0,
    OUTFITS = 0x0BCEF97AB,
    OVERWATCH = 0x361E0934,
    P2PCOMMUNICATION = 0x498A3F84,
    P2PCOMMUNICATIONMARKER = 0x630985BE,
    PAPERDOLL = 0x0D6FA7F32,
    PAPERDOLLPIECE = 0x0A160DFF1,
    PHYSICAL = 0x0FB905519,
    PHYSICSATTACH = 0x387BB962,
    PHYSICSJOINT = 0x2A545503,
    PIROUETTE = 0x0DF0FF1C7,
    PLANNEROBSTACLE = 0x0D3FDA31,
    PLAYER = 0x8336CC,
    PLAYERSPAWN = 0x12F2373F,
    POINTOFINTEREST = 0x0CF63816C,
    POINTOFINTERESTS = 0x0EF2A8F22,
    PORTABLE = 0x266D7224,
    PORTAL = 0x13204B6,
    POWERMETER = 0x0AD8F7877,
    PROGRESSIONSTATE = 0x980F63EE,
    PROJECTILE = 0x7AD270E4,
    PROJECTILERESPONSE = 0x48FA0567,
    PROXY = 0x831E288,
    RAGDOLL = 0x744CB8C3,
    RAGE = 0x3B08E7,
    REFLECTION = 0x8D7FA694,
    REFLECTIONCARD = 0x4A3843D9,
    REFLECTIONVOLUME = 0x5A7A5EB5,
    RELIC = 0x75326DF,
    REPULSOR = 0x4DE7B486,
    RESPAWNMARKER = 0x1D0F5F81,
    RESPAWNMARKEROBJECT = 0x9ACE3715,
    RIPPLE = 0x0ECF5A840,
    SCOREATTACK = 0x2A21843D,
    SCREENSHOTMARKER = 0x0BD44E186,
    SCRIPT = 0x0EA7DB392,
    SEETHROUGH = 0x0E667184A,
    SENSE = 0x763343E,
    SENSIBLE = 0x36C9D2B6,
    SHAPE = 0x7606FE1,
    SHATTERABLE = 0x21AE801E,
    SOFTBODY = 0x5D69B0E8,
    SPATIALAWARENESS = 0x6EE852FC,
    SPAWN = 0x7644B3D,
    SPAWNPOINT = 0x0BD2C8012,
    SQUAD = 0x76DCF03,
    SQUADCONTROLLER = 0x0FFE4C347,
    STAIRSHELPER = 0x843A8C00,
    STATECONTROL = 0x0D1224F35,
    STATS = 0x775BD18,
    STREAM = 0x0E8432871,
    STREAMSIGNAL = 0x0C6F5FBD1,
    STREAMSTATE = 0x43BEE7CC,
    SURVIVALINSTINCT = 0x0FCC5C682,
    TARGET = 0x0E86227FC,
    TARGETINDICATOR = 0x0D410F96E,
    TARGETRECOGNITION = 0x4031A19D,
    TEAM = 0x41CD47,
    THREAT = 0x0BBB9087,
    THREATTRACKER = 0x7E1D20BB,
    TIMELINE = 0x1C584DCA,
    TQIMMUNITY = 0x718B6686,
    TREEREFLIST = 0x5F910B24,
    TRIGGER = 0x7D97B69A,
    UIMARKERLIST = 0x6C529876,
    UNIT = 0x419355,
    VISUALENVIRONMENT = 0x0CDF3FA7B,
    WATERCURRENTSPLINES = 0x97CD778A,
    WATERVOLUME = 0x33F7919D,
    WATERVOLUMEDETECTION = 0x0E8A3ED72,
    WAYPOINTSET = 0x3D0CC533,
    WEAPON = 0x0F16E6C65,
    WETNESSVOLUME = 0x8F96B520,
    WWISEAREASPEAKER = 0x0AE91A7E0,
    WWISEBANK = 0x0CD129D32,
    WWISEGAMEOBJECT = 0x0C264728A,
    WWISEPORTAL = 0x8E706D07,
    WWISESKELETAL = 0x770695F2,
    WWISEVOLUME = 0x0D5CCD8B0,
    ZONEMARKER = 0x6A21814E
};

typedef struct
{
    Ref nameRef;
    if (CanSeekTo(nameRef))
    {
        SeekToRef(nameRef);
        string name;
        ReturnFromRef();
    }
    int type;
    int renderModelId;
    int collisionModelId;
} MeshRef;

typedef struct
{
    TypeNameHash type <read=EnumToString(this)>;
    FSkip(4);
    Ref reference;
} Component <read=EnumToString(type), optimize=false>;

typedef struct
{
    Matrix transform;
    int transformFlags;
    int id;
    
    Ref uiNameRef;
    if (CanSeekTo(uiNameRef))
    {
        SeekToRef(uiNameRef);
        string uiName;
        ReturnFromRef();
    }
    
    Ref debugNameRef;
    if (CanSeekTo(debugNameRef))
    {
        SeekToRef(debugNameRef);
        string debugName;
        ReturnFromRef();
    }
    
    quad hash <format=hex>;
    if (TR_VERSION == 10)
    {
        Ref propertiesRef;
        if (parentof(this).type == MESHREF)
        {
            SeekToRef(propertiesRef);
            MeshRef meshRef;
            ReturnFromRef();
        }
    }
    else
    {
        Ref propertiesRef;
    }
    FSkip(8);
} SceneItem <read=(exists(uiName) && uiName != "?" ? uiName : Str("%016LX", hash)), optimize=false>;

typedef struct
{
    TypeNameHash type <read=EnumToString(this)>;
    int count;
    Ref sceneItemsRef;
    
    if (CanSeekTo(sceneItemsRef))
    {
        SeekToRef(sceneItemsRef);
        SceneItem sceneItems[count];
        ReturnFromRef();
    }
} SceneItemsOfType <read=EnumToString(type), optimize=false>;

typedef struct
{
    TypeNameHash type <read=EnumToString(this)>;
    int count;
} SceneItemCount <read=Str("%s = %d", EnumToString(type), count)>;

typedef struct
{
    int zoneId;
    FSkip(4);
    
    Ref nameRef;
    if (CanSeekTo(nameRef))
    {
        SeekToRef(nameRef);
        string name;
        ReturnFromRef();
    }
    
    TypeNameHash type <read=EnumToString(this)>;
    int numBaseZones;
    Ref baseZoneIdsRef;
    Ref propertiesRef;
    
    int numComponents;
    FSkip(4);
    Ref componentsRef;
    if (CanSeekTo(componentsRef))
    {
        SeekToRef(componentsRef);
        Component components[numComponents];
        ReturnFromRef();
    }
    
    int numSceneItemTypes;
    FSkip(4);
    Ref sceneItemsByTypeRef;
    if (CanSeekTo(sceneItemsByTypeRef))
    {
        SeekToRef(sceneItemsByTypeRef);
        SceneItemsOfType sceneItemsByType[numSceneItemTypes];
        ReturnFromRef();
    }
        
    quad numSceneItemCounts;
    Ref sceneItemCountsRef;
    if (CanSeekTo(sceneItemCountsRef))
    {
        SeekToRef(sceneItemCountsRef);
        SceneItemCount sceneItemCounts[numSceneItemCounts];
        ReturnFromRef();
    }
    
    Ref renderModelRef;
    Ref staticRenderModelRef;
    Ref collisionModelRef;
    Ref staticCollisionModelRef;
    Ref skeletonRef;
    int skeletonItemId;
    FSkip(4);
    Ref poseSpaceDeformersRef;
    Ref clothDefinitionRef;
    Ref hairDataRef;
    Ref streamLayerListRef;
} Object;

typedef struct
{
    TypeNameHash listType <format=hex>;
    int zoneId;
    uquad id0 <format=hex>;
    uquad id1 <format=hex>;
    Ref moreIdsRef;
    if (CanSeekTo(moreIdsRef))
    {
        SeekToRef(moreIdsRef);
        uquad moreIds;
        ReturnFromRef();
    }
} PlacementPath <optimize=false>;

#ifndef TR_OBJECT_NO_INSTANTIATE
    RefDefinitions refDefinitions;
    Object object <open=true>;
#endif

#endif
