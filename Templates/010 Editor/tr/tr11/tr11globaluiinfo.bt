#define TR_VERSION 11
#define TR_OBJECT_NO_INSTANTIATE
#include "../trcommon.bt"
#include "../trobjectcommon.bt"

typedef struct
{
    unsigned int imageRes;
    FSkip(4);
    Ref filepathRef;
    if (CanSeekTo(filepathRef))
    {
        SeekToRef(filepathRef);
        string filepath;
        ReturnFromRef();
    }
} ImageLoader <optimize=false>;

typedef struct
{
    char teamId;
    FSkip(7);
    Ref teamNameDebugRef;
    if (CanSeekTo(teamNameDebugRef))
    {
        SeekToRef(teamNameDebugRef);
        string teamNameDebug;
        ReturnFromRef();
    }
    uquad teamName;
} TeamInfoItem <optimize=false>;

typedef struct
{
    Ref debugNameRef;
    if (CanSeekTo(debugNameRef))
    {
        SeekToRef(debugNameRef);
        string debugName;
        ReturnFromRef();
    }
    uquad locName <format=hex>;
    Ref indicatorNameRef;
    if (CanSeekTo(indicatorNameRef))
    {
        SeekToRef(indicatorNameRef);
        string indicatorName;
        ReturnFromRef();
    }
    ImageLoader characterImgLoader;
    ImageLoader skinImgLoader;
    ushort zoneID;
    FSkip(6);
    Ref zoneNameRef;
    if (CanSeekTo(zoneNameRef))
    {
        SeekToRef(zoneNameRef);
        string zoneName;
        ReturnFromRef();
    }
    unsigned int zoneHashName <format=hex>;
    ushort menuObjectID;
    FSkip(2);
    Ref menuObjectIDNameRef;
    if (CanSeekTo(menuObjectIDNameRef))
    {
        SeekToRef(menuObjectIDNameRef);
        string menuObjectIDName;
        ReturnFromRef();
    }
    Ref teamIdRef;
    if (CanSeekTo(teamIdRef))
    {
        SeekToRef(teamIdRef);
        TeamInfoItem teamId;
        ReturnFromRef();
    }
    ushort unit;
    FSkip(2);
    unsigned int zoneMarkerZone;
    PlacementPath zoneMarkerID;
    unsigned int cameraUniqueID;
    char characterType;
    ubyte baseProfileIndex;
    ushort buddyObjectID;
    Ref inventoryRef;
    Ref playerStateRef;
    unsigned int playerColor <format=hex>;
    byte isEnabledForMultiplayer;
    byte isDefaultForMultiplayer;
    FSkip(2);
    Ref flashFrameLabelRef;
    if (CanSeekTo(flashFrameLabelRef))
    {
        SeekToRef(flashFrameLabelRef);
        string flashFrameLabel;
        ReturnFromRef();
    }
} CharacterProfileItem <optimize=false, read=zoneName>;

typedef struct
{
    Ref characterProfileMapRef;
    ubyte characterProfileMapCount;
    if (CanSeekTo(characterProfileMapRef))
    {
        SeekToRef(characterProfileMapRef);
        CharacterProfileItem characterProfileMap[characterProfileMapCount];
        ReturnFromRef();
    }
} GlobalUIInfo <optimize=false>;

RefDefinitions refDefinitions;
Ref rootRef;
if (CanSeekTo(rootRef))
{
    SeekToRef(rootRef);
    GlobalUIInfo root <open=true>;
    ReturnFromRef();
}
