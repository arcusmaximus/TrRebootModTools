string GetEventName(uint eventId)
{
    switch (eventId)
    {
        case 0x3A899622: return "TB_tilt_boat_broadcast";
        case 0x329D2E62: return "AmmoChange";
        case 0x1181AAA3: return "animHostedOverlay_trigger";
        case 0xACDC0648: return "animWetArmShake";
        case 0xCA9F410A: return "animStumbleHard";
        case 0x596E7AC3: return "animStumbleShort";
        case 0xD29C3A4F: return "animStumble_custom_right";
        case 0x3CEC80A4: return "animStumble_custom_over";
        case 0x67488A32: return "animStumbleInjured";
        case 0x3BF9F960: return "animSlipA";
        case 0x256D67CD: return "animStumbleC";
        case 0x6E2B87B5: return "animMoodDesperate";
        case 0x256D67CE: return "animStumbleB";
        case 0x347BB4EE: return "animCough";
        case 0xC68D23A6: return "MP_AllPlayersDead";
        case 0xBD15D080: return "MP_PlayerNeedsRevive";
        case 0xDC90BD99: return "MP_PlayerIsDown";
        case 0x10F74666: return "MP_PlayerRespawned";
        case 0x0BA45BE9: return "MP_PlayerRevived";
        case 0xC869568F: return "MP_ForceRevivePlayer";
        case 0xA0D336F4: return "DBND_End";
        case 0x5EDC8B25: return "DBND_GL_Start";
        case 0x0418EB38: return "StartSpotlightPatrolPath";
        case 0x86AFD8BC: return "StopSpotlightPatrolPath";
        case 0x9AA06BF1: return "Set_Spawn_Point_Index";
        case 0x90E12208: return "SpotlightTragetTunnelGuard";
        case 0xA413FC7B: return "SpotlightTargetPatrollingGuard";
        case 0x2B4D3C08: return "DBND_Start";
        case 0x0C357958: return "Killer_Instinct_Start_SkipEquip";
        case 0x8E77DD69: return "Killer_Instinct_Start";
        case 0xF4E9D5B5: return "Killer_Instinct_End";
        case 0xFBE89D97: return "Injured_HitReact_Start";
        case 0x186790FE: return "Incapacitated_end";
        case 0x7656C696: return "Incapacitated_point_at";
        case 0x96B1F49F: return "Incapacitated_start";
        case 0xA9F3B14E: return "Incapacitate_Shockwave";
        case 0x79EBD919: return "animCoverHead";
        case 0x9C58BE6E: return "anim_stumble_throw_back";
        case 0x7C299563: return "animStumbleRockLeft";
        case 0x256D67CB: return "animStumbleA";
        case 0x745129E9: return "animJumpOver";
        case 0xEE86F93F: return "animShieldFace";
        case 0x3CE14A8D: return "animReachForward";
        case 0x08289FBE: return "animWindOff";
        case 0xF9000497: return "animWindOn";
        case 0x7A8F356A: return "animPortableOff";
        case 0x450BED4D: return "AmmoIsFull";
        case 0xBCF5A09D: return "Notify_Message_ReceiveDamage";
        case 0x98C7F71D: return "animPortableDrop";
        case 0xC0BAD31F: return "animWolfDenReactMirrored";
        case 0xA1AAF1E3: return "animWolfDenReact";
        case 0xFA39E853: return "animExplodeReact";
        case 0xD5D265E3: return "animPortableThrow";
        case 0xC1426371: return "animPortableOn";
        case 0x6AA3326D: return "animJumpLong";
        case 0x73DBAD12: return "evAllCachesFound";
        case 0x4C0EDFB7: return "evGPSCacheCountUpdated";
        case 0x8421A72E: return "evSeizeInputTriggered";
        case 0xC1C7307B: return "evSeizeMeterActionZeroAndWait";
        case 0xFD97D67A: return "evSeizeMeterActionDoneAndWait";
        case 0x03DC67E7: return "evSeizeMeterActionMaxAndWait";
        case 0x215CCFCD: return "scavenger_seizeonly_player_followup_failed";
        case 0xF49E1FEA: return "scavenger_seizeonly_player_followup_success";
        case 0xB2AD3A77: return "scavenger_seizeonly_player_followup_started";
        case 0xBDF7CDBB: return "Instance_OnNormalCineStarted";
        case 0xAD7BBD77: return "Instance_OnNormalCineEnded";
        case 0x444ABD40: return "animObjectPeckFace";
        case 0x4448E096: return "animObjectPeckBack";
        case 0x70A81676: return "animObjectFlyFace";
        case 0x61D005C6: return "pistol_loaded_instant";
        case 0x705DB9E7: return "animObjectFlyBack";
        case 0x4F2C1951: return "anim_action_prepare";
        case 0x0CD4A722: return "postCombat_start";
        case 0x08F209F5: return "ActivatePhysics";
        case 0x49FF8D12: return "ArmorDestroy";
        case 0xF8D7D3A2: return "adrenalineInterruptEnd";
        case 0x9C1B7CF9: return "adrenalineInterrupt";
        case 0x412A176C: return "adrenalineEnd";
        case 0x3AE1304D: return "AdrenalineForceEndFromScript";
        case 0x7B99F56C: return "AdrenalineReady";
        case 0x989639ED: return "AGIntroNode_In_0";
        case 0x989639EC: return "AGIntroNode_In_1";
        case 0x989639EB: return "AGIntroNode_In_2";
        case 0x989639FA: return "AGIntroNode_In_3";
        case 0x989639F9: return "AGIntroNode_In_4";
        case 0x989639F8: return "AGIntroNode_In_5";
        case 0x989639F7: return "AGIntroNode_In_6";
        case 0x989639F6: return "AGIntroNode_In_7";
        case 0x989639F5: return "AGIntroNode_In_8";
        case 0x989639F4: return "AGIntroNode_In_9";
        case 0x6E9A26A4: return "AGIntroNode_In_10";
        case 0x6E9A26A3: return "AGIntroNode_In_11";
        case 0x6E9A26A6: return "AGIntroNode_In_12";
        case 0x6E9A26A5: return "AGIntroNode_In_13";
        case 0x6E9A26A8: return "AGIntroNode_In_14";
        case 0x6E9A26A7: return "AGIntroNode_In_15";
        case 0x6E9A26AA: return "AGIntroNode_In_16";
        case 0x6E9A26A9: return "AGIntroNode_In_17";
        case 0x6E9A23EC: return "AGIntroNode_In_18";
        case 0x6E9A23EB: return "AGIntroNode_In_19";
        case 0x6E9A26C3: return "AGIntroNode_In_20";
        case 0x6E9A26C4: return "AGIntroNode_In_21";
        case 0x6E9A26C5: return "AGIntroNode_In_22";
        case 0x6E9A26C6: return "AGIntroNode_In_23";
        case 0x6E9A26C7: return "AGIntroNode_In_24";
        case 0x6E9A26C8: return "AGIntroNode_In_25";
        case 0x6E9A26C9: return "AGIntroNode_In_26";
        case 0x6E9A26CA: return "AGIntroNode_In_27";
        case 0x6E9A268B: return "AGIntroNode_In_28";
        case 0x6E9A268C: return "AGIntroNode_In_29";
        case 0x6E9A245F: return "AGIntroNode_In_30";
        case 0x6E9A245E: return "AGIntroNode_In_31";
        case 0xB129AE7B: return "AGInstanceNode_In_0";
        case 0xB129AE7C: return "AGInstanceNode_In_1";
        case 0xB129AE7D: return "AGInstanceNode_In_2";
        case 0xB129AE7E: return "AGInstanceNode_In_3";
        case 0xB129AE7F: return "AGInstanceNode_In_4";
        case 0xB129AE80: return "AGInstanceNode_In_5";
        case 0xB129AE81: return "AGInstanceNode_In_6";
        case 0xB129AE82: return "AGInstanceNode_In_7";
        case 0xB129AE83: return "AGInstanceNode_In_8";
        case 0xB129AE84: return "AGInstanceNode_In_9";
        case 0x73C15178: return "AGInstanceNode_In_10";
        case 0x73C15177: return "AGInstanceNode_In_11";
        case 0x73C1517A: return "AGInstanceNode_In_12";
        case 0x73C15179: return "AGInstanceNode_In_13";
        case 0x73C1515C: return "AGInstanceNode_In_14";
        case 0x73C1515B: return "AGInstanceNode_In_15";
        case 0x73C1515E: return "AGInstanceNode_In_16";
        case 0x73C1515D: return "AGInstanceNode_In_17";
        case 0x73C15160: return "AGInstanceNode_In_18";
        case 0x73C1515F: return "AGInstanceNode_In_19";
        case 0x73C15159: return "AGInstanceNode_In_20";
        case 0x73C1515A: return "AGInstanceNode_In_21";
        case 0x73C15157: return "AGInstanceNode_In_22";
        case 0x73C15158: return "AGInstanceNode_In_23";
        case 0x73C151BD: return "AGInstanceNode_In_24";
        case 0x73C151BE: return "AGInstanceNode_In_25";
        case 0x73C151BB: return "AGInstanceNode_In_26";
        case 0x73C151BC: return "AGInstanceNode_In_27";
        case 0x73C151C1: return "AGInstanceNode_In_28";
        case 0x73C151C2: return "AGInstanceNode_In_29";
        case 0x73C151BA: return "AGInstanceNode_In_30";
        case 0x73C151B9: return "AGInstanceNode_In_31";
        case 0xA67B7F81: return "AGIntroNode_In_UsedByCodeOnly";
        case 0x5AAAD55C: return "AGInstanceNode_In_UsedByCodeOnly";
        case 0xB38BC28D: return "ControlDisable";
        case 0xC2AAA12B: return "ControlEnable";
        case 0xA64EFBB2: return "Physics_NoMeleeTargetOffensiveCollision";
        case 0xF8F16A60: return "ArmorHitButNotDestroyed";
        case 0x34807F12: return "test";
        case 0x8FE1D40A: return "finisherAttackerDied";
        case 0xDFC7279D: return "finished";
        case 0xA73CF1F5: return "abort";
        case 0x65C34AA0: return "interactTrapReenterToPlayAnim";
        case 0x7A9833CE: return "interactTrapRelease";
        case 0xF6286B63: return "aborted";
        case 0x984B3133: return "Hide_Tutorial";
        case 0x39D9589E: return "hit";
        case 0x3DB1CC03: return "Attach";
        case 0x3DB1CBF0: return "Attack";
        case 0x8F9ED6AA: return "player_torchway_subgraph_deactivated";
        case 0x8D76C27C: return "player_torchway_subgraph_activated";
        case 0x8C702C2D: return "combat_status_ui_display_extra_enemy_indicator";
        case 0xD883AF0F: return "combat_status_ui_remove_extra_enemy_indicator";
        case 0x27D997FB: return "combat_status_ui_detection_indicator_shown";
        case 0xEB0A224D: return "combat_status_ui_glimpse_indicator_shown";
        case 0xAF8D1F1D: return "combat_finisher_camera_focus_witness";
        case 0xE393875E: return "adrenalineStart";
        case 0x1F19DCEB: return "scavtowerrummagedrop";
        case 0xC5308F4A: return "scavtowerrummagepickup";
        case 0x6FB3F20A: return "PlayerEnteredRoom";
        case 0x73721328: return "PlayerExitedRoom";
        case 0x34B7745C: return "BLAH";
        case 0x79DA1925: return "Bow_loot";
        case 0x9839C41D: return "Bow_msg";
        case 0xA78C03CD: return "Break";
        case 0x40B0D26D: return "BreakJoint";
        case 0x2399A478: return "Break_A";
        case 0x2399A477: return "Break_B";
        case 0xA6983801: return "BridgeBreak";
        case 0xB55D5977: return "BButtonPressed";
        case 0x4AA3EA97: return "boat_swim_trigger_swim";
        case 0x490E2B1A: return "boat_swim_trigger_grab";
        case 0x4627E8A1: return "boat_swim_trigger_slowmo";
        case 0x8C4F146C: return "boat_swim_intro_end";
        case 0x24DEE470: return "boat_ladder_climb_animfrag_done";
        case 0x5D5E23D0: return "axecling";
        case 0x27443FBA: return "axeclingreleased";
        case 0xA5C40889: return "axeclingbraced";
        case 0xC6B5B511: return "axeclingbracedreleased";
        case 0x918D5FE7: return "Change_Spawn_Point_Index";
        case 0x835DAF02: return "axeclingtobraced";
        case 0xF2F51242: return "axeclingbracedtocling";
        case 0xF6B06839: return "camera_rope_line_reaching_exit";
        case 0xEB38591B: return "CameraComponentChanged";
        case 0x2D2BE736: return "CeilingCrawlB";
        case 0xE045EB8C: return "ChangeState";
        case 0x805E7EE1: return "CinematicStartedNotifyStateControl";
        case 0x4F7D9A19: return "CinematicStarted";
        case 0x4C06DDD6: return "CinematicFinished";
        case 0x03D6A9B5: return "evCinematicStarted";
        case 0xA6FA9C31: return "Close";
        case 0x0CE47306: return "Closed";
        case 0x158FB46F: return "CollideBlameInstance";
        case 0xEE1B4A9E: return "AttachFromAir";
        case 0x25E6F22A: return "CollideComponentMessageHandler";
        case 0xFF556925: return "CollidedWithEnemy";
        case 0xBA852BF6: return "Combat_encounter_start";
        case 0xCC981E4A: return "Combat_encounter_end";
        case 0xA0A45B39: return "combat_reloading_automatic";
        case 0xB9174403: return "combat_notify_selected_new_weapon_loadout";
        case 0x810DBC64: return "combat_lara_get_cam_customstate";
        case 0xC0DF8A54: return "combat_trigger_cam_force_statecontrol4_update";
        case 0x64FD36D0: return "combat_trigger_cam_customstate_snaretrap";
        case 0x0005A51F: return "combat_trigger_cam_customstate_slide";
        case 0xD5460F4F: return "bi_puzzle_bow_end";
        case 0x5B53D39F: return "dialogue_b";
        case 0x5B53D3A1: return "dialogue_d";
        case 0x5B53D3A0: return "dialogue_c";
        case 0xBF1ABD9C: return "listening_d";
        case 0xBF1ABD9B: return "listening_c";
        case 0xBF1ABDA2: return "listening_b";
        case 0xBF1ABDA1: return "listening_a";
        case 0x9B1A972F: return "dialogue_actor_assign";
        case 0x5B53D39E: return "dialogue_a";
        case 0x8B4F577F: return "bi_puzzle_bow_start";
        case 0x9E7DBC10: return "combat_trigger_cam_customstate_bi_puzzle";
        case 0x00F1AF49: return "combat_trigger_cam_customstate_dndb";
        case 0xCF2CEE63: return "combat_trigger_cam_dodge_switched";
        case 0x2EF24DA3: return "combat_trigger_cam_dodge";
        case 0x1709DF36: return "combat_trigger_explorecam_cover_close";
        case 0xD796615F: return "combat_trigger_explorecam_cover";
        case 0xD9C4F34D: return "combat_trigger_explorecam_roll_evade_crouch";
        case 0xC034AEC3: return "combat_trigger_explorecam_combat";
        case 0xC9F3389D: return "combat_trigger_explorecam_custom";
        case 0xBFE94D1C: return "combat_trigger_explorecam_wade";
        case 0xCA8E1721: return "combat_trigger_explorecam_reset";
        case 0x33C83200: return "combat_trigger_cam_reset";
        case 0x8D695941: return "combat_reloading_manual";
        case 0xADA6AD68: return "death_seize_start_fadeout";
        case 0x9A9CB186: return "CreatureType";
        case 0x45956F9D: return "Detach";
        case 0x222C75C2: return "Done_CeilingCrawlB";
        case 0xD8526200: return "Done_Reset";
        case 0xC8A8CB45: return "DoorClosed";
        case 0xC164C74D: return "DoorOpened";
        case 0xB17494CB: return "EffigyDialogTrigger";
        case 0x98524A1E: return "EnableJoint";
        case 0x75E4B7FC: return "Engage_DeactivateInteract";
        case 0x1A75327C: return "Engage_Activate";
        case 0x7536139C: return "ForceRagdollDeath";
        case 0x3ED0D2BB: return "Engaged";
        case 0x0728E8C7: return "Experience_Level_Increase";
        case 0xB84E298C: return "Explode";
        case 0xD03E43A0: return "Exploded";
        case 0xB44EA6D9: return "Exploding";
        case 0xB33A7F2C: return "Explosion";
        case 0x1FD737FB: return "finisherPastPointOfNoReturn";
        case 0x82DD87B0: return "Flashed";
        case 0xA05DB150: return "Flashing";
        case 0x25EFE643: return "FlotsamSink";
        case 0x39D8E4D9: return "Fun";
        case 0x179D9322: return "GameplayNotification";
        case 0x113F29A2: return "LostTrait";
        case 0x68B2280E: return "GainedTrait";
        case 0xC318F2F9: return "GainedBrokenPart";
        case 0x762A667E: return "GainedEnoughPartsForNewItem";
        case 0x40D755E2: return "GainedNewOutfit";
        case 0xC77E6BEF: return "Glowing";
        case 0x5F48206D: return "Go_Carts";
        case 0xB4E9A7EE: return "Stop_Carts";
        case 0x4FE3E626: return "health_regen_stop";
        case 0x4F55FBDE: return "health_regen_start";
        case 0xA47C7284: return "UpdateDrawgroups";
        case 0xD4A3FFC3: return "health_update_fx";
        case 0xB4AB3AE5: return "health_wet_percentage";
        case 0x4B65E4AA: return "health_full_body";
        case 0x2AE1819B: return "health_damaged_cell_broken";
        case 0x7CB88F72: return "health_damaged_to_dying";
        case 0x37F65786: return "health_damaged_to_weak";
        case 0x77517356: return "health_healed_to_full";
        case 0xF9C1C160: return "health_healed_from_medium";
        case 0x064C73A7: return "health_healed_from_grey";
        case 0xACB44815: return "health_healed_from_weak";
        case 0x1800C08C: return "health_damaged_to_medium";
        case 0x51B30566: return "forced_knocked_down";
        case 0x0DEB8B73: return "health_healed_by_player";
        case 0xC4D68F3E: return "health_healed_from_dying";
        case 0xC18BD918: return "health_healed_cell";
        case 0x16607545: return "health_damaged_to_sustain_injury";
        case 0x6F02BABE: return "health_bandaging_heals";
        case 0x7A4D57ED: return "health_bandaging_done";
        case 0x31CCE37E: return "craft_herb_done";
        case 0x6A9F0804: return "health_bandaging_start";
        case 0xFE3F714F: return "MPHealthFull";
        case 0x0C2C1490: return "HealthIsFull";
        case 0xB3319F6F: return "Impaled";
        case 0x37391E4C: return "Impaling";
        case 0x985D197E: return "AmmoIsFull_Resource";
        case 0xC42E5043: return "AmmoIsFull_Food";
        case 0x41AEFC1A: return "HealthContained";
        case 0x47FFD7A0: return "Jiggle";
        case 0xADD69910: return "JointHasBeenBroken";
        case 0x0AE45594: return "Launch";
        case 0xDC43E3B0: return "Launched";
        case 0xA6362693: return "LimitHit";
        case 0xF86B844D: return "MarkupTouchedByOther";
        case 0x27D97C89: return "MarkupTouched";
        case 0xC35D9FD2: return "MarkupTouchedByOther_unit";
        case 0xB8113D88: return "MarkupTouched_unit";
        case 0xF21BB87F: return "Max_loot";
        case 0x2A9156FD: return "monastary_shotgunyank_idle1_start";
        case 0x521B2392: return "monastary_shotgunyank_pullstage1_fail";
        case 0x009E340F: return "monastary_shotgunyank_pullstage1_succeed";
        case 0x70EE1EE8: return "monastary_shotgunyank_idle2_start";
        case 0x74FC176D: return "monastary_shotgunyank_pullstage2_start";
        case 0xE168483E: return "monastary_shotgunyank_pullstage2_fail";
        case 0x5319DF5D: return "monastary_shotgunyank_pullstage2_succeed";
        case 0x7DEAE50A: return "mortal_wound_cure";
        case 0x22EA1552: return "mortal_wound_enter_minigame";
        case 0x510EA2E9: return "mortal_wound_trigger";
        case 0x22C048F3: return "mortal_wound_override_trigger";
        case 0xB2ABA636: return "mortal_wound_override_clear";
        case 0x4E0EA3BE: return "mortal_wound_override_vect_params1";
        case 0x4E0EA3BD: return "mortal_wound_override_vect_params2";
        case 0xFA4959FA: return "Max_msg";
        case 0xD0DC41C9: return "MessageToMySectionScript";
        case 0x1A605527: return "MsgBreakJoint";
        case 0x0D8FDB62: return "MsgDisplayLogo";
        case 0x0F484EC7: return "MsgHideLogo";
        case 0xA50FB690: return "MsgIgnited";
        case 0xD9BF7A69: return "NotWindy";
        case 0x849CE690: return "NPCInRange";
        case 0x90FEC845: return "NPCIncomingDeathFromAbove";
        case 0xD8CA7D5E: return "NPCOnHitReact";
        case 0xC8029F05: return "NPCOnHitReactDone";
        case 0xA4CAC6BB: return "NPCOnHitReactKnees";
        case 0xAEB438BE: return "NPCOnHitReactProne";
        case 0x50E25AAE: return "Nambu_loot";
        case 0x8615AB0C: return "Nambu_msg";
        case 0x1C623163: return "NpcSimulatedDeathViaActionGraph";
        case 0x9863D4D3: return "NpcOnDeath";
        case 0x752401D9: return "NpcOnGround";
        case 0xC1BB024C: return "NpcOnMove";
        case 0xF1ED36AF: return "NpcOnNewTarget";
        case 0xC0D7E101: return "NpcOnTurn";
        case 0x6F8D4CD2: return "NpcOnChainAttack";
        case 0x414B3FF0: return "NpcOnStartChainAttack";
        case 0xF9B8BC6D: return "NpcForceMediumHitReactWhileAttacking";
        case 0x67D10139: return "NpcForceLightHitReactRunning";
        case 0xC0D722D7: return "NpcOnWall";
        case 0x28C09797: return "NpcOnWallDeath";
        case 0x760D7EC8: return "NpcOnWallIdle";
        case 0x4CD8AFDB: return "NpcOnRetreat";
        case 0x33C34131: return "NpcOnWallMelee";
        case 0x8031DFB5: return "NPCDiscardShieldFlaming";
        case 0x10BA6E14: return "NPCDiscardShield";
        case 0x1B11B9AE: return "Npc_StunnedKnees_end";
        case 0x7F9A8251: return "ObjectDroppedByNpc";
        case 0xB979AD8A: return "ObjectPickedUpByNpc";
        case 0x982F1878: return "ObjectThrownByNpc";
        case 0x75BB03EF: return "NpcOnWallMove";
        case 0x314CEE7C: return "evReactFire";
        case 0x2EE10D65: return "NPC_Alerted";
        case 0xC3BEF2B4: return "NumberToSpawn";
        case 0xD7967C66: return "ObjTrans_0";
        case 0xD7967C5F: return "ObjTrans_1";
        case 0xBFE3512C: return "ObjTrans_10";
        case 0xBFE3512D: return "ObjTrans_11";
        case 0xBFE3512E: return "ObjTrans_12";
        case 0xBFE35137: return "ObjTrans_13";
        case 0xBFE35138: return "ObjTrans_14";
        case 0xBFE35139: return "ObjTrans_15";
        case 0xBFE3513A: return "ObjTrans_16";
        case 0xBFE35133: return "ObjTrans_17";
        case 0xBFE35134: return "ObjTrans_18";
        case 0xBFE35135: return "ObjTrans_19";
        case 0xD7967C60: return "ObjTrans_2";
        case 0xBFE34F4B: return "ObjTrans_20";
        case 0xBFE34F4E: return "ObjTrans_21";
        case 0xBFE34F4D: return "ObjTrans_22";
        case 0xBFE34F58: return "ObjTrans_23";
        case 0xBFE34F57: return "ObjTrans_24";
        case 0xBFE34F5A: return "ObjTrans_25";
        case 0xBFE34F59: return "ObjTrans_26";
        case 0xBFE34F54: return "ObjTrans_27";
        case 0xBFE34F53: return "ObjTrans_28";
        case 0xBFE34F56: return "ObjTrans_29";
        case 0xD7967C61: return "ObjTrans_3";
        case 0xBFE34F6E: return "ObjTrans_30";
        case 0xBFE34F6B: return "ObjTrans_31";
        case 0xBFE34F6C: return "ObjTrans_32";
        case 0xBFE34F79: return "ObjTrans_33";
        case 0xBFE34F7A: return "ObjTrans_34";
        case 0xBFE34F77: return "ObjTrans_35";
        case 0xBFE34F78: return "ObjTrans_36";
        case 0xBFE34F75: return "ObjTrans_37";
        case 0xBFE34F76: return "ObjTrans_38";
        case 0xBFE34F73: return "ObjTrans_39";
        case 0x7B418934: return "OnLandDone";
        case 0xD7967C62: return "ObjTrans_4";
        case 0xBFE34F8D: return "ObjTrans_40";
        case 0xBFE34F8C: return "ObjTrans_41";
        case 0xBFE34F8B: return "ObjTrans_42";
        case 0xBFE34F9A: return "ObjTrans_43";
        case 0xBFE34F99: return "ObjTrans_44";
        case 0xBFE34F98: return "ObjTrans_45";
        case 0xBFE34F94: return "ObjTrans_49";
        case 0xBFE34F95: return "ObjTrans_48";
        case 0xBFE350B4: return "ObjTrans_55";
        case 0xBFE350B3: return "ObjTrans_54";
        case 0xBFE350B2: return "ObjTrans_53";
        case 0xBFE34F97: return "ObjTrans_46";
        case 0xD7967C5B: return "ObjTrans_5";
        case 0xBFE350B1: return "ObjTrans_52";
        case 0xBFE350B0: return "ObjTrans_51";
        case 0xBFE350AF: return "ObjTrans_50";
        case 0xD7967C5C: return "ObjTrans_6";
        case 0xD7967C5D: return "ObjTrans_7";
        case 0xD7967C5E: return "ObjTrans_8";
        case 0xD7967C57: return "ObjTrans_9";
        case 0xF50FD245: return "OnAnimDone";
        case 0xF51409D2: return "OnAnimLoop";
        case 0xE1B7570F: return "animHostedOverlay_loop";
        case 0xD607A0BE: return "OnChangeRagdollAnim";
        case 0x96EDA3D9: return "OnEnterDone";
        case 0x4CAEBF53: return "OnFoodEquipped";
        case 0x371E8D09: return "OnExitMoveSet";
        case 0x347A617A: return "OnIn";
        case 0x989C9B7F: return "OnPlayOnlyOnce";
        case 0x25D68F8C: return "OnRagdollChange";
        case 0x36C1C2A6: return "OnRagdollChangeBack";
        case 0x2DD36463: return "OnSwitchToAnimGraph";
        case 0xF5537C44: return "OnSwitchToBack";
        case 0x2FFEF92E: return "OnSwitchToBasejump";
        case 0xA5AF07D1: return "OnSwitchToBow";
        case 0x4A2C4572: return "OnSwitchToCombatMode";
        case 0x5CFC9939: return "OnSwitchToDodge";
        case 0xBE164578: return "OnSwitchToForward";
        case 0xCE9B765C: return "OnSwitchToGround";
        case 0xF550B365: return "OnSwitchToIdle";
        case 0xF53A6B84: return "OnSwitchToLeft";
        case 0x626F311D: return "OnSwitchToMelee";
        case 0xF53C266D: return "OnSwitchToMove";
        case 0x7C754D94: return "OnSwitchToOldSystem";
        case 0x253751A4: return "OnSwitchToRaiding";
        case 0xD47F3A4C: return "OnSwitchToRanged";
        case 0x632AEB0E: return "OnSwitchToRight";
        case 0x65DACE54: return "OnSwitchToSlope";
        case 0x68424572: return "OnSwitchToWallCrawl";
        case 0x347A8A21: return "Open";
        case 0x03E0E8B6: return "Opened";
        case 0xB5CE52C1: return "ParachuteRopeSnapA";
        case 0xB5CE52B4: return "ParachuteRopeSnapB";
        case 0xE1A21102: return "ProjectileFailed";
        case 0x786CF26E: return "ProjectileCelebrationCamEnded";
        case 0x416B6E7E: return "ProjectileCelebrationCamStarted";
        case 0x35998074: return "ProjectileCelebrationVictim";
        case 0x91376EC7: return "PhysicsActivated";
        case 0x77B4845A: return "Pickaxe_loot";
        case 0x3FC70BC4: return "Pickaxe_msg";
        case 0x5125AF3A: return "PickedUp";
        case 0x3480EFDA: return "Pull";
        case 0xFF8FFCA5: return "Pulled";
        case 0x9CF74220: return "Pulling";
        case 0x10BC71AE: return "pryable_door_close";
        case 0x187359C7: return "pryable_door_open";
        case 0xE274FBBC: return "pryable_door_start_opened";
        case 0xB26C1EE1: return "pryable_door_interact_start_failed";
        case 0xC2B199E2: return "pryable_door_interact_start";
        case 0xBFAA4FC5: return "ignite_release_player";
        case 0xF98707B1: return "pry_object_denied";
        case 0x1F4EC66B: return "ignite_object_denied_nevermind";
        case 0xA6D75577: return "ignite_object_denied";
        case 0x10307DB8: return "ignite_abort";
        case 0x4618E636: return "ignite_success";
        case 0xBAB4063C: return "ignite_begin_loop";
        case 0x7768D83F: return "pryable_door_begin_pry";
        case 0x4F34FC18: return "pryable_door_interact_success";
        case 0x9EFE9B05: return "pryable_door_interact_fail";
        case 0xC0687F18: return "Raiding_Horizontal_SticksAverage";
        case 0x32BA3FD8: return "Raiding_Success";
        case 0xE20B0975: return "Raiding_Vertical_SticksAverage";
        case 0x6F3A195C: return "Random_loot";
        case 0x4EDCAEF2: return "Random_msg";
        case 0xFF629445: return "ReleaseCamera";
        case 0xFC4A9F4A: return "Replay_RR_HVTLooted";
        case 0x25A33D50: return "RescueGrappleAllowed";
        case 0xEE53F97C: return "RescueGrappleInitiated";
        case 0x2D6895DD: return "RescueGrappleFailed";
        case 0x5146F973: return "ProjectileNotifyOwner";
        case 0x5FB7B93D: return "ResetGenerator";
        case 0x893B3848: return "ResetToIdle";
        case 0x46B2146B: return "Reset_to_Idle";
        case 0xFD9F9788: return "Result";
        case 0xC83F77F8: return "RopeBridgeDown";
        case 0xB9779164: return "RopeBridgeMarkerSwitch";
        case 0x6DBBCA37: return "RopeBridgeRight";
        case 0xA952403C: return "RopeBridgeLeft";
        case 0xFFC4AAE3: return "RopeBridgeUp";
        case 0xEF4304B0: return "Rope_PlayerAttached";
        case 0x8C4BFC0F: return "struggle_blend";
        case 0x2FC8FE2E: return "SetAttentionTarget";
        case 0x2CA32603: return "SetEnable";
        case 0xEB217FF1: return "ShardSpawned";
        case 0x297685B5: return "Shotgun_loot";
        case 0x7F2FB915: return "Shotgun_msg";
        case 0xAEB7A23A: return "Spawn";
        case 0xE056B4A5: return "SpawnedBlameInstance";
        case 0xF2144575: return "SpawnCount";
        case 0xF23BA348: return "SpawnDelay";
        case 0x67CDDB10: return "SpawnPosition";
        case 0xDF45C240: return "SpawnRotation";
        case 0xE81A89F1: return "SpawnedID";
        case 0xF54265A4: return "SpawnedInstanceID";
        case 0x3AB89409: return "SpawnedNewAttacker";
        case 0x3B110689: return "Spawner_ChildDied";
        case 0xDCEA76DD: return "Spawned_SetParentInstance";
        case 0x985CF3C2: return "SpawnedTotal";
        case 0xE79D5993: return "StartedFuse";
        case 0xEEDFFEB3: return "StartingFuse";
        case 0x53FE826E: return "StopLooping";
        case 0xE83C79BC: return "StopTheMovie";
        case 0x50DF9F78: return "StoppedFuse";
        case 0x744EF386: return "StoppingFuse";
        case 0xF5A365B6: return "SoundCue_DenBox";
        case 0xEC41DCA0: return "SoundCue_CliffsPilotOK";
        case 0x74C1CCC5: return "SoundCue_CliffsPilotFall";
        case 0xA0AC9B25: return "SoundCue_CliffsHouseFall";
        case 0xE6E0EA6F: return "SoundCue_ChasmFirstStalker";
        case 0x3F843369: return "throw_aim";
        case 0x70028FD8: return "throw_done";
        case 0x0361A1C8: return "portable_use_done";
        case 0x31F9F19F: return "TopBroken";
        case 0x0356B769: return "TopCracked";
        case 0xAD15BC56: return "HackQuickFire_EquipBow_HideQuickBow";
        case 0xD60DE19E: return "UniversalController";
        case 0x77A8586C: return "arrowcam";
        case 0x3164FF9F: return "arrowcamEnable";
        case 0x1CD7F8E7: return "arrowInBodyMovedToHand";
        case 0x68AE03B2: return "arrowMovedToPairedEnemyBone";
        case 0x4FF5D5EF: return "beam_bent";
        case 0x624E04C8: return "beam_broke";
        case 0xCD1CC700: return "beam_tilted";
        case 0x9CD0EAD5: return "beambend";
        case 0x5097AF2C: return "beambreak";
        case 0x9CEF16BB: return "beamtilt";
        case 0x872F36CD: return "Snake_People_Attacks_Disabled";
        case 0x197A4C2D: return "Snake_People_Attacks_Enable";
        case 0xE244EBA6: return "Bear_Kill_Attacks_Enable";
        case 0x34BC56FB: return "bent";
        case 0xA709E9A7: return "birds";
        case 0xA78B2E62: return "blood";
        case 0xA78C03CD: return "break";
        case 0xFAB641E5: return "breakAway";
        case 0x031E2E71: return "breakAwayDone";
        case 0xFAB89A11: return "breakDone";
        case 0xFAB0A5DB: return "breakring";
        case 0x67BCD49B: return "broadcast_flashbang_exploded";
        case 0x55FE2DDC: return "broadcast_broken";
        case 0xA78BED53: return "broke";
        case 0xFFB9A58E: return "camera_bone_02_switch_done";
        case 0xDD330936: return "camera_bone_02_switch";
        case 0xB7EB2C1F: return "camera_bone_01_switch_done";
        case 0xC1B81D61: return "camera_bone_01_switch";
        case 0x2EC4A1FD: return "camera_change";
        case 0x090FCF8A: return "CheckLevelProgression";
        case 0x7D8929D9: return "checkpoint01";
        case 0x7D8929CC: return "checkpoint02";
        case 0x7D8929CB: return "checkpoint03";
        case 0x7D8929CE: return "checkpoint04";
        case 0x7D8929CD: return "checkpoint05";
        case 0x7D8929D0: return "checkpoint06";
        case 0x7D8929CF: return "checkpoint07";
        case 0x7D8929D2: return "checkpoint08";
        case 0x7D8929D1: return "checkpoint09";
        case 0x7D8929B9: return "checkpoint10";
        case 0xD64E6826: return "camera_reset";
        case 0xCC0A8F23: return "camera_close";
        case 0xA6FA9C31: return "close";
        case 0x982EAD7A: return "collapse";
        case 0x5C1F72BA: return "dodge_counter_prompt";
        case 0xA7004A67: return "cvars";
        case 0x166A17E5: return "den_ascent_cover";
        case 0x1FC4E8D5: return "den_ascent_climbing";
        case 0x16BBBA46: return "den_ascent_brake";
        case 0xAC14F371: return "den_ascent_idle";
        case 0xA2584158: return "den_ascent_dodgeIntro";
        case 0x5F8CFA48: return "den_ascent_sliding";
        case 0xD8567F0E: return "den_ascent_dodgeR";
        case 0xD8567F14: return "den_ascent_dodgeL";
        case 0x7B7B5A3C: return "den_postsack_pull_succeed";
        case 0x54078CFE: return "den_postsack_pull_fail";
        case 0xE6853517: return "den_postsack_pull_start";
        case 0xD68F8340: return "den_postsack_idle_start";
        case 0xF4206DD0: return "den_postsack_startRecovery";
        case 0x4AC971B3: return "den_highwade_outro";
        case 0x92124535: return "den_highwade_walk_ceiling";
        case 0xDCB06434: return "den_highwade_walk";
        case 0x78299945: return "den_highwade_stumble";
        case 0x4EE65AEB: return "den_highwade_cough";
        case 0xDC4A2F76: return "den_highwade_idle";
        case 0x58AC8943: return "den_seize_underrock_fail";
        case 0xADC2A987: return "den_seize_underrock_kick_fail_to_intro";
        case 0xDF8F49AE: return "den_seize_underrock_kick_fail";
        case 0x20240F69: return "den_seize_underrock_kick_success";
        case 0x9D0BBF1A: return "den_seize_underrock_intro_idle_done";
        case 0x9F23BA80: return "den_seize_underrock_into_kick";
        case 0x711B3BE0: return "den_player_on_cage";
        case 0x83C78990: return "den_seizea_idle_start";
        case 0x309E4BF9: return "instance_to_destroy_later";
        case 0xB0F8F8E4: return "destroy";
        case 0xF0EEF5AB: return "destroyDone";
        case 0xBD0C41AA: return "destruct";
        case 0xBA8C4078: return "disable";
        case 0x34BC88D6: return "done";
        case 0xCDB2B9BE: return "done_off";
        case 0x06CDD113: return "done_back";
        case 0x0918E038: return "done_forward";
        case 0x98EBAF44: return "done_on";
        case 0x17217D31: return "done_smoulder";
        case 0xDFF6F336: return "dropped";
        case 0x34BC765F: return "drop";
        case 0x8A7BF924: return "drop_slow";
        case 0x9170F773: return "check_if_lootable";
        case 0x483F0CB5: return "enable";
        case 0x90A22A3B: return "enable_action_listener";
        case 0x601F06D5: return "endurance_ladder_ISS_start";
        case 0x92E87F0E: return "endslide";
        case 0xA8A02846: return "EnterWindVolume";
        case 0x6DDAA7F9: return "ExitWindVolume";
        case 0x3B85466D: return "enemySeizedPlayer";
        case 0xFF33E177: return "evActionAbortAdrenaline";
        case 0xE835EE4D: return "evActionAbortVault";
        case 0xA46FD598: return "evActionAimTweakTarget";
        case 0x70C2732D: return "evActionAllowVO";
        case 0x04CED3F2: return "evActionAnalog";
        case 0x1F62583A: return "evActionBecomeRagdoll";
        case 0xE295B11F: return "evActionBecomingAssault";
        case 0xA8191AAB: return "evActionBlockVO";
        case 0xFC6CB2A3: return "evActionCinePuppetMode";
        case 0x9C067F28: return "evActionConfirmInteract";
        case 0x5FD16F1C: return "evActionAbortInteract";
        case 0xF9CE2336: return "evActionCompleteInteract";
        case 0xBF755B80: return "evActionCancelInteract";
        case 0xE3252958: return "evActionDeactivate";
        case 0x5B974F5F: return "evActionDeactivateGear";
        case 0x32B496B2: return "evActionDestroy";
        case 0x15D8ADAD: return "evActionDestroySelf";
        case 0x31F9CD4D: return "evActionDie";
        case 0xBAE0AB13: return "evActionDieSilent";
        case 0x077080D5: return "evActionDirection";
        case 0x4A3D38DE: return "evActionDodgeStarted";
        case 0x34234C28: return "evActionDoneSlomo";
        case 0x48593F24: return "evActionDropItem";
        case 0x58E7086F: return "evActionEdgeDeflection";
        case 0xAE02FEDC: return "evActionEquipInvItem";
        case 0x3EA9EEA2: return "evActionFXID";
        case 0x66688846: return "evActionFlairChainDone";
        case 0x67C26F04: return "evActionFlairChaining";
        case 0xB328B68F: return "evActionFlankingAttack";
        case 0x06D70465: return "evActionFlankingStarted";
        case 0xBE56F2D1: return "evActionFlankingFinished";
        case 0x168D5AC7: return "evActionFreeFall";
        case 0xD4B326C3: return "evActionFullHealth";
        case 0x080583C8: return "evActionGainInvItem";
        case 0x924B4BB4: return "evActionGainThrownLight";
        case 0x00316522: return "evActionGotoState";
        case 0x9E33DB0C: return "evActionGotoUnderworld";
        case 0x18B0908A: return "evActionGrabPhaseTwo";
        case 0x2BE70345: return "evActionHealthAdd";
        case 0x1F238A81: return "evActionOffscreenAttackStarted";
        case 0x595024A2: return "evActionRequestRevive";
        case 0xE9ED88C4: return "evActionConfirmRevive";
        case 0x08880135: return "evActionCancelRevive";
        case 0x5859BF68: return "evActionCompleteRevive";
        case 0x6C476DD8: return "evActionDefibrilatorOff";
        case 0x77ECA019: return "evActionDefibrilatorOn";
        case 0xBB665D32: return "evActionPrepareRevive";
        case 0x41E1994D: return "evActionStartRevive";
        case 0xED76773B: return "evActionSelfRevive";
        case 0x7630DBCB: return "evActionPlayerHasRevived";
        case 0x65B97E1E: return "evActionHealthAddPercent";
        case 0x3EC04619: return "evActionHide";
        case 0x04289044: return "evActionHideAllInvItems";
        case 0xEF1FCED8: return "evActionHideAtom";
        case 0x79EE9B4B: return "evActionHideInvItem";
        case 0x16AEABB2: return "evActionInstantDie";
        case 0xCA446BE5: return "evActionInstantFade";
        case 0xE8503D44: return "evActionInvestigationStarted";
        case 0x1AE10989: return "evActionInvestigationStartedHighAlert";
        case 0xF4111178: return "evActionInvestigationStartedLowAlert";
        case 0x396B96F8: return "evActionInvestigationReachedInvestigateArea";
        case 0x4BD57D46: return "evActionJumpDone";
        case 0x0DDD8892: return "evActionLeaveRagdoll";
        case 0xF1EA5A16: return "evActionLookAround";
        case 0x848E0F75: return "evActionLoseAllInvItems";
        case 0x2EFEE278: return "evActionLoseInvItem";
        case 0xEF1D0F0E: return "evActionMeleeJump";
        case 0xCC1563EE: return "evActionMoveToAttackRange";
        case 0xB82E7C4C: return "evActionMoveToCover";
        case 0x587E7733: return "evActionMoveToCoverToAttack";
        case 0x5C586194: return "evActionMoveToGuardPoint";
        case 0x3FBA9E91: return "evActionMoveToLOSStarted";
        case 0xC5F90120: return "evActionMoveToPmarker";
        case 0x391147A4: return "evActionMoveToPosition";
        case 0x5ADF44FF: return "evActionMoveToRotation";
        case 0x55DA546B: return "evActionMoveToMeleeAttack";
        case 0xA8E99B85: return "evActionNewAutoface";
        case 0x0BC3CDD0: return "evActionNoFade";
        case 0x0247A17A: return "evActionOverlayEffect";
        case 0xA7DA5572: return "evActionPinned";
        case 0x93275CC1: return "evActionPlayerLanded";
        case 0xC315D4EE: return "evActionPlayHostAnimation";
        case 0xAD255309: return "evActionPuppetMode";
        case 0x866DEDB9: return "evActionRangedLOSLost";
        case 0x22484EF1: return "evActionReactivate";
        case 0xA87FFBCA: return "evActionReduceHealth";
        case 0x29DE61E1: return "evActionRegenHealthChunk";
        case 0x20CD10CA: return "evActionRequest";
        case 0x24A3D1FB: return "evActionRequestEdgeGrab";
        case 0x2348D9A2: return "evActionRequestStateChange";
        case 0x775FD30E: return "evActionResetGravity";
        case 0x211A4263: return "evActionResetIK";
        case 0x1AC143E3: return "evActionResetInvincible";
        case 0xBC78DE55: return "evActionResetLookAtPoint";
        case 0x665EA390: return "evActionRotateToPoint";
        case 0x9BF06750: return "evActionRunToPmarker";
        case 0xD01C1F93: return "evActionSetAtomState";
        case 0x2AE551F2: return "evActionSetAtomStateDead";
        case 0x93E62B91: return "evActionSetAttachTarget";
        case 0xA83945B5: return "evActionSetGravity";
        case 0x8B9AB582: return "evActionSetIK";
        case 0x61B5F1AA: return "evActionSetIdle";
        case 0xC6217678: return "evActionSetJumpDirection";
        case 0x580AF99F: return "evActionSetLoadoutAmount";
        case 0xC4492450: return "evActionSetLookAtPoint";
        case 0x404A8DE2: return "evActionSetPlayerMood";
        case 0xBEA32477: return "evActionSetPlayerTimeMult";
        case 0x68C4FD5D: return "evActionSetPosition";
        case 0x75CC6209: return "evActionSetRotation";
        case 0xE67C1B72: return "evActionSetRotationSpeed";
        case 0xAF3BC00A: return "evActionSetSpeedAdjustment";
        case 0x05B1DA96: return "evActionSetTurnSpeed";
        case 0x39FFB401: return "evActionSetXVelocity";
        case 0xED15B1A0: return "evActionSetYVelocity";
        case 0x62355431: return "evActionSetZVelocity";
        case 0x8BB8EA8B: return "evActionShove";
        case 0x0E565B90: return "evActionSplash";
        case 0x7AC3C806: return "evActionStreamIDUpdate";
        case 0x6E60F1FB: return "evActionSuppressionStarted";
        case 0xD223B035: return "evActionSuppressionEnded";
        case 0xBEE31933: return "evActionThrowDone";
        case 0x5E5FE696: return "evActionUnHideAllInvItems";
        case 0xFD3AF82C: return "evActionUnHideInvItem";
        case 0xCF53C53A: return "evActionUseGear";
        case 0x012EBDCB: return "evActionWalkToPmarker";
        case 0xB2F252FB: return "evActionWalkToPosition";
        case 0x58F8B0C2: return "evAnimationAlarmDone";
        case 0xE5F460E4: return "evAnimationAlarmInteractAttach";
        case 0x31AB36D8: return "evAnimationAlarmInteractDetach";
        case 0x4A031BC8: return "evAnimationControllerDone";
        case 0x796FC3B0: return "evAnimationDone";
        case 0x564D0498: return "evAnimationDoneEx";
        case 0x65187F84: return "evAnimationInstanceSwitch";
        case 0x1F94047D: return "evAnimationInterpDone";
        case 0x137ABAED: return "evAnimationPatternEnding";
        case 0x43650338: return "evAnimationRollOver";
        case 0x5F9FABC9: return "evAnimationRollOverEx";
        case 0xEB47A105: return "evAnimationSetMode";
        case 0xE0D2C769: return "evAnimationTransitionOut";
        case 0x34E12E03: return "evBendieApplyExternalForce";
        case 0xFF0634B0: return "evBendieCharacterForce";
        case 0x107A4740: return "evBendieRequestPlayLaraAnim";
        case 0x6A5DE074: return "evBoneCameraDone";
        case 0x45DC8088: return "evCameraFinisherDeathFromAbove";
        case 0x047AE379: return "evCameraFinisherProneInitiated";
        case 0x7EFE63A2: return "evCameraFinisherKneesInitiated";
        case 0x51A1400F: return "evCharacterCustomizationComponentDeleted";
        case 0x4ECC48AE: return "evCollideDamage";
        case 0x48C9CB22: return "evCollideDisableHPrimID";
        case 0x3AA6F6E4: return "evCollideEnableHPrimID";
        case 0x273B63C8: return "evCollideEvents";
        case 0x48A1249B: return "evCollideForce";
        case 0xAFF2CD81: return "evCollideInstanceStats";
        case 0x3AFE2EA8: return "evCollideInstanceStatsEnd";
        case 0x24CDA98F: return "evCollideInstanceStatsStart";
        case 0x12F68B34: return "evCollideLinkedInstance";
        case 0x21C9244D: return "evCollideNoDamage";
        case 0x0E8FB55F: return "evCollideOff";
        case 0x583EC5DE: return "evCollideOffset";
        case 0xDA651FCB: return "evCollideOn";
        case 0x4D84BED4: return "evCollideProxySupport";
        case 0x88EFA31B: return "evCollideSegmentOff";
        case 0xDE66B89A: return "evCollideSegmentOn";
        case 0x20036306: return "evCollideSignal";
        case 0x27F1594E: return "evCollideWithOffensiveSphere";
        case 0x258F1237: return "evCombatTriggerAnimatedShot";
        case 0xDADE110B: return "evCombatAnimSetChanged";
        case 0x87D14C3F: return "evConsumableComponentIsEmpty";
        case 0x4EB171A1: return "evConsumableComponentIsFull";
        case 0xFBCD0005: return "evConsumableComponentFillStarted";
        case 0xDDF36BE7: return "evConsumableComponentDrainStarted";
        case 0x830D3DE0: return "evConsumableComponentFillDrainStopped";
        case 0x0228E69D: return "evControlAbortLink";
        case 0x8B275AE4: return "evControlAccumulateDone";
        case 0xC9F46B92: return "evControlButtonRing";
        case 0xA09458BC: return "evControlCheat";
        case 0xB32F5071: return "evControlDeInit";
        case 0xA020A235: return "evControlDelay";
        case 0x374FB501: return "evControlDestroy";
        case 0x16A549C6: return "evControlDisableSoundEffects";
        case 0x1AB747AA: return "evControlDisableSpecialEffects";
        case 0xD877D16F: return "evControlEOTProcess";
        case 0x1877DAF2: return "evControlEnableSoundEffects";
        case 0x6ADEA0C5: return "evControlEnableSpecialEffects";
        case 0x7ADD4939: return "evControlFastTraversal";
        case 0x13D5C28B: return "evControlGotToZero";
        case 0xC7E25560: return "evControlInit";
        case 0x5E75009A: return "evControlInitSystem";
        case 0x6DAB82F0: return "evControlInvUseOff";
        case 0xBAA9F6EC: return "evControlInvUseOn";
        case 0xC7CDE93E: return "evControlLink";
        case 0xD5406F07: return "evControlLookAround";
        case 0xCACBD50E: return "evControlPause";
        case 0xDB003CB7: return "evControlPostProcess";
        case 0x93B08E3A: return "evControlPreProcess";
        case 0x6F2DCAB8: return "evControlProcess";
        case 0x5B564205: return "evControlRelocateLocal";
        case 0x6CFC1AF0: return "evControlRelocatePointers";
        case 0x22AEF2F3: return "evControlRemove";
        case 0xC7CEDCE7: return "evControlRing";
        case 0x78D0D5AE: return "evControlRotateTowardCameraCommit";
        case 0x1B75EE73: return "evControlRotateTowardCameraDo";
        case 0x23B77AA5: return "evControlRumble";
        case 0x8DBA43B4: return "evControlSaveData";
        case 0x247DC5B1: return "evControlSwitch";
        case 0xC7CE395D: return "evControlSync";
        case 0xF53A298C: return "evControlTargettedJumpRing";
        case 0x4952177C: return "evControlUnlink";
        case 0x2FA5F05C: return "evControlUpdateTransforms";
        case 0xBF60CE70: return "evControlWindupDone";
        case 0x2A3EA2EB: return "evCounterInitiated";
        case 0xD880B565: return "evDebugDrawMovingMarkers";
        case 0x90FF1BE8: return "evDiedRight";
        case 0xC13E271B: return "evDiedLeft";
        case 0x3C9A80AB: return "evDied";
        case 0xFC5CDC9C: return "evEnemyAlert";
        case 0x67613FF3: return "evEnemyCollideWithOffensiveSphere";
        case 0xCEA6A56D: return "evEnemyCollideWithPlayer";
        case 0x6D36E242: return "evEnemyDecapitation";
        case 0xEA666DE5: return "evEnemyDeferredInstantDie";
        case 0xBBFAFF2E: return "NpcEnemyRecognized";
        case 0x982814C3: return "evFinisherDeathStart";
        case 0x64E508EA: return "evEnemyHurt";
        case 0xDA837A9B: return "evEngageMarkupAttach";
        case 0x66A8C4C0: return "evEngageMarkupDetach";
        case 0x0B6EDF59: return "evEngageMonsterObject";
        case 0xA70E530B: return "evEngagePickupObject";
        case 0xF6AD9B45: return "evEngageTrapObject";
        case 0xCC9DF792: return "evFXEvents";
        case 0xC908E897: return "evFXHit";
        case 0x71AF69CF: return "evFinisherInitiatedDeathFromAboveFailure_FromGround";
        case 0x5137DB90: return "evFinisherInitiatedDeathFromAboveFailure";
        case 0x218F0370: return "evFinisherInitiatedDeathFromAboveRopePull";
        case 0xC8F0D1E1: return "evFinisherInitiatedDeathFromAboveKnife";
        case 0x21D192B4: return "evFinisherInitiatedDeathFromAboveKonstantin";
        case 0x2C293D31: return "evFinisherInitiatedDeathFromAboveStunStep1";
        case 0x2C293D32: return "evFinisherInitiatedDeathFromAboveStunStep2";
        case 0x017E5CCA: return "evFinisherInitiatedSMG";
        case 0xAE84F71A: return "evFinisherInitiatedConcealmentKill";
        case 0xF31B78D4: return "evFinisherInitiatedSilentKill";
        case 0xCBFA2A22: return "evFinisherInitiatedSilentKillKonstantin";
        case 0x2C8C26D9: return "evFinisherInitiatedPistol";
        case 0x1DCA3FE3: return "evFinisherInitiatedPortable";
        case 0x3289F5AE: return "evFinisherInitiatedShotgun";
        case 0x0FF300BD: return "evSeizeMeterActionBegin";
        case 0x978AF169: return "evNpcSeizeAttackFailed";
        case 0x64C7E424: return "evNpcSeizeAttackSucceeded";
        case 0xA24C3747: return "evNpcAttemptedOffscreenSeize";
        case 0x09954582: return "evNpcChargeToSeize";
        case 0x14EF5A2C: return "evNpcSeizeIdle";
        case 0x838FB39A: return "evNpcSeizeTaunt";
        case 0xE04AAF16: return "evSeizeAttackDenied";
        case 0x018108E2: return "evFinisherInitiatedBow";
        case 0xF69BEB53: return "evFinisherInitiatedStanding";
        case 0xB8AA57A5: return "evDodge_FinisherInitiated_Back";
        case 0xD4224F4F: return "evDodge_FinisherInitiated_Forward";
        case 0xC075360B: return "evDodge_FinisherInitiated_Right";
        case 0xB89F63F0: return "evDodge_FinisherInitiated_Left";
        case 0x7A6E6AFA: return "evFinisherInitiated";
        case 0x73BB37B1: return "evFragmentToActionGraph";
        case 0x4295AEC9: return "evGetAtomData";
        case 0x9627D47A: return "evGetManualKnockback";
        case 0x4CEF759A: return "evSurvivalInstinctStart";
        case 0x928AC9A9: return "evSurvivalInstinctNormalHighlightColor";
        case 0xEDB5240D: return "melee_struggle_seize";
        case 0xA1B5689D: return "reaction_victim_in_killer_instinct_adrenaline";
        case 0x33473343: return "reaction_victim_in_killer_instinct_enter";
        case 0x240D12ED: return "reaction_incapacitated_by_melee";
        case 0x466655D2: return "reaction_stunned_by_melee";
        case 0x99B5D582: return "evSurvivalInstinctEnd";
        case 0xA9335B0B: return "evGrappleProjectileAttachedToTerrain";
        case 0x68BB0BEF: return "evGrappleProjectileAttachedToOtherObject";
        case 0x01CCF42B: return "evGrappleProjectileAttachedToGrapplePoint";
        case 0xA7C65F09: return "evGrappleAttach";
        case 0x263150F3: return "evGrappleEquip";
        case 0x1AA2A638: return "GrappleFired";
        case 0xA489F931: return "Grapple_Wall_Shuffle_Retrigger";
        case 0x3925945D: return "evGrappleFire";
        case 0x396D3A97: return "evGrappleKill";
        case 0x6949FF51: return "evGrappleMaxLength";
        case 0x7DA01CAD: return "evGrappleOff";
        case 0x3923CD66: return "evGrapplePull";
        case 0x2B07EBD5: return "evGrapplePullEnd";
        case 0xE15445E2: return "evGrappleRappel";
        case 0x851F04C3: return "evGrappleRappelEnd";
        case 0xB5615E4C: return "evGrappleRelease";
        case 0xE7412391: return "evGrappleReload";
        case 0xB51FBE6F: return "evGrappleRetract";
        case 0x5988CAB4: return "evGrappleAxeThrown";
        case 0x2ACCFC92: return "evGrappleAxeAttached";
        case 0xF5B9D430: return "evGrappleAxeDetached";
        case 0xFE5D9B5C: return "evGrappleAxeRecovered";
        case 0x552C8F4F: return "evGrappleAxeThrowFinished";
        case 0x29F2C556: return "evGrappleAxeRangeLimit";
        case 0x9FD5E4AA: return "evGrappleSwingThrowRequested";
        case 0xDE41630A: return "evGrappleTarget";
        case 0xB50A287F: return "evGrappleTargetAvailable";
        case 0x8D1E8E96: return "evGrappleDisconnectFromMe";
        case 0x8D6CCE0B: return "evGrappleAttachedToMe";
        case 0x5763AD34: return "evGrappleUnequip";
        case 0x025BFCA5: return "evHoldANALOGUEL";
        case 0x025BFC9B: return "evHoldANALOGUER";
        case 0xC0B3CACC: return "evHoldActionGraph_CirclePressed";
        case 0x94B6F43B: return "evHoldActionGraph_CrossPressed";
        case 0x5C4AB498: return "evHoldActionGraph_SquarePressed";
        case 0x2CA604CF: return "evHoldActionGraph_TrianglePressed";
        case 0xADACDBAA: return "evHoldAction_ActiveAttach";
        case 0x69AC05EC: return "evHoldAction_ClimbOver";
        case 0x39B692C1: return "evHoldAction_Crouch";
        case 0x79E26DA0: return "evHoldAction_DropOff";
        case 0xAAAF3700: return "evHoldAction_FastTraversal";
        case 0x8ACF7424: return "evHoldAction_IntendToJump";
        case 0xDAD876B4: return "evHoldAction_Jump";
        case 0xDAE35595: return "evHoldAction_Roll";
        case 0x78685369: return "evHoldAction_SavingGrab";
        case 0xDBF6D284: return "evHoldAction_Sprint";
        case 0x9117A27A: return "evHoldAssert_Break";
        case 0xA2866688: return "evHoldAssert_Dump";
        case 0x76197677: return "evHoldAssert_Ignore";
        case 0x461BACFE: return "evHoldAssert_IgnoreAll";
        case 0xF29D0D18: return "evHoldCIRCLE";
        case 0xF8B9E607: return "evHoldCROSS";
        case 0xD7D93FC8: return "evHoldCameraBack";
        case 0x269F455D: return "evHoldCameraForward";
        case 0x3937FADA: return "evHoldCameraLeftRight";
        case 0x1E80616E: return "evHoldCameraTruckLeftRight";
        case 0xA5352EA6: return "evHoldCameraTruckUpDown";
        case 0x81532466: return "evHoldCameraUpDown";
        case 0x3369585A: return "evHoldCameraZoomIn";
        case 0x0A83E85E: return "evHoldCameraZoomOut";
        case 0xF8833625: return "evHoldCamera_Reset";
        case 0x7A206B9A: return "evHoldCombat_BowCharge";
        case 0xD8C460B6: return "evHoldCombat_BowPull";
        case 0x9FE03C72: return "evHoldCombat_BowRelax";
        case 0x7CEA50EF: return "evHoldCombat_BowRelease";
        case 0xC35D0411: return "evHoldCombat_Evade";
        case 0xD137CA03: return "evHoldCombat_GunFire";
        case 0x27C992FA: return "evHoldCombat_GunFire_ReloadInterrupt";
        case 0xAA13768E: return "evHoldCombat_MeleeAnalogDir";
        case 0xAA14DC3F: return "evHoldCombat_MeleeAnalogMag";
        case 0x0FEB0284: return "evHoldCombat_Melee_Equip";
        case 0x5449AFC8: return "evHoldCombat_Melee_Finisher";
        case 0x15BCCDCC: return "evHoldCombat_Melee_Parry";
        case 0x32FBE62F: return "evHoldCombat_Melee_Riposte";
        case 0x156A1F16: return "evHoldCombat_Melee_Swing";
        case 0x3939F1BE: return "evHoldCombat_RangedAimDir";
        case 0xDFB210C4: return "evHoldCombat_RangedAimSpeed";
        case 0xB8A6D061: return "evHoldCombat_Reload";
        case 0x913B0766: return "evHoldCombat_TargetLock";
        case 0x4DAD5EF2: return "evHoldCombat_ToggleRangedWeapon";
        case 0x7B007E43: return "evHoldCombat_WeaponDraw";
        case 0xE7094D38: return "evHoldCombat_WeaponHolster";
        case 0x3BE7B100: return "evHoldDOWN";
        case 0x94CC108D: return "evHoldDPAD_DOWN";
        case 0x8938AA0F: return "evHoldDPAD_LEFT";
        case 0x6403198F: return "evHoldDPAD_RIGHT";
        case 0x5C73D5FA: return "evHoldDPAD_UP";
        case 0x4DD880B6: return "evHoldDead_Button";
        case 0x492299D7: return "evHoldDebug_FastForward";
        case 0xF9ACBB5C: return "evHoldDebug_ScreenShot";
        case 0xB1ACFEC0: return "evHoldDebug_ToggleMenu";
        case 0xB1C0705F: return "evHoldDebug_ToggleSkew";
        case 0xA18F6587: return "evHoldEnable_BowCharge";
        case 0x1AA382C1: return "evHoldEvents";
        case 0xAAF9C514: return "evHoldGrapple_Detach";
        case 0xC694B986: return "evHoldGrapple_Pull";
        case 0xF2A3DDDE: return "evHoldGrapple_Throw";
        case 0xA8EA901D: return "evHoldKeyboardMenuDown";
        case 0xAAC34549: return "evHoldKeyboardMenuLeft";
        case 0x7A357EB8: return "evHoldKeyboardMenuRight";
        case 0xA9AF2BE4: return "evHoldKeyboardMenuUp";
        case 0xA568BD97: return "evHoldL1";
        case 0xA568BD8E: return "evHoldL2";
        case 0xA568BDDE: return "evHoldLB";
        case 0x458CD74B: return "evHoldLEFT";
        case 0xA568BDCC: return "evHoldLT";
        case 0xFB216E54: return "evHoldMenuAltEngage";
        case 0x071EAE38: return "evHoldMenuCancel";
        case 0xE9686A4F: return "evHoldMenuCheatButton";
        case 0x3A49A8D1: return "evHoldMenuClear";
        case 0x3A497869: return "evHoldMenuClick";
        case 0xC5242D44: return "evHoldMenuDelete";
        case 0x7DB8C7B4: return "evHoldMenuDown";
        case 0x197CC8B2: return "evHoldMenuEndStep";
        case 0xCC7C9E19: return "evHoldMenuEngage";
        case 0x4B20CF1B: return "evHoldMenuHundreds";
        case 0x7D94D610: return "evHoldMenuLeft";
        case 0x4539FF33: return "evHoldMenuRight";
        case 0x991A90C9: return "evHoldMenuSelect";
        case 0x453667B3: return "evHoldMenuStart";
        case 0x7DC015AD: return "evHoldMenuStep";
        case 0x7D911F80: return "evHoldMenuTens";
        case 0x0E9D2FD9: return "evHoldMenuThousands";
        case 0x9FDFC51C: return "evHoldMenuUp";
        case 0xED58FA54: return "evHoldMode_Inventory";
        case 0x57E86C3F: return "evHoldMode_Map";
        case 0xB9A0C080: return "evHoldMode_Pause";
        case 0x54AAD4AD: return "evHoldMode_Play";
        case 0x399E5010: return "evHoldModelView_CameraDollyIn";
        case 0x2C55B798: return "evHoldModelView_CameraDollyOut";
        case 0xCE3FD665: return "evHoldModelView_CameraLeftRight";
        case 0xAAE5D0B6: return "evHoldModelView_CameraTruckLeftRight";
        case 0x974200A2: return "evHoldModelView_CameraTruckUpDown";
        case 0x5E8AB059: return "evHoldModelView_CameraUpDown";
        case 0x398D7A14: return "evHoldModelView_CameraZoomIn";
        case 0x2AB2C806: return "evHoldModelView_CameraZoomOut";
        case 0x6D549356: return "evHoldModelView_ChangeAnimMode";
        case 0x09E00835: return "evHoldModelView_ControlObject";
        case 0x26419C67: return "evHoldModelView_NextAnim";
        case 0x1DE0A160: return "evHoldModelView_NextObject";
        case 0xF8634514: return "evHoldModelView_PlayAnim";
        case 0x9C953AB1: return "evHoldModelView_PrevAnim";
        case 0x28FB549A: return "evHoldModelView_PrevObject";
        case 0xCD520E79: return "evHoldModelView_ResetCamera";
        case 0xF1FC7771: return "evHoldModelView_ResetRotation";
        case 0xE620500D: return "evHoldModelView_StepBackAnim";
        case 0x36F13203: return "evHoldModelView_StepForwardAnim";
        case 0x579468F6: return "evHoldModelView_SwitchSection";
        case 0x36AEA216: return "evHoldModelView_ZoomToObject";
        case 0x425A827B: return "evHoldMove_Dir_3D";
        case 0xE63619BF: return "evHoldMove_Dir_Ground";
        case 0xE2ABBD37: return "evHoldMove_Dir_InAir";
        case 0x0A1426E6: return "evHoldMove_Dir_Markup";
        case 0x73F0DFD6: return "evHoldMove_Dir_Relative";
        case 0x6C97A62F: return "evHoldMove_Dir_Wall";
        case 0x17816009: return "evHoldMove_Rate";
        case 0x3C35D9E5: return "evHoldMove_Rate_Delta";
        case 0x378E3766: return "evHoldMove_Rate_InAir";
        case 0x246772DC: return "evHoldNpc_AlternateAttack";
        case 0xFCD92705: return "evHoldNpc_Block";
        case 0x747692A6: return "evHoldNpc_Celebrate";
        case 0xCFDC970B: return "evHoldNpc_CombatIdle";
        case 0xFD8DBAD2: return "evHoldNpc_Guard";
        case 0x425AA4D7: return "evHoldNpc_Idle";
        case 0x4250A131: return "evHoldNpc_Jump";
        case 0xFB048935: return "evHoldNpc_Melee";
        case 0x4252C0CE: return "evHoldNpc_Move";
        case 0x23813BD6: return "evHoldNpc_NavHelper";
        case 0xFADADFB2: return "evHoldNpc_Parry";
        case 0x2C3A42B7: return "evHoldNpc_PreferredAttack";
        case 0xC4F4CBCC: return "evHoldNpc_ReactiveAttack";
        case 0xD40C790A: return "evHoldNpc_Riposte";
        case 0xBDDEA56D: return "evHoldNpc_SeizeAttack";
        case 0x183E6327: return "evHoldNpc_Spawn";
        case 0x42A6C89D: return "evHoldNpc_Stun";
        case 0xCD729950: return "evHoldNpc_StunRecover";
        case 0x294A5138: return "evHoldNpc_ThrownAttack";
        case 0x42542E49: return "evHoldNpc_Turn";
        case 0x5F373557: return "evHoldProgrammerDebugCircle";
        case 0x24EC66B1: return "evHoldProgrammerDebugCross";
        case 0x465E73F6: return "evHoldProgrammerDebugDPadDown";
        case 0x46A3B5A6: return "evHoldProgrammerDebugDPadLeft";
        case 0x8E97E9E9: return "evHoldProgrammerDebugDPadRight";
        case 0x5C4471B6: return "evHoldProgrammerDebugDPadUp";
        case 0x00ABE9FB: return "evHoldProgrammerDebugLB";
        case 0x46F808EF: return "evHoldProgrammerDebugLStickBack";
        case 0xA70477DC: return "evHoldProgrammerDebugLStickForward";
        case 0x46E7B0BE: return "evHoldProgrammerDebugLStickLeft";
        case 0x65BB2DE9: return "evHoldProgrammerDebugLStickRight";
        case 0x00ABE491: return "evHoldProgrammerDebugLT";
        case 0x00ABE72B: return "evHoldProgrammerDebugRB";
        case 0x00ABE6DD: return "evHoldProgrammerDebugRT";
        case 0xBD483934: return "evHoldProgrammerDebugSquare";
        case 0x5B197D62: return "evHoldProgrammerDebugTriangle";
        case 0x35299752: return "evHoldPrototype_AccurateAimAlt";
        case 0xA568BE4F: return "evHoldR1";
        case 0xA568BE52: return "evHoldR2";
        case 0xA568BEA2: return "evHoldRB";
        case 0xB7F5D5B1: return "evHoldRIGHT";
        case 0xC0F70863: return "evHoldRSTICK_DOWN";
        case 0xC0FAA4AB: return "evHoldRSTICK_LEFT";
        case 0x823F7F90: return "evHoldRSTICK_RIGHT";
        case 0xA738329F: return "evHoldRSTICK_UP";
        case 0xA568BE94: return "evHoldRT";
        case 0xDFAE7CF8: return "evHoldRespawn";
        case 0x81037BF5: return "evHoldRope_Climb";
        case 0x6F4C7B2E: return "evHoldRope_Swing";
        case 0x620D78CA: return "evHoldSELECT";
        case 0x6FCABB60: return "evHoldSQUARE";
        case 0xB1AA72F4: return "evHoldSTART";
        case 0x9220524C: return "evHoldSelect_Ammo";
        case 0x8823B533: return "evHoldSelect_Bow";
        case 0x8823BE3B: return "evHoldSelect_Gun";
        case 0x16E95B60: return "evHoldSelect_Melee";
        case 0x75EF1E94: return "evHoldSwim_Dive";
        case 0xF5AD71B4: return "evHoldSwim_Forward";
        case 0xC89B44C2: return "evHoldSwim_PitchRate";
        case 0x694DA382: return "evHoldSwim_Resurface";
        case 0x56F49769: return "evHoldTRIANGLE";
        case 0x2BE3D581: return "evHoldTest_A";
        case 0x2BE3D580: return "evHoldTest_B";
        case 0x2BE3D57F: return "evHoldTest_C";
        case 0x2BE3D586: return "evHoldTest_D";
        case 0xA568BEB1: return "evHoldUP";
        case 0x41627966: return "evHoldUse_Adrenaline";
        case 0x523E97EC: return "evHoldUse_Disengage";
        case 0x8B76CA21: return "evHoldUse_Drop";
        case 0x1666453F: return "evHoldUse_Engage";
        case 0xA87F7FC4: return "evHoldUse_EquipQuickMenu";
        case 0xE7115B07: return "evHoldUse_Health";
        case 0xDEAB86FE: return "evHoldUse_LookAt";
        case 0xDC26E6DB: return "evHoldUse_Pickup";
        case 0x8B5483F0: return "evHoldUse_Pull";
        case 0x8B548787: return "evHoldUse_Push";
        case 0xA7EB6F64: return "evHoldUse_Throw";
        case 0xF5567E5F: return "evInstanceBirthed";
        case 0x5F60D387: return "evInstanceIntroduced";
        case 0x0137B463: return "evInventoryNeedsSwitchToIdle";
        case 0xAE0E630D: return "evMarkupRequestSavingGrab";
        case 0xA1069223: return "evMonsterBeingShotAt";
        case 0x64F94B01: return "evLedgeUpTop";
        case 0x14137326: return "evLadderScare";
        case 0x57D44BAC: return "evLedgeUpA";
        case 0xB431EFF5: return "evLedgeUp";
        case 0x05F0D35E: return "evLadderBreak";
        case 0x2495415A: return "evMonsterForgetEnemy";
        case 0xB706064A: return "evMonsterNotice";
        case 0x8A874F45: return "evMoveDown";
        case 0xC2694682: return "evMoveDownLeft";
        case 0x5EF246F3: return "evMoveDownRight";
        case 0x8E2E333B: return "evMoveStop";
        case 0x24BD99EC: return "evMoveEvents";
        case 0x8A81687B: return "evMoveLeft";
        case 0x9806FEA2: return "evMissingRungInteract";
        case 0x0ACB6396: return "evMoveRight";
        case 0x3ED22F56: return "evSlowMoveDown";
        case 0xBABF3FC5: return "evSlowMoveUp";
        case 0xA818858F: return "evMoveUp";
        case 0xEBE5F6BF: return "evMoveUpLeft";
        case 0x0CBA632D: return "evMoveUpRight";
        case 0x3BEF4C1D: return "evNone";
        case 0x2394C6DB: return "evNpcAction";
        case 0xB8CC5A9E: return "evNpcAiControlOff";
        case 0x1D61648E: return "evNpcAiControlOn";
        case 0x965AFD88: return "evNpcEnemySighted";
        case 0x56E204D8: return "evNpcEnemyGlimpsed";
        case 0x8633D4DF: return "evNpcNewEnemySighted";
        case 0x5D36CD92: return "evNpcNewEnemySightedBark";
        case 0x720046BC: return "evNpcInvestigationEndedNowFollowUp";
        case 0xE695D941: return "evNpcNewEnemyDetected";
        case 0x0628E783: return "evNpcJump";
        case 0x1F1C4FF8: return "evNpcReloading";
        case 0x7DDF5CF1: return "evNpcTakingFire";
        case 0x1ED1541B: return "evNpcClearedLKP";
        case 0xC015B82D: return "evNpcShootingAtLKP";
        case 0x77220940: return "evNpcSeeTargetAgain";
        case 0x7CA05681: return "evNpc_PerformAltAttack";
        case 0xDD49038B: return "evNpcInvestigateCorpse";
        case 0xCF9EDBE2: return "evNpcFlyByAttack";
        case 0x66B0BB55: return "evNPCStopReactingFire";
        case 0xB570085C: return "evNPCReactingFire";
        case 0x6DEF2DF1: return "evNPCDiverted";
        case 0xEDB995F7: return "evNPCCrawlSpeed_A";
        case 0xEDB995F8: return "evNPCCrawlSpeed_B";
        case 0x0BECE24F: return "NPCGrenadeEvade";
        case 0xD6EA86E4: return "evObjectAbsorb";
        case 0x0913AEDD: return "evObjectActivate";
        case 0x14A3D19B: return "evObjectAddCameraToDoor";
        case 0x15C2B596: return "evObjectAddEndSoundToDoor";
        case 0x721AF687: return "evObjectAddSplineToDoor";
        case 0x83497FDC: return "evObjectAddStartSoundToDoor";
        case 0x4EA2B99A: return "evObjectAmphoraJarInteract";
        case 0x8D58620F: return "evObjectAnimatedPlayExtra";
        case 0x468B849B: return "evOffLadder";
        case 0x49038B71: return "evObjectAnimatedPlayTriggered";
        case 0xEC230967: return "evObjectApplyExternalForces";
        case 0x1389FDEE: return "evObjectArtifactKeyBirth";
        case 0x267D7BCA: return "evObjectArtifactLockSolve";
        case 0x39F8AF99: return "evObjectBirthProjectile";
        case 0x4C58CAF7: return "evObjectBlock";
        case 0x743A5E76: return "evObjectBreakNotify";
        case 0x84EAB97C: return "evObjectBreakableActivate";
        case 0xAA5DF575: return "evObjectBreakableBreak";
        case 0xCB3A1D6F: return "evObjectBreakableDeactivate";
        case 0x22CA1776: return "evObjectBreakableHitpoints";
        case 0xD3A3DA41: return "evObjectBreakableInstantActivate";
        case 0x44BECA30: return "evObjectBreakableInstantDeactivate";
        case 0xDF900047: return "evObjectBreakableIsInvincible";
        case 0xDB04C725: return "evObjectBreakableRespawn";
        case 0xC36FC1E7: return "evObjectBreakableSetInvincible";
        case 0x7ADED943: return "evObjectBreakableThrownEnemyCollision";
        case 0x42DC5DF4: return "evObjectBulletStrike";
        case 0x293DD5B1: return "evObjectBurn";
        case 0x1DF3550E: return "evObjectChangeState";
        case 0x489135C7: return "evObjectChuckableAdjustLifetime";
        case 0x712C2A9D: return "evObjectChuckableAttachedControlsPosition";
        case 0xED88CDFF: return "evObjectChuckableCollide";
        case 0xC4D3ACCB: return "evObjectChuckableHitSomething";
        case 0xCC1AD904: return "evObjectChuckableSplashingSomething";
        case 0x6F3B51D8: return "evObjectChuckableThrow";
        case 0x49A4B2F9: return "evObjectChuckableUpdate";
        case 0x2574784F: return "evObjectCollect";
        case 0xC92CE54F: return "evObjectCollectPowerup";
        case 0xF801E263: return "evObjectCueCamera";
        case 0x30BCFFCF: return "evObjectCuttingPlane";
        case 0xA98A1911: return "evObjectDIDResetAllIcons";
        case 0x45B2C662: return "evObjectDIDResetIcon";
        case 0x51C2663C: return "evObjectDIDSetIcon";
        case 0xBB08A624: return "evObjectInjuredStatusChange";
        case 0xC6154DB9: return "evObjectDamaged";
        case 0x603713A5: return "evObjectDangerousProjectile";
        case 0x5B6D5465: return "evObjectDeactivate";
        case 0xA68CFC4D: return "evObjectDetonate";
        case 0x62A3355A: return "evObjectDialogueChangeState";
        case 0x3F495D7F: return "evObjectDialoguePlayConversation";
        case 0x70C6767B: return "evObjectDialogueStopDialogue";
        case 0x1243E3A8: return "evObjectDisable";
        case 0x47D7F7A1: return "evObjectDisableDone";
        case 0x2030F6AB: return "evObjectDisableShatter";
        case 0xDBC7A0B8: return "evObjectDisengage";
        case 0x4A37766D: return "evObjectDoorClose";
        case 0xF01BDCE7: return "evObjectDoorInstantClose";
        case 0xACD36B9B: return "evObjectDoorInstantOpen";
        case 0x6D4BCF84: return "evObjectDoorInteract";
        case 0x0A67A247: return "evObjectDoorLock";
        case 0x0A66FB6A: return "evObjectDoorOpen";
        case 0x293EC205: return "evObjectDrop";
        case 0x773EA95D: return "evObjectElectrify";
        case 0x0EA4807A: return "evObjectEnable";
        case 0x9E71B090: return "evObjectEnableShatter";
        case 0x0E8972DA: return "evObjectEngage";
        case 0xD52FDD65: return "evObjectExecuteDoor";
        case 0xAE0573D3: return "evObjectFadeout";
        case 0xE13D7A63: return "evObjectFadeover";
        case 0xEEFE4B2F: return "evObjectFlammableDamage";
        case 0xB2D1CA46: return "evObjectFlammableSpread";
        case 0xA8FC5A7E: return "evObjectForceDoorToFinish";
        case 0x390A7AF6: return "evObjectGrappleDetached";
        case 0x77E070A8: return "evObjectGrappled";
        case 0xAABA30A5: return "evObjectGrappledAsVictim";
        case 0x6815B5A5: return "evObjectGravity";
        case 0xEA5F666B: return "evObjectHangToZipline";
        case 0x295BAEBC: return "evObjectIdle";
        case 0x255F5498: return "evObjectIgnite";
        case 0x513530C4: return "evObjectInitDoor";
        case 0x0CA2E9B9: return "evObjectInsert";
        case 0x4CDE55BA: return "evObjectInsertRespond";
        case 0x062675AC: return "evObjectInteract";
        case 0x5581514C: return "evObjectInteractEnd";
        case 0x8144B293: return "evObjectInteractStart";
        case 0x9872503E: return "evObjectInvStateChanged";
        case 0x4BA3B66F: return "evObjectInvokeReaction";
        case 0xEC354B0A: return "evObjectLastChanceCleanup";
        case 0x6F71169B: return "evObjectLightableActivate";
        case 0x29C6AD1F: return "evObjectLightableDeactivate";
        case 0x430806B7: return "evObjectLightableExplode";
        case 0x9771E521: return "evObjectLightableInstantActivate";
        case 0x207BB20D: return "evObjectLightableInstantDeactivate";
        case 0xCC421E40: return "evObjectLightableInstantSwitchOff";
        case 0x44E864B9: return "evObjectLightableInstantSwitchOn";
        case 0x44EB98DA: return "evObjectLightableInteractCancel";
        case 0x5A7CFF49: return "evObjectLightableInteractComplete";
        case 0xA147D7D5: return "evObjectLightableInteractStart";
        case 0x88A7BB08: return "evObjectLightableInteract";
        case 0x3A756DA2: return "evObjectLightableSetActiveTimeout";
        case 0xEFDC74AD: return "evObjectLightableSetOnTimeout";
        case 0x8888B95A: return "evObjectLightableSwitchOff";
        case 0x4EAB1BF4: return "evObjectLightableSwitchOn";
        case 0xE216B993: return "evObjectMonsterWeapon";
        case 0x6B0D3D90: return "evObjectNeedReload";
        case 0x4F564D8A: return "evObjectOpenDoor";
        case 0x18B43FB0: return "evObjectParried";
        case 0x45565355: return "evObjectParrySuccess";
        case 0x12111F90: return "evObjectPickedFromSource";
        case 0x2B0BCDCC: return "evObjectPickup";
        case 0x49A3C0F1: return "evAmmoLootedNotifyBroadcast";
        case 0xC550512A: return "evObjectPlannerObstacle";
        case 0xDC247F40: return "evObjectPlayStartAnim";
        case 0x184083B7: return "evObjectPreDetonate";
        case 0x6B35569D: return "evObjectPresentStimulus";
        case 0x99E3468F: return "evObjectProjectileWaterTransition";
        case 0x63132825: return "evObjectPutdown";
        case 0x1E4EDD54: return "evObjectPuzzle";
        case 0x16E6ADAD: return "evObjectRBChuckableCollide";
        case 0x53865257: return "evObjectReadyWeaponForUse";
        case 0x15EAA0C4: return "evObjectReattach";
        case 0xF6ED0D0C: return "evObjectReload";
        case 0x5AF0A1CA: return "evObjectReloadQuiet";
        case 0x899D853F: return "evObjectResetSwitch";
        case 0x9865B885: return "evObjectRetrieve";
        case 0x20CE66B8: return "evObjectRigidBodyDebugSyncRigidBodyProp";
        case 0xCBA80CDB: return "evObjectRigidBodyDestroyAtom";
        case 0x383F9D83: return "evObjectRigidBodyDestroyJoint";
        case 0xA5C2925B: return "evObjectRigidBodyEnableJointLimit";
        case 0xA6BC38A9: return "evObjectRigidBodyEnableJointMotor";
        case 0x85FCBAA3: return "evObjectRigidBodyGearCollision";
        case 0x32F7E085: return "evObjectRigidBodyJointSetCollideConnected";
        case 0xB50FE03F: return "evObjectRigidBodySetJointLimitMinMax";
        case 0x451A0185: return "evObjectRigidBodySetJointMotorMaxForce";
        case 0x3CFB0704: return "evObjectRigidBodySetJointMotorVelocity";
        case 0x39819B68: return "evObjectRigidBodySetLinearVelocity";
        case 0x6C9B8D06: return "evObjectRigidBodySetSplineMaxMotorForce";
        case 0xA131B5AB: return "evObjectRigidBodySetSplinePlayback";
        case 0x1465CD1A: return "evObjectRigidBodySetSplineState";
        case 0x25F2250F: return "evObjectRigidBodySetSplineVelocityOverride";
        case 0xB4177285: return "evObjectRigidBodyWakeUp";
        case 0x9BE0F805: return "evObjectSet";
        case 0x013DBC3F: return "evObjectSetAlignAxis";
        case 0x08245636: return "evObjectSetClipAmmo";
        case 0x97F7C73A: return "evObjectSetDistance";
        case 0x09C4F8D5: return "evObjectSetSwitch";
        case 0xEC69BD89: return "evObjectSingleUseAlt";
        case 0x16E068D0: return "evObjectSingleUse";
        case 0x85233FD1: return "evObjectSnuff";
        case 0xAEA77399: return "evObjectSplineVehicleSetDeathCounterVar";
        case 0xA616F407: return "evObjectSplineVehicleSetEnemy";
        case 0x034D0F84: return "evObjectSplineVehicleSetGunner";
        case 0x2C728198: return "evObjectSplineVehicleSetMaxDistanceVar";
        case 0x545C9B61: return "evObjectSplineVehicleSetMinDistanceVar";
        case 0xD18AF0F0: return "evObjectSplineVehicleSetSpline";
        case 0xB9CECDC3: return "evObjectSplineVehicleSetTurret";
        case 0xB95F202B: return "evObjectSplineVehicleSetVelocityOverrideVar";
        case 0xD58387D1: return "evObjectStartEquip";
        case 0xBDCC1F69: return "evObjectStartUnequip";
        case 0xBC480801: return "evObjectStickSphere";
        case 0xA611AAA7: return "evObjectStickTerrain";
        case 0x2FF2E9E3: return "evObjectStop";
        case 0x8524CB1C: return "evObjectStore";
        case 0xF3385FF7: return "evObjectSwarmCollide";
        case 0x628EA4D4: return "evObjectSwarmSetTarget";
        case 0xF32AEDFD: return "evObjectSwitch";
        case 0x45FFB862: return "evObjectTarget";
        case 0x4D0005D1: return "evObjectTargetMissed";
        case 0x7B69B3AB: return "evObjectTargetingDisable";
        case 0xC1EA03C0: return "evObjectTargetingEnable";
        case 0x85782F0C: return "evObjectThrow";
        case 0xC3BA30E7: return "evObjectToggleIDMask";
        case 0x34A613F7: return "evObjectUninsert";
        case 0x2055703C: return "evObjectUninsertRespond";
        case 0xDC045FA7: return "evObjectUseEngagementProperties";
        case 0xE5040642: return "evObjectVehicleSetLock";
        case 0xDF8B165D: return "evObjectWaterChangeCurrent";
        case 0xBA8175B6: return "evObjectWaterChangeLevel";
        case 0x197005ED: return "evObjectWeaponCollide";
        case 0x17602C85: return "evObjectWeaponFired";
        case 0x1D00C3DB: return "evObjectWeaponIdleAnim";
        case 0xCC0A738F: return "evObjectWeaponReadyAnim";
        case 0x8FF10BB2: return "evObjectWeaponSetAttackData";
        case 0x76C12C79: return "evObjectWeaponUpdateLaserSight";
        case 0x87A7F716: return "evPhysicsApex";
        case 0x91ED3256: return "evPhysicsCheckBlockage";
        case 0xDF7AAC88: return "evPhysicsCheckDropHeight";
        case 0xE59DB045: return "evPhysicsCheckDropOff";
        case 0x88BCC3BD: return "evPhysicsCheckEdgeGrab";
        case 0xECC84F2F: return "evPhysicsCheckGravity";
        case 0x4C4DEF4F: return "evPhysicsCheckLinkedMove";
        case 0xCA9A5A22: return "evPhysicsCheckSwim";
        case 0x49EC0725: return "evPhysicsCheckWallBend";
        case 0x3C9F2FE4: return "evPhysicsCollide";
        case 0x8C9FE7D2: return "evPhysicsCollideEdgeGrab";
        case 0x0836621E: return "evPhysicsCollideFarGravity";
        case 0xF6EAB57D: return "evPhysicsCollideGravity";
        case 0xF366DBC2: return "evPhysicsCollideLinkedMove";
        case 0x177BDFFF: return "evPhysicsCollideSlide";
        case 0x27FE2A7E: return "evPhysicsCollideSlopeSlide";
        case 0xEA227E56: return "evPhysicsCollideSwim";
        case 0x879BE9D7: return "evPhysicsFall";
        case 0xC3F02E77: return "evPhysicsHitGround";
        case 0x931D8047: return "evPhysicsJointDestruction";
        case 0x9F86DE9D: return "evPhysicsMeleeConnect";
        case 0xF7CB40EF: return "evPhysicsResetSlideSlope";
        case 0xED4166F1: return "evPhysicsSetSlideSlope";
        case 0x54CE681B: return "evPhysicsSwimStatus";
        case 0x315C62FF: return "evPlayerLedgeHangTypeChanged";
        case 0xF3823C3C: return "evPlayerAmmoDepleted";
        case 0x9F9AEF8C: return "evPlayerAllAmmoDepleted";
        case 0x6AF33A0E: return "evPlayerAddObjectAddtionalProxy";
        case 0x665733A3: return "evReachingOut";
        case 0x7CCFCAC9: return "evPlayerBlockAttack";
        case 0xACA42125: return "evPlayerDamageTypeHeavy";
        case 0x39D615EF: return "evPlayerDamageTypeMedium";
        case 0x638A2C29: return "evPlayerIncapacitatedCombat";
        case 0xD826DE1F: return "evPlayerIncapacitated";
        case 0xBA42EB7F: return "evPlayerFXHit";
        case 0x159A275A: return "evPlayerForceSavingGrab";
        case 0x1E57C145: return "evPlayerForceStumble";
        case 0xC03819F9: return "evPlayerForceWalk";
        case 0x5799659E: return "evPortableUnderWater";
        case 0xE91CB51D: return "evProjectileSetSender";
        case 0xB2331572: return "evProjectileTimeout";
        case 0xABC97DDC: return "evPuppetBumpReaction";
        case 0x96FEE96C: return "evReleaseANALOGUEL";
        case 0x96FEE966: return "evReleaseANALOGUER";
        case 0xC79E5292: return "evReleaseActionGraph_CirclePressed";
        case 0xFBEAAAD3: return "evReleaseActionGraph_CrossPressed";
        case 0xC6380B38: return "evReleaseActionGraph_SquarePressed";
        case 0x280F87D6: return "evReleaseActionGraph_TrianglePressed";
        case 0x255F52BB: return "evReleaseAction_ActiveAttach";
        case 0x7B6491A2: return "evReleaseAction_ClimbOver";
        case 0xE965B5E8: return "evReleaseAction_Crouch";
        case 0x3002A5E8: return "evReleaseAction_DropOff";
        case 0x34A5AC14: return "evReleaseAction_FastTraversal";
        case 0x5F89C82A: return "evReleaseAction_IntendToJump";
        case 0x32FB8F7B: return "evReleaseAction_Jump";
        case 0x32FF8130: return "evReleaseAction_Roll";
        case 0x835E0ED4: return "evReleaseAction_SavingGrab";
        case 0x62D5F508: return "evReleaseAction_Sprint";
        case 0xD0C77CE3: return "evReleaseAssert_Break";
        case 0x447EC0AC: return "evReleaseAssert_Dump";
        case 0x181052FE: return "evReleaseAssert_Ignore";
        case 0xDCFB0555: return "evReleaseAssert_IgnoreAll";
        case 0x800FAEC0: return "evReleaseCIRCLE";
        case 0xFC9CB155: return "evReleaseCROSS";
        case 0xB57FC530: return "evReleaseCameraBack";
        case 0xB1109548: return "evReleaseCameraForward";
        case 0x1CFA10D8: return "evReleaseCameraLeftRight";
        case 0x50666011: return "evReleaseCameraTruckLeftRight";
        case 0xF404C66D: return "evReleaseCameraTruckUpDown";
        case 0xE0300493: return "evReleaseCameraUpDown";
        case 0xE61D0CF6: return "evReleaseCameraZoomIn";
        case 0x7BDD60D2: return "evReleaseCameraZoomOut";
        case 0xED75351D: return "evReleaseCamera_Reset";
        case 0x160D2830: return "evReleaseCombat_BowCharge";
        case 0xD8BBE291: return "evReleaseCombat_BowPull";
        case 0x9A519DDE: return "evReleaseCombat_BowRelax";
        case 0x6EA6215C: return "evReleaseCombat_BowRelease";
        case 0x37524C77: return "evReleaseCombat_Evade";
        case 0x8890F2DA: return "evReleaseCombat_GunFire";
        case 0x54144C49: return "evReleaseCombat_GunFire_ReloadInterrupt";
        case 0x2F819174: return "evReleaseCombat_MeleeAnalogDir";
        case 0x2F7E1681: return "evReleaseCombat_MeleeAnalogMag";
        case 0x133D8900: return "evReleaseCombat_Melee_Equip";
        case 0xE065BA96: return "evReleaseCombat_Melee_Finisher";
        case 0x1711F60B: return "evReleaseCombat_Melee_Parry";
        case 0x4E6D4148: return "evReleaseCombat_Melee_Riposte";
        case 0x124E4A19: return "evReleaseCombat_Melee_Swing";
        case 0xA3858732: return "evReleaseCombat_RangedAimDir";
        case 0x2C68F1D9: return "evReleaseCombat_RangedAimSpeed";
        case 0x95FCE26C: return "evReleaseCombat_Reload";
        case 0x9E1FC49C: return "evReleaseCombat_TargetLock";
        case 0xC6E53359: return "evReleaseCombat_ToggleRangedWeapon";
        case 0x9D64C326: return "evReleaseCombat_WeaponDraw";
        case 0x1D48A51D: return "evReleaseCombat_WeaponHolster";
        case 0xD5FE152B: return "evReleaseDOWN";
        case 0x62BADC4E: return "evReleaseDPAD_DOWN";
        case 0x62585743: return "evReleaseDPAD_LEFT";
        case 0xAD1DA939: return "evReleaseDPAD_RIGHT";
        case 0x19F48A5E: return "evReleaseDPAD_UP";
        case 0xDB9769EA: return "evReleaseDead_Button";
        case 0x36897AF4: return "evReleaseDebug_FastForward";
        case 0x6A6E4259: return "evReleaseDebug_ScreenShot";
        case 0x400D3975: return "evReleaseDebug_ToggleMenu";
        case 0x400C59F3: return "evReleaseDebug_ToggleSkew";
        case 0x9B10D137: return "evReleaseEnable_BowCharge";
        case 0xEF81FE96: return "evReleaseEvents";
        case 0xA687F4F8: return "evReleaseGrapple_Detach";
        case 0xBF1A133F: return "evReleaseGrapple_Pull";
        case 0xBB7EB43F: return "evReleaseGrapple_Throw";
        case 0x2BC03E22: return "evReleaseKeyboardMenuDown";
        case 0x2BB43F8E: return "evReleaseKeyboardMenuLeft";
        case 0xFC491BC7: return "evReleaseKeyboardMenuRight";
        case 0x973BCD62: return "evReleaseKeyboardMenuUp";
        case 0xEAA10939: return "evReleaseL1";
        case 0xEAA10938: return "evReleaseL2";
        case 0xEAA10788: return "evReleaseLB";
        case 0xD5AFEC26: return "evReleaseLEFT";
        case 0xEAA1075E: return "evReleaseLT";
        case 0x87CF94BC: return "evReleaseMenuAltEngage";
        case 0xAA6F8CF5: return "evReleaseMenuCancel";
        case 0xE585F3B3: return "evReleaseMenuCheatButton";
        case 0x36F34D2E: return "evReleaseMenuClear";
        case 0x36F33CF7: return "evReleaseMenuClick";
        case 0x30E57B90: return "evReleaseMenuDelete";
        case 0x8EB96B7D: return "evReleaseMenuDown";
        case 0xF5663DA0: return "evReleaseMenuEndStep";
        case 0x323FBF6C: return "evReleaseMenuEngage";
        case 0xAE4FE740: return "evReleaseMenuHundreds";
        case 0x8EAC959B: return "evReleaseMenuLeft";
        case 0x36323FDA: return "evReleaseMenuRight";
        case 0xE5BA1855: return "evReleaseMenuSelect";
        case 0x2B0E5246: return "evReleaseMenuStart";
        case 0x8E96DD25: return "evReleaseMenuStep";
        case 0x8EA104ED: return "evReleaseMenuTens";
        case 0x15CE5820: return "evReleaseMenuThousands";
        case 0x74CD996A: return "evReleaseMenuUp";
        case 0xD4B79FAC: return "evReleaseMode_Inventory";
        case 0x9793CEA7: return "evReleaseMode_Map";
        case 0x6C301C29: return "evReleaseMode_Pause";
        case 0x907D61CF: return "evReleaseMode_Play";
        case 0x7A30BFD3: return "evReleaseModelView_CameraDollyIn";
        case 0xCD9CFB0F: return "evReleaseModelView_CameraDollyOut";
        case 0x740F637E: return "evReleaseModelView_CameraLeftRight";
        case 0x81D404FD: return "evReleaseModelView_CameraTruckLeftRight";
        case 0xE1AE1697: return "evReleaseModelView_CameraTruckUpDown";
        case 0x2D4CADD2: return "evReleaseModelView_CameraUpDown";
        case 0x65175B54: return "evReleaseModelView_CameraZoomIn";
        case 0xF9DE93D9: return "evReleaseModelView_CameraZoomOut";
        case 0xD61A3C36: return "evReleaseModelView_ChangeAnimMode";
        case 0xE4A76CA3: return "evReleaseModelView_ControlObject";
        case 0xE29659EB: return "evReleaseModelView_NextAnim";
        case 0xD971B325: return "evReleaseModelView_NextObject";
        case 0xA2748DD7: return "evReleaseModelView_PlayAnim";
        case 0xCB52AE13: return "evReleaseModelView_PrevAnim";
        case 0xFE4DA893: return "evReleaseModelView_PrevObject";
        case 0x607EC1D3: return "evReleaseModelView_ResetCamera";
        case 0x8E556FFB: return "evReleaseModelView_ResetRotation";
        case 0xF2B45A29: return "evReleaseModelView_StepBackAnim";
        case 0xAA741256: return "evReleaseModelView_StepForwardAnim";
        case 0x7C9A48FB: return "evReleaseModelView_SwitchSection";
        case 0xB02F9861: return "evReleaseModelView_ZoomToObject";
        case 0xD5057C90: return "evReleaseMove_Dir_3D";
        case 0x9A85E3A1: return "evReleaseMove_Dir_Ground";
        case 0x1C6658AB: return "evReleaseMove_Dir_InAir";
        case 0xA7753496: return "evReleaseMove_Dir_Markup";
        case 0x94FB5FAC: return "evReleaseMove_Dir_Relative";
        case 0x2769E0D8: return "evReleaseMove_Dir_Wall";
        case 0xC83AFC1B: return "evReleaseMove_Rate";
        case 0x5DFBA0AB: return "evReleaseMove_Rate_Delta";
        case 0x5F2A1DC2: return "evReleaseMove_Rate_InAir";
        case 0x052B6D69: return "evReleaseNpc_AlternateAttack";
        case 0xB44A8588: return "evReleaseNpc_Block";
        case 0xD8DA9E52: return "evReleaseNpc_Celebrate";
        case 0x71AE6E82: return "evReleaseNpc_CombatIdle";
        case 0x86DBEABC: return "evReleaseNpc_Guard";
        case 0x71462A23: return "evReleaseNpc_Idle";
        case 0x7146E7B7: return "evReleaseNpc_Jump";
        case 0x879B7DF7: return "evReleaseNpc_Melee";
        case 0x7154401B: return "evReleaseNpc_Move";
        case 0x94F65274: return "evReleaseNpc_NavHelper";
        case 0x7B402224: return "evReleaseNpc_Parry";
        case 0x4C152850: return "evReleaseNpc_PreferredAttack";
        case 0xC8CC0A5E: return "evReleaseNpc_ReactiveAttack";
        case 0x4B08C4A7: return "evReleaseNpc_Riposte";
        case 0xF3602247: return "evReleaseNpc_SeizeAttack";
        case 0x7AE5FADC: return "evReleaseNpc_Spawn";
        case 0x71688BB2: return "evReleaseNpc_Stun";
        case 0x2C77CCD3: return "evReleaseNpc_StunRecover";
        case 0xD724BED5: return "evReleaseNpc_ThrownAttack";
        case 0x717B39AE: return "evReleaseNpc_Turn";
        case 0x5408E756: return "evReleaseProgrammerDebugCircle";
        case 0x954B27D9: return "evReleaseProgrammerDebugCross";
        case 0xF96A0DC0: return "evReleaseProgrammerDebugDPadDown";
        case 0xFC015B05: return "evReleaseProgrammerDebugDPadLeft";
        case 0x25AD537D: return "evReleaseProgrammerDebugDPadRight";
        case 0x536D371D: return "evReleaseProgrammerDebugDPadUp";
        case 0xC0C4F4D9: return "evReleaseProgrammerDebugLB";
        case 0x9490AB38: return "evReleaseProgrammerDebugLStickBack";
        case 0x42E852B2: return "evReleaseProgrammerDebugLStickForward";
        case 0x916E6161: return "evReleaseProgrammerDebugLStickLeft";
        case 0xD436352D: return "evReleaseProgrammerDebugLStickRight";
        case 0xC0C4F4E3: return "evReleaseProgrammerDebugLT";
        case 0xC0C4F394: return "evReleaseProgrammerDebugRB";
        case 0xC0C4F3AA: return "evReleaseProgrammerDebugRT";
        case 0xAC39A143: return "evReleaseProgrammerDebugSquare";
        case 0x3E8572AE: return "evReleaseProgrammerDebugTriangle";
        case 0xEB35C743: return "evReleasePrototype_AccurateAimAlt";
        case 0xEAA10776: return "evReleaseR1";
        case 0xEAA10775: return "evReleaseR2";
        case 0xEAA107C5: return "evReleaseRB";
        case 0xFA8C3E30: return "evReleaseRIGHT";
        case 0x92E89385: return "evReleaseRSTICK_DOWN";
        case 0x92D089AE: return "evReleaseRSTICK_LEFT";
        case 0xA072D4CF: return "evReleaseRSTICK_RIGHT";
        case 0x50C671D1: return "evReleaseRSTICK_UP";
        case 0xEAA1079F: return "evReleaseRT";
        case 0x37479FC2: return "evReleaseRespawn";
        case 0xEC69A0F5: return "evReleaseRope_Climb";
        case 0x021EEEEC: return "evReleaseRope_Swing";
        case 0xE61C9B8D: return "evReleaseSELECT";
        case 0xE5B991DE: return "evReleaseSQUARE";
        case 0xFAC4257D: return "evReleaseSTART";
        case 0x9DE65A8F: return "evReleaseSelect_Ammo";
        case 0x4D687BC3: return "evReleaseSelect_Bow";
        case 0x4D66DE99: return "evReleaseSelect_Gun";
        case 0x0218D9A3: return "evReleaseSelect_Melee";
        case 0x8CCC2025: return "evReleaseSwim_Dive";
        case 0x2918002B: return "evReleaseSwim_Forward";
        case 0xDCCE2959: return "evReleaseSwim_PitchRate";
        case 0xA431F4CB: return "evReleaseSwim_Resurface";
        case 0x97C96FFE: return "evReleaseTRIANGLE";
        case 0x9AC9A69D: return "evReleaseTest_A";
        case 0x9AC9A69E: return "evReleaseTest_B";
        case 0x1D71FCCB: return "evResetLeft";
        case 0xBBDA77DD: return "evResetRight";
        case 0x9AC9A69B: return "evReleaseTest_C";
        case 0x9AC9A69C: return "evReleaseTest_D";
        case 0xEAA1080F: return "evReleaseUP";
        case 0xDA06FB88: return "evReleaseUse_Adrenaline";
        case 0xF40831DC: return "evReleaseUse_Disengage";
        case 0x28A2888B: return "evReleaseUse_Drop";
        case 0x3CA5A89D: return "evReleaseUse_Engage";
        case 0x90D2CF85: return "evReleaseUse_EquipQuickMenu";
        case 0x39DFFC15: return "evReleaseUse_Health";
        case 0x8C051355: return "evReleaseUse_LookAt";
        case 0x20A2E296: return "evReleaseUse_Pickup";
        case 0x2516AD7E: return "evReleaseUse_Pull";
        case 0x2516ADA6: return "evReleaseUse_Push";
        case 0x1FE99512: return "evReleaseUse_Throw";
        case 0x6DC29FBD: return "evRigidBodyContactNotify";
        case 0x0DFE6610: return "evRigidBodyContactWithCharacterNotify";
        case 0xB745B8D5: return "evProjectileContactWithCharacterNotify";
        case 0x7FFCBBCF: return "evRiposteInitiated";
        case 0x20131484: return "evRitualVesselCrafted";
        case 0x1D98CEA3: return "evRopeDisconnectAnchor1";
        case 0x1D98CEAA: return "evRopeDisconnectAnchor2";
        case 0x7D0DD1D5: return "evBirdScare";
        case 0x93B84EE5: return "evScriptRequestPlayLaraAnim";
        case 0x82F218E3: return "evScriptRequestPlayLaraAnimOverride";
        case 0xD0D73CC6: return "evMeleeDeathSeizeContact";
        case 0x8197ADFB: return "evMeleeContactStep2";
        case 0x888C7611: return "evMeleeSeizeContact_WeaponCatch";
        case 0xDE511302: return "evReceiveUpgradedMeleeHit";
        case 0xBD46699B: return "evMeleeSeizeContact";
        case 0x420356F9: return "evJumpAttackContact";
        case 0xBB0E04E0: return "evParryReact";
        case 0x2095DFEA: return "evMeleeContact_MutualMeleeHit_ForceDamage";
        case 0x8CC3BB55: return "evMeleeContact_MutualMeleeHit";
        case 0xEDB081D5: return "pickaxe_step1_reenter";
        case 0x060E1570: return "evMeleeContact";
        case 0x22B30A42: return "evSearchBushNotifyNearby";
        case 0x6D60681F: return "evSeizeInitiatedDefender";
        case 0x77EE7360: return "evSeizeMeterHitMax";
        case 0x4BBED50A: return "evSeizeDefenderExited";
        case 0x6BC180D3: return "evSeizeAttackerExited";
        case 0x9AE20F97: return "evSeizeDetachExit";
        case 0xA42633B4: return "evSeizeTimedPressFailNoPress";
        case 0x26BFAE5F: return "evSeizeTimedPressSuccess";
        case 0x529C6FDF: return "evSeizeTimedPressFailEarly";
        case 0x398B1234: return "evSeizeDefenderDied";
        case 0xEF5DE416: return "evSeizeFollowup";
        case 0x6C5256CF: return "evSeizeMeterHitZero";
        case 0x9A4BF4EB: return "evSeizeTimeout";
        case 0x29E07906: return "evSeizeErrorOccured";
        case 0x2EF0C447: return "evSeizeTerminated";
        case 0xE7FF0EE7: return "evSenseTargetAdd";
        case 0x0BF3715C: return "evSenseTargetDisabled";
        case 0xAE70902F: return "evSenseTargetEnabled";
        case 0x67F160D2: return "evSenseTargetKilled";
        case 0xF7D5AF48: return "evSenseTargetRemove";
        case 0x0A8A736A: return "evSetEngagementDir";
        case 0x4DD64F65: return "evSetEngagementProp";
        case 0x0668F22D: return "evSetInsertionChild";
        case 0x78ED80BF: return "evSetInsertionParent";
        case 0x6EB505A5: return "evSetRotatableSwitch";
        case 0x21AD1228: return "evScriptRequestToActionGraphTorchPutAway";
        case 0xCB6D0D47: return "evSpawn";
        case 0xD3392D6C: return "evSpawnDisable";
        case 0xC49B1893: return "evSpawnEnable";
        case 0xF4EA7C1D: return "evSpawned";
        case 0x9987F499: return "evSquibExplode";
        case 0x0D953598: return "evStateControlAgentIgnored";
        case 0xE34835D7: return "evTR9PrototypeHunted";
        case 0xC1E22400: return "evTR9PrototypeMeleeGenerateHit";
        case 0x8014CA1B: return "evTR9PrototypeSyncAnim";
        case 0x18E6DEC4: return "evTakeDamage";
        case 0xF62A3619: return "evTapANALOGUEL";
        case 0xF62A360F: return "evTapANALOGUER";
        case 0xB2D7AFC2: return "evTapActionGraph_CirclePressed";
        case 0x9AB1E73B: return "evTapActionGraph_CrossPressed";
        case 0xCF27C4EF: return "evTapActionGraph_SquarePressed";
        case 0x28F9A4BB: return "evTapActionGraph_TrianglePressed";
        case 0xD18145F3: return "evTapAction_ActiveAttach";
        case 0x2B35EFB3: return "evTapAction_ClimbOver";
        case 0x8481A452: return "evTapAction_Crouch";
        case 0xEF79B3AF: return "evTapAction_DropOff";
        case 0x450E7FFF: return "evTapAction_FastTraversal";
        case 0xD06E8C2C: return "evTapAction_IntendToJump";
        case 0x6DF455C8: return "evTapAction_Jump";
        case 0x6DF055B5: return "evTapAction_Roll";
        case 0x2B3A105A: return "evTapAction_SavingGrab";
        case 0xB7984D1A: return "evTapAction_Sprint";
        case 0x95075943: return "evTapAssert_Break";
        case 0xDE8BFC89: return "evTapAssert_Dump";
        case 0x2F21AFFE: return "evTapAssert_Ignore";
        case 0xBA024B29: return "evTapAssert_IgnoreAll";
        case 0xC813F4A3: return "evTapCIRCLE";
        case 0x1D7A6F69: return "evTapCROSS";
        case 0x8639D4F2: return "evTapCameraBack";
        case 0x9B336138: return "evTapCameraForward";
        case 0x07205509: return "evTapCameraLeftRight";
        case 0x999ABBA7: return "evTapCameraTruckLeftRight";
        case 0xBA4F9FA3: return "evTapCameraTruckUpDown";
        case 0xE80FC5B6: return "evTapCameraUpDown";
        case 0x6A106EC2: return "evTapCameraZoomIn";
        case 0xB5A8FD45: return "evTapCameraZoomOut";
        case 0x83BCE886: return "evTurnRight";
        case 0x463FA0CF: return "evTurnLeft";
        case 0xB4543EA2: return "evTapCamera_Reset";
        case 0xB3A25AFF: return "evTapCombat_BowCharge";
        case 0xE5A2C295: return "evTapCombat_BowPull";
        case 0x6AF2729D: return "evTapCombat_BowRelax";
        case 0xA0BB5A81: return "evTapCombat_BowRelease";
        case 0x5D6094D2: return "evTapCombat_Evade";
        case 0x8735B17F: return "evTapCombat_GunFire";
        case 0x4918F725: return "evTapCombat_GunFire_ReloadInterrupt";
        case 0x19957363: return "evTapCombat_MeleeAnalogDir";
        case 0x1995659D: return "evTapCombat_MeleeAnalogMag";
        case 0x75931A8A: return "evTapCombat_Melee_Equip";
        case 0xF48F661C: return "evTapCombat_Melee_Finisher";
        case 0x6B58CE1A: return "evTapCombat_Melee_Parry";
        case 0x08E27C44: return "evTapCombat_Melee_Riposte";
        case 0x6B5B4654: return "evTapCombat_Melee_Swing";
        case 0xE87AD247: return "evTapCombat_RangedAimDir";
        case 0xEEF0D552: return "evTapCombat_RangedAimSpeed";
        case 0x485A07B4: return "evTapCombat_Reload";
        case 0xBB6C1FF2: return "evTapCombat_TargetLock";
        case 0xA03DCDB5: return "evTapCombat_ToggleRangedWeapon";
        case 0x08E8BAFB: return "evTapCombat_WeaponDraw";
        case 0xEB80857E: return "evTapCombat_WeaponHolster";
        case 0x858591A7: return "evTapDOWN";
        case 0xB02D579B: return "evTapDPAD_DOWN";
        case 0xB02AB695: return "evTapDPAD_LEFT";
        case 0x5166E894: return "evTapDPAD_RIGHT";
        case 0x0556AB22: return "evTapDPAD_UP";
        case 0x2EF84AEB: return "evTapDead_Button";
        case 0xCC6C5CA6: return "evTapDebug_FastForward";
        case 0xA8B2BED5: return "evTapDebug_ScreenShot";
        case 0x1D79C63A: return "evTapDebug_ToggleMenu";
        case 0x2013CECB: return "evTapDebug_ToggleSkew";
        case 0x83AC8E8E: return "evTapEnable_BowCharge";
        case 0x632474C5: return "evTapEvents";
        case 0xACCEDE2D: return "evTapGrapple_Detach";
        case 0x8DFF734B: return "evTapGrapple_Pull";
        case 0x3A1183A2: return "evTapGrapple_Throw";
        case 0x6F4AD068: return "evTapKeyboardMenuDown";
        case 0x6F46DD21: return "evTapKeyboardMenuLeft";
        case 0x74A1A602: return "evTapKeyboardMenuRight";
        case 0xE81C241C: return "evTapKeyboardMenuUp";
        case 0x65BFECDA: return "evTapL1";
        case 0x65BFECD7: return "evTapL2";
        case 0x65BFED27: return "evTapLB";
        case 0x86A5D36F: return "evTapLEFT";
        case 0x65BFEB7D: return "evTapLT";
        case 0x1B0D810B: return "evTapMenuAltEngage";
        case 0x9BD395FB: return "evTapMenuCancel";
        case 0x77048236: return "evTapMenuCheatButton";
        case 0x35211B4E: return "evTapMenuClear";
        case 0x351AA89D: return "evTapMenuClick";
        case 0x59A2AE2F: return "evTapMenuDelete";
        case 0xB3320FE9: return "evTapMenuDown";
        case 0x503DAF99: return "evTapMenuEndStep";
        case 0x957B04B7: return "evTapMenuEngage";
        case 0xC9FF434E: return "evTapMenuHundreds";
        case 0xB3115FF7: return "evTapMenuLeft";
        case 0x3829744B: return "evTapMenuRight";
        case 0x9086EDB7: return "evTapMenuSelect";
        case 0x382273A1: return "evTapMenuStart";
        case 0xB33A10F0: return "evTapMenuStep";
        case 0xB32D8F01: return "evTapMenuTens";
        case 0xD9EFA326: return "evTapMenuThousands";
        case 0xEFA5284C: return "evTapMenuUp";
        case 0x0DE132C1: return "evTapMode_Inventory";
        case 0xE6C31A23: return "evTapMode_Map";
        case 0x9C041A4E: return "evTapMode_Pause";
        case 0xA79753B1: return "evTapMode_Play";
        case 0x2179E72B: return "evTapModelView_CameraDollyIn";
        case 0x394334F0: return "evTapModelView_CameraDollyOut";
        case 0xD1B5FD29: return "evTapModelView_CameraLeftRight";
        case 0x7274A7F3: return "evTapModelView_CameraTruckLeftRight";
        case 0xDB494056: return "evTapModelView_CameraTruckUpDown";
        case 0x34192D08: return "evTapModelView_CameraUpDown";
        case 0x7C23D6FC: return "evTapModelView_CameraZoomIn";
        case 0x108F188B: return "evTapModelView_CameraZoomOut";
        case 0xE17B2597: return "evTapModelView_ChangeAnimMode";
        case 0x268733CE: return "evTapModelView_ControlObject";
        case 0x0A49174B: return "evTapModelView_NextAnim";
        case 0xD8737579: return "evTapModelView_NextObject";
        case 0xC67F8EB8: return "evTapModelView_PlayAnim";
        case 0x266EF11E: return "evTapModelView_PrevAnim";
        case 0x95C7FCBC: return "evTapModelView_PrevObject";
        case 0xED127C88: return "evTapModelView_ResetCamera";
        case 0x00DAAB5A: return "evTapModelView_ResetRotation";
        case 0xB692A524: return "evTapModelView_StepBackAnim";
        case 0x28C2DB1F: return "evTapModelView_StepForwardAnim";
        case 0x325605D7: return "evTapModelView_SwitchSection";
        case 0xB798766F: return "evTapModelView_ZoomToObject";
        case 0x545C07C8: return "evTapMove_Dir_3D";
        case 0x858879A9: return "evTapMove_Dir_Ground";
        case 0x1F7AABB2: return "evTapMove_Dir_InAir";
        case 0x86D0193B: return "evTapMove_Dir_Markup";
        case 0x5D8A2887: return "evTapMove_Dir_Relative";
        case 0x4374B34F: return "evTapMove_Dir_Wall";
        case 0xB1B34ECA: return "evTapMove_Rate";
        case 0x5704EAF9: return "evTapMove_Rate_Delta";
        case 0xF744361F: return "evTapMove_Rate_InAir";
        case 0x0DD623A1: return "evTapNpc_AlternateAttack";
        case 0xBFE019D0: return "evTapNpc_Block";
        case 0xC97DE833: return "evTapNpc_Celebrate";
        case 0xCB9918A4: return "evTapNpc_CombatIdle";
        case 0xBA29DD30: return "evTapNpc_Guard";
        case 0x35DDA4A1: return "evTapNpc_Idle";
        case 0x36E55793: return "evTapNpc_Jump";
        case 0x6744075E: return "evTapNpc_Melee";
        case 0x36A6CB35: return "evTapNpc_Move";
        case 0xCD39BE42: return "evTapNpc_NavHelper";
        case 0x5E428308: return "evTapNpc_Parry";
        case 0x20C3478D: return "evTapNpc_PreferredAttack";
        case 0xE3D8E75D: return "evTapNpc_ReactiveAttack";
        case 0xA1296681: return "evTapNpc_Riposte";
        case 0xFB8C0AE9: return "evTapNpc_SeizeAttack";
        case 0x67619204: return "evTapNpc_Spawn";
        case 0x36A5E193: return "evTapNpc_Stun";
        case 0x9AAB7FAF: return "evTapNpc_IncapRecover";
        case 0x086E6C0C: return "evTapNpc_StunRecover";
        case 0x5CCE840A: return "evTapNpc_ThrownAttack";
        case 0x36B9CDCE: return "evTapNpc_Turn";
        case 0xE95C8B4A: return "evTapProgrammerDebugCircle";
        case 0x1B7AF501: return "evTapProgrammerDebugCross";
        case 0x7E73BBCC: return "evTapProgrammerDebugDPadDown";
        case 0x7E6F501C: return "evTapProgrammerDebugDPadLeft";
        case 0x0C45F0DE: return "evTapProgrammerDebugDPadRight";
        case 0xF0A7A7B4: return "evTapProgrammerDebugDPadUp";
        case 0x34984AB4: return "evTapProgrammerDebugLB";
        case 0x83EEEC35: return "evTapProgrammerDebugLStickBack";
        case 0xE80C630B: return "evTapProgrammerDebugLStickForward";
        case 0x5AE67F50: return "evTapProgrammerDebugLStickLeft";
        case 0xD2A2A5FC: return "evTapProgrammerDebugLStickRight";
        case 0x34984AC6: return "evTapProgrammerDebugLT";
        case 0x349849F0: return "evTapProgrammerDebugRB";
        case 0x349849FE: return "evTapProgrammerDebugRT";
        case 0x46FF5D09: return "evTalk";
        case 0xD33F98E9: return "evListen";
        case 0x8B16BDC8: return "evTuneLeft";
        case 0x9D551751: return "evTuneRight";
        case 0x4711B9A5: return "evTune";
        case 0xBFB4AEA6: return "evTapProgrammerDebugSquare";
        case 0x0795EFC8: return "evTapProgrammerDebugTriangle";
        case 0x977E6360: return "evTapPrototype_AccurateAimAlt";
        case 0x65BFEE87: return "evTapR1";
        case 0x65BFEE88: return "evTapR2";
        case 0x65BFEE58: return "evTapRB";
        case 0x1E85C347: return "evTapRIGHT";
        case 0xC96A117D: return "evTapRSTICK_DOWN";
        case 0xC95642A9: return "evTapRSTICK_LEFT";
        case 0x984760D1: return "evTapRSTICK_RIGHT";
        case 0xA70548DF: return "evTapRSTICK_UP";
        case 0x65BFEECA: return "evTapRT";
        case 0xCE6060D2: return "evTapRespawn";
        case 0x7B525F3B: return "evTapRope_Climb";
        case 0x8268AF34: return "evTapRope_Swing";
        case 0x61DA3C7D: return "evTapSELECT";
        case 0x666FEC91: return "evTapSQUARE";
        case 0x1E7819E9: return "evTapSTART";
        case 0x068FCBCF: return "evTapSelect_Ammo";
        case 0x110378FD: return "evTapSelect_Bow";
        case 0x110373A9: return "evTapSelect_Gun";
        case 0xFAB95365: return "evTapSelect_Melee";
        case 0xD0E92543: return "evTapSwim_Dive";
        case 0x4E01CB75: return "evTapSwim_Forward";
        case 0x5D39B699: return "evTapSwim_PitchRate";
        case 0x72CE3384: return "evTapSwim_Resurface";
        case 0x35651A72: return "evTapTRIANGLE";
        case 0xC35E050B: return "evTapTest_A";
        case 0xC35E050C: return "evTapTest_B";
        case 0xC35E0519: return "evTapTest_C";
        case 0xC35E051A: return "evTapTest_D";
        case 0x65BFEC32: return "evTapUP";
        case 0xD2696BB5: return "evTapUse_Adrenaline";
        case 0xD33452E6: return "evTapUse_Disengage";
        case 0x54D15C82: return "evTapUse_Drop";
        case 0xDCD3A0D8: return "evTapUse_Engage";
        case 0x625895F7: return "evTapUse_EquipQuickMenu";
        case 0x02736447: return "evTapUse_Health";
        case 0x53838A60: return "evTapUse_LookAt";
        case 0xF9AF8E92: return "evTapUse_Pickup";
        case 0x1A50E731: return "evTapUse_Pull";
        case 0x1A50E614: return "evTapUse_Push";
        case 0xE76C9659: return "evTapUse_Throw";
        case 0x1DE236EA: return "evThrowEvents";
        case 0xE30065B5: return "evUIMenuStateLC2MapViewEnter";
        case 0x224E05D7: return "evUIMenuStateLC2MapViewExit";
        case 0x0E01D6C1: return "evVehicleCrash";
        case 0x4720A8C2: return "evVehicleForcedDismount";
        case 0x4353DDC8: return "evVehicleForcedMount";
        case 0x1682AE6B: return "evVehicleMount";
        case 0x470B7355: return "evVehicleMounted";
        case 0xE250F0F0: return "evVehicleSetMPH";
        case 0x77C21631: return "evWaterVolumePointCrested";
        case 0x76AE14EF: return "evWeaponBowChargedAnim";
        case 0x60BFE4B4: return "evWeaponBowDrawAnim";
        case 0x7F3B1405: return "evWeaponBowDrawnAnim";
        case 0xF69A2D7F: return "evWeaponBowRelaxAnim";
        case 0xFBE02CBA: return "evWeaponModifyPlayerAmmo";
        case 0xE201AA70: return "evWeapon_Jam";
        case 0x88FAF5D5: return "evMacheteContact";
        case 0xEDC42D3A: return "evMacheteSwingStarted";
        case 0xF984F2A6: return "evEnterRappelSwingInitiationZone";
        case 0x4CA959D4: return "ForceHeroicAttack";
        case 0xA58BBF96: return "input_0";
        case 0xA58BBF95: return "input_1";
        case 0xA58BBF94: return "input_2";
        case 0xA58BBF93: return "input_3";
        case 0xA58BBF9A: return "input_4";
        case 0xA58BBF99: return "input_5";
        case 0xA58BBF98: return "input_6";
        case 0xA58BBF97: return "input_7";
        case 0xA58BBF9E: return "input_8";
        case 0xA58BBF9D: return "input_9";
        case 0xDFFAB413: return "input_10";
        case 0xDFFAB414: return "input_11";
        case 0xDFFAB419: return "input_12";
        case 0xDFFAB41A: return "input_13";
        case 0xDFFAB417: return "input_14";
        case 0xDFFAB418: return "input_15";
        case 0xDFFAB40D: return "input_16";
        case 0x3DE570E6: return "output_0";
        case 0x3DE570E3: return "output_1";
        case 0x3DE570E4: return "output_2";
        case 0x3DE570D1: return "output_3";
        case 0x3DE570D2: return "output_4";
        case 0x3DE570CF: return "output_5";
        case 0x3DE570D0: return "output_6";
        case 0x3DE570CD: return "output_7";
        case 0x3DE570CE: return "output_8";
        case 0x3DE570CB: return "output_9";
        case 0xB0E5D259: return "output_10";
        case 0xB0E5D25A: return "output_11";
        case 0xB0E5D24B: return "output_12";
        case 0xB0E5D24C: return "output_13";
        case 0xB0E5D24D: return "output_14";
        case 0xB0E5D24E: return "output_15";
        case 0xB0E5D24F: return "output_16";
        case 0x7222BF63: return "CheckAllEnemiesDead";
        case 0x04C204EE: return "SpawnEnemyReinforcements1";
        case 0x04C204EC: return "SpawnEnemyReinforcements3";
        case 0x04C204ED: return "SpawnEnemyReinforcements2";
        case 0xEA74F03A: return "SpawnEnemyReinforcements";
        case 0xD2BDB499: return "CancelBumRushLogic";
        case 0x6AF3951A: return "event_test";
        case 0x63C3115F: return "flammableComponentMessageHandler";
        case 0xDDAA5EA9: return "force_weapon_change_finisher";
        case 0xCA4B5B33: return "force_weapon_change";
        case 0x661F0F64: return "from_intro";
        case 0xEF733893: return "from_section";
        case 0x0F1CEB25: return "global";
        case 0xBA7A8E6E: return "health_portable_use_complete";
        case 0xB4537C13: return "health_portable_use_cancel";
        case 0x719D1C1E: return "health_portable_use_begin";
        case 0x7A5D9CAF: return "hurtlanding";
        case 0xB056E522: return "input";
        case 0xE40AAB49: return "instance";
        case 0x6830E796: return "instance_01";
        case 0x6830E797: return "instance_02";
        case 0x6830E798: return "instance_03";
        case 0x6830E799: return "instance_04";
        case 0x6830E79A: return "instance_05";
        case 0x6830E78B: return "instance_06";
        case 0x6830E78C: return "instance_07";
        case 0x6830E78D: return "instance_08";
        case 0x6830E78E: return "instance_09";
        case 0x6830E7B6: return "instance_10";
        case 0xF0FFD580: return "ct_cd_lock_cart_open";
        case 0xF74800E9: return "ct_cd_lock_cart_close";
        case 0x6882438E: return "ct_cd_lock_cart_forceopen";
        case 0x80E0C65D: return "ct_cd_lock_cart_forceclose";
        case 0x3F87B23E: return "ct_wt_tower_transition_to_stage_2";
        case 0x3F87B23B: return "ct_wt_tower_transition_to_stage_1";
        case 0x3F87B23C: return "ct_wt_tower_transition_to_stage_0";
        case 0xD59DE4CE: return "ct_wt_tower_skip_to_stage_2";
        case 0xD59DE4CD: return "ct_wt_tower_skip_to_stage_1";
        case 0xD59DE4CC: return "ct_wt_tower_skip_to_stage_0";
        case 0xBE9F8242: return "ct_wt_tower_stage1_arms_in";
        case 0xEA2F9886: return "ct_wt_tower_stage1_arms_out";
        case 0xD14EFD01: return "ct_wt_tower_stage1_rumble";
        case 0xA0E8BAA6: return "ct_wt_tower_stage2_arms_in";
        case 0xD70EC829: return "ct_wt_tower_stage2_arms_out";
        case 0x2EABE6FD: return "ct_wt_tower_stage2_rumble";
        case 0xCFC1A741: return "current_interact_object_ID";
        case 0xBBDCEE69: return "introcamdone";
        case 0x5350B1B9: return "junkFall";
        case 0x98101714: return "laraCamHelper_animGraphReset";
        case 0xBF7C9889: return "laraCamHelper_camAnimEnded";
        case 0x728F3472: return "laraCamHelper_shotgunFinisher3";
        case 0x728F3471: return "laraCamHelper_shotgunFinisher2";
        case 0xE3D9E401: return "laraCamHelper_deathfromaboveFinisher";
        case 0xF450B422: return "laraCamHelper_smgFinisher2";
        case 0xF450B421: return "laraCamHelper_smgFinisher1";
        case 0x728F346C: return "laraCamHelper_shotgunFinisher1";
        case 0xEEB51805: return "laraCamHelper_bowFinisher3";
        case 0xEEB51804: return "laraCamHelper_bowFinisher2";
        case 0xC271BD89: return "laraCamHelper_bearhugSeizeDone";
        case 0x7A4898CA: return "laraCamHelper_archerFinisher";
        case 0xFECC5178: return "laraCamHelper_bearhugSeize";
        case 0x4FB5F409: return "laraCamHelper_pistolFinisher1";
        case 0xA1B4A202: return "laraCamHelper_RockFinisher";
        case 0xEEB51803: return "laraCamHelper_bowFinisher1";
        case 0xEDA89B4C: return "latchOpened";
        case 0x3F894621: return "ll_end";
        case 0x578DA088: return "ll_narrowwall";
        case 0x72C03A27: return "ll_wallPushOff";
        case 0x72C03A27: return "ll_wallpushoff";
        case 0x349097D5: return "lock";
        case 0x4B282838: return "not_sheltered";
        case 0x39D8C7DD: return "off";
        case 0x58BCE60D: return "on";
        case 0x7F711E4E: return "oncineractend";
        case 0x253751A4: return "onswitchtoraiding";
        case 0x867C1C90: return "OnTorchEquipped";
        case 0xD88A54D9: return "OnWallcrawlExit";
        case 0x232386D9: return "ontrappedinsac";
        case 0x347A8A21: return "open";
        case 0x03E0E8B6: return "opened";
        case 0x390ABE89: return "copperpot_ping";
        case 0x4F3B57E1: return "copperpot_script";
        case 0xF94BEA9A: return "copperpot_basicmemorycapture";
        case 0xFDF3E5A5: return "copperpot_singlefpscapture";
        case 0xF4880DA7: return "copperpot_rotatecameraaboutplayer";
        case 0x28077571: return "copperpot_teleportplayertomarker";
        case 0xA97DF1D9: return "copperpot_skewplayertomarker";
        case 0xB90212ED: return "copperpot_killplayer";
        case 0x13E604CE: return "copperpot_resetintros";
        case 0x6CE810DD: return "copperpot_reloadcurrentunit";
        case 0x2F272FE1: return "copperpot_pitchcameraaboutplayer";
        case 0x9B550FBF: return "copperpot_assert";
        case 0xE502DFC6: return "playerOn";
        case 0x5FB05493: return "pushthrough";
        case 0xC009FF04: return "raiding_abort";
        case 0xF0AEDCE6: return "raiding_fail";
        case 0x32BA3FD8: return "raiding_success";
        case 0xAA99EC04: return "releaseControl";
        case 0x7006E73A: return "reactiveDodgeWindowStart";
        case 0x46001391: return "reachedwaterfall";
        case 0xFDECF5C7: return "render";
        case 0xFD65A9F7: return "ringDamaged";
        case 0x02F6DB20: return "rockSlide";
        case 0x3E24E10E: return "rockSlideDone";
        case 0xF5C37CAC: return "scripttestMessage";
        case 0xBBE5F67A: return "scripttestMessagebool";
        case 0xE3C76EFD: return "sections";
        case 0x529A92EB: return "SetJointLimit";
        case 0x5722E576: return "sheltered";
        case 0x628423C1: return "smoulder";
        case 0xE07A2945: return "spinFast";
        case 0xE0542A94: return "spinSlow";
        case 0x20B2331E: return "stumble_b";
        case 0xE9F64015: return "stumble";
        case 0xD33699F7: return "takeControl";
        case 0x7BE108CC: return "tiltside";
        case 0x7C8C5C1E: return "tiltdown";
        case 0x852FC2BC: return "to_left";
        case 0x073D568A: return "to_myself";
        case 0xFB44E172: return "toggledraw";
        case 0x2F275A3F: return "tolookaround";
        case 0x160C7771: return "unlock";
        case 0x245B4044: return "unlockMe";
        case 0x245B4339: return "unlocked";
        case 0xA9691C39: return "Windy";
        case 0x9A6642E6: return "wind_gust";
        case 0x339E2077: return "CrowdCharge";
        case 0x2F7E8F8E: return "CrowdChargeSuccessStunned";
        case 0x5851FFE8: return "Exit_Right";
        case 0x12666D4D: return "Exit_Left";
        case 0x12680E5C: return "Exit_Idle";
        case 0x1258FB1D: return "exit_look";
        case 0x57F778D6: return "exitedwaterfall";
        case 0xA5F603B5: return "ISS_Start_Alt";
        case 0x7A9BF4E3: return "ISS_Start";
        case 0x2AAEC65F: return "ISS_AnimGraph_ReEnter_FromAGCode";
        case 0x80112F0B: return "ISS_Exit_Success";
        case 0x42A4FD8E: return "ISS_GenericEventFromAnimation_WithString";
        case 0x535C9307: return "ISS_BoneCameraDone";
        case 0x3DEB7B7D: return "ISS_BoneCameraStart";
        case 0x1CF2C5C2: return "ISS_Exit_Failure";
        case 0xFB385598: return "ISS_GenericEvent1";
        case 0xFB385597: return "ISS_GenericEvent2";
        case 0x2F2C502F: return "ISS_GenericEventFromActionGraph_WithString";
        case 0xFB38559A: return "ISS_GenericEvent3";
        case 0xFB385599: return "ISS_GenericEvent4";
        case 0x6FE8B980: return "ISS_Finished_Player";
        case 0xC6BF7848: return "ISS_Finished_NPC";
        case 0x4DD97B81: return "torchDisableFlammable";
        case 0xCC7AE5ED: return "torchEnableFlammable";
        case 0x0D88ABF6: return "torchOn";
        case 0x6A12DBC4: return "torchOff";
        case 0x6E120C02: return "sensorEntered";
        case 0xA8751026: return "sensorExited";
        case 0x72FE24E6: return "seize_attack_phase_one_complete";
        case 0x02476ECF: return "seize_attack_phase_two_complete";
        case 0x951715DB: return "HackQuickFire_EquipBow_HideNormalBow";
        case 0xA34B229B: return "CheckPreconditions";
        case 0xE1370CC8: return "CheckPreconditionsDone";
        case 0x125D12A7: return "player_SmashJump";
        case 0x176F3548: return "Instance_AnimGoal_Changed";
        case 0xBF203B47: return "TreasureFound";
        case 0x11AEBE5A: return "chasm_start_soldierIntro_cine";
        case 0x643C87D2: return "chasm_start_upstream";
        case 0x295D85AA: return "chasm_start_arena";
        case 0x2043B1AD: return "chasm_stalker_unblockFinalDoor";
        case 0x0593A8DC: return "chasm_stalker_allDead";
        case 0x1CAD1A25: return "evClimbAroundRung";
        case 0x5D65A518: return "chasm_upstream_spawn_squadB";
        case 0x5D65A519: return "chasm_upstream_spawn_squadA";
        case 0x4117E7B4: return "chasm_stalker_intro";
        case 0x6A71410E: return "chasm_scoreboard_pause";
        case 0xE606D1FB: return "chasm_scoreboard_unpause";
        case 0xAEE7F0C9: return "chasm_scoreboard_resetClock";
        case 0x6B3E70BF: return "chasm_scoreboard_start";
        case 0xECAAD780: return "chasm_scoreboard_stop";
        case 0x21CEFAA8: return "chasm_scoreboard_updateWave";
        case 0x013AD52B: return "chasm_scoreboard_updateKills";
        case 0xA48A3E8B: return "chasm_scoreboard_resetScore";
        case 0xD80E19F5: return "chasm_scoreboard_updateToKill";
        case 0xCF6D74A8: return "chasm_scoreboard_resetWave";
        case 0x1515E3AD: return "chasm_extinguish_candles";
        case 0xB8F0D43A: return "dodge_player";
        case 0xD6C6D4F0: return "UI_Objective_Text";
        case 0x6E07014F: return "UI_Objective_Display";
        case 0xC7BC28CF: return "UI_PDA_Text";
        case 0xDE96FDAC: return "UI_PDA_Display";
        case 0x96D2B3A1: return "UI_Ammo_Display";
        case 0x9113BCB0: return "UI_Weapon_Display";
        case 0xB097E848: return "UI_Dialog_Text";
        case 0x74E3AA92: return "UI_SurvivalGuide_Display";
        case 0xFC6EE347: return "UI_SurvivalGuide_Text";
        case 0xF90F0DF5: return "UI_Health_Display";
        case 0xC3B3C161: return "UI_ButtonPrompt";
        case 0x6E6AC339: return "UI_LookAtPrompt";
        case 0x84C82AF7: return "UI_R3Prompt";
        case 0xB3922DE4: return "DenFlammableReady";
        case 0xE4AC3C20: return "snuffed";
        case 0x0EEA6DDF: return "CannedGrapple_Attach";
        case 0x9A9588EC: return "CannedGrapple_Detach";
        case 0x1DB8EF51: return "CannedGrapple_ForceDetach";
        case 0x8E8A1593: return "dynLight_SetIntensity";
        case 0x6FF2624A: return "dynLight_SetRadius";
        case 0x92582289: return "dynLight_SetColor";
        case 0x528AE020: return "evGPSCaptureStart";
        case 0x2C58A62D: return "evGPSCaptureAbort";
        case 0x8E17D643: return "evGPSCaptureComplete";
        case 0x5EDD4D2E: return "melee_stun_reEnter";
        case 0x2C1B5468: return "melee_spam_reactive_attack";
        case 0xBD2BF4E8: return "melee_spam_jump_back";
        case 0x8DFB51C9: return "melee_1_started_again";
        case 0x632E2820: return "melee_player";
        case 0x27C2C72E: return "Melee_Evade";
        case 0x57A9D2E6: return "Melee_Counter";
        case 0xA8090774: return "cam_denWingAttach";
        case 0x839E93DE: return "cam_denWingDetach";
        case 0xE3D2C10C: return "jump_combat_player";
        case 0xF5501828: return "goto_bow_charge_state";
        case 0xAD59A00F: return "allyWolf_in_seizeAttack";
        case 0x9DF1B21A: return "ally_in_DBND";
        case 0x15E007C8: return "ally_in_jump_escape";
        case 0xC0F78D72: return "ally_hit_by_melee_intermediate";
        case 0x30BA516C: return "player_hit_by_weak_health_state";
        case 0x07AE0793: return "ally_hit_by_finisher";
        case 0x6D505D86: return "ally_hit_by_seize";
        case 0xFFD82CE5: return "hit_by_melee";
        case 0x6D6B76AE: return "ally_hit_by_melee";
        case 0x4CD3E002: return "arrowFireCharged_Birthed";
        case 0x7015F7D5: return "evGPSObjectShow";
        case 0xCFF667AF: return "evGPSObjectHighlight";
        case 0x7E339BE3: return "evGPSObjectSelect";
        case 0xD073C89A: return "NpcExplosiveNearby";
        case 0x49F8F3C9: return "NpcFrenzyFireInWay";
        case 0x9340E7C9: return "NpcFrenzyFireInWay_Jump";
        case 0x6E95BAA9: return "NpcAimEvadeOverlayEnding";
        case 0xF3733277: return "NpcAimEvadeOverlayStarting";
        case 0xFD64B4F4: return "NpcAimEvade";
        case 0xBFE34F96: return "ObjTrans_47";
        case 0x97303682: return "synchronize";
        case 0x509FF1F9: return "quickturn_180_Left";
        case 0x07825BAF: return "quickturn_180_onTarget";
        case 0x5624CE71: return "quickturn_start";
        case 0x811FC998: return "quickturn_180";
        case 0x812068D4: return "quickturn_90r";
        case 0x8120693E: return "quickturn_90l";
        case 0x812AF6D6: return "quickturn_end";
        case 0x20AF530A: return "quickturn_roll_reversal_start";
        case 0xE6D052FA: return "quickturn_roll_reversal_end";
        case 0x958C1C0A: return "crow_die";
        case 0x2FED8A98: return "crow_fly_takeoff";
        case 0xFAD73D20: return "crow_run_away";
        case 0x99BBBF32: return "crow_idle_peck";
        case 0x53F82DF3: return "crow_idle";
        case 0xDDDD9913: return "onslaught_squad_1_dead";
        case 0x44A9DAB1: return "onslaught_squad_2_dead";
        case 0xAAA9D797: return "evSeizeInitiatedAttacker";
        case 0x44521048: return "evSeizeTerminatedAttacker";
        case 0xBDB3DBF0: return "combat_status_enter_combat";
        case 0x1AC7171C: return "combat_status_exit_combat";
        case 0x2EF9BFA2: return "evChangeDOF";
        case 0x90F22E19: return "chasm_arena_start";
        case 0x789D106D: return "chasm_arena_wave1_end";
        case 0x517F4EB3: return "chasm_arena_wave2_end";
        case 0x516F2438: return "chasm_arena_wave3_end";
        case 0x9C370963: return "chasm_arena_wave4_end";
        case 0x7DC79015: return "chasm_arena_final_enemy";
        case 0xC2A2B5C2: return "chasm_arena_end";
        case 0xE5C6EAA1: return "chasm_upstream_start";
        case 0x25A89B51: return "chasm_upstream_wave1_end";
        case 0x287B0CED: return "chasm_upstream_wave2_end";
        case 0x2804E5D0: return "chasm_upstream_wave3_end";
        case 0x26CE3675: return "chasm_upstream_wave4_end";
        case 0x53881463: return "chasm_upstream_final_enemy";
        case 0xEE2842A0: return "chasm_upstream_end";
        case 0x7B12BDEC: return "chasm_stalker_start";
        case 0x3B8BC5A1: return "chasm_stalker_end";
        case 0x501B0A15: return "chasm_onslaught_start";
        case 0xFDFC6585: return "chasm_onslaught_wave1_end";
        case 0x2A76E7A0: return "chasm_onslaught_wave2_end";
        case 0x2A741F90: return "chasm_onslaught_wave3_end";
        case 0xFDD9AB81: return "chasm_onslaught_wave4_end";
        case 0xABF3263A: return "chasm_onslaught_end";
        case 0xE882AAD5: return "OnSpawnWithAnimation";
        case 0x94F8A14D: return "combat_notify_npc_attacking_ground";
        case 0x49DE03DA: return "combat_notify_npc_hit_opposing_player";
        case 0x33E0B40B: return "combat_notify_npc_hit_friendly_player";
        case 0x8498E2B9: return "combat_notify_npc_hit_neutral_player";
        case 0x73D653BC: return "reactiveDodgeSuccess";
        case 0xA2C27F17: return "reactiveDodgeWindowEnd";
        case 0x3C9B648F: return "evFade";
        case 0xF6E229B1: return "OnStartAnimation";
        case 0xAE64C28E: return "fx_on";
        case 0x159C702A: return "fx_off";
        case 0x6C5F8000: return "fx_burn_on";
        case 0xE47F7CEF: return "fx_burn_off";
        case 0x796ECF0E: return "fx_dissolve_on";
        case 0x76AA908A: return "fx_dissolve_off";
        case 0xDC7A39EA: return "evThrowAttack";
        case 0x82431C78: return "fx_rambo_hall_on";
        case 0xCC36C9B5: return "fx_rambo_hall_off";
        case 0x4ED2BEF4: return "fx_waterfall_splash_on";
        case 0x81EF7246: return "fx_waterfall_splash_off";
        case 0xE3F81E4D: return "evCameraShake";
        case 0x3F91033D: return "ArmorInvulnerableHit";
        case 0xCE8AFC44: return "fsfx_blood_on";
        case 0xDCA4EB7E: return "fsfx_blood_off";
        case 0x77F9C426: return "evPadShock";
        case 0xD47A744E: return "VocalAnimEvent";
        case 0x020FE3D1: return "VocalStarted";
        case 0xD6E4CC8C: return "VocalDone";
        case 0x9CEA9AA2: return "statecontrol_npc_search_arrived";
        case 0x61C129A8: return "statecontrol_npc_search_begin_next";
        case 0xCB68B639: return "statecontrol_npc_investigate_begin";
        case 0x896BE57B: return "statecontrol_npc_investigate_exit";
        case 0x54E66458: return "StateControlEvent";
        case 0xD2C4A89A: return "start_right";
        case 0x44807ECE: return "start_left";
        case 0xAEC1483A: return "start";
        case 0xE15516BB: return "started";
        case 0x348044A4: return "stop";
        case 0xE827BAA8: return "stopped";
        case 0x5D340A04: return "treesnuffing";
        case 0xEECD6348: return "enemyweapon_ground";
        case 0xD0C3BD1A: return "enemyweapon_hitreact";
        case 0xD4940AAE: return "enemyweapon";
        case 0x70A0BE64: return "evGrappleArrowAttached";
        case 0x9726D1B1: return "evTrapezeProjectileAttachedToGrapplePoint";
        case 0xDF3B28C5: return "evTrapezeProjectileAttachedToOtherObject";
        case 0x785BB1A1: return "Ledge_pullup_from_ledge";
        case 0x0A33F22A: return "Ledge_drop_from_ledge";
        case 0x10A44987: return "Ledge_attach_high_end";
        case 0xEEBAE44F: return "bowZoomedAimCam";
        case 0xE6E3F2FD: return "bowNormalAimCamNOW";
        case 0x461215B5: return "bowAimReady";
        case 0xD092AC37: return "bowAimCam";
        case 0x229B471A: return "bowNormalAimCam";
        case 0x5E0CD03E: return "AnimGraphInstance_NotifyCinematicStarted";
        case 0x66F15E9B: return "AnimGraphInstance_NotifyCinematicInInteractableStarted";
        case 0x6DA27A01: return "AnimGraphInstance_NotifyCinematicEnded";
        case 0x6CB4943A: return "AnimGraphInstance_NotifyCinematicInInteractableEnded";
        case 0x242A316C: return "interact_use_start_finished";
        case 0x9E138AC6: return "interact_use_start";
        case 0x4E5975C3: return "interact_use_fail_finished";
        case 0xDF26DD8E: return "interact_use_fail";
        case 0x1163DF1E: return "interact_use_success_finished";
        case 0xC0E8BE86: return "interact_use_success";
        case 0x29E22C75: return "interact_use_abort_finished";
        case 0x91510328: return "interact_use_abort_WhenAnimFinishes";
        case 0x32A754DF: return "interact_use_abort";
        case 0xB06C58EA: return "interact_use_playerid";
        case 0x92D2B001: return "interact_use_attached";
        case 0xAB08DDE1: return "interact_use_released";
        case 0xB230A7C6: return "interact_use_finished";
        case 0x6BDBFB55: return "interact_use_continue";
        case 0x65B42D7F: return "interact_push";
        case 0x65B42E64: return "interact_pull";
        case 0x932C81B4: return "interact_pushpull_pause";
        case 0x861E8E79: return "interact_pushpull_pushing";
        case 0x85EBC0A9: return "interact_pushpull_pulling";
        case 0xF8815733: return "interact_pushpull_idle";
        case 0x32D37464: return "interact_companion_ready";
        case 0x4E5FF4DA: return "turnable_crank_unwind_done";
        case 0xBFCA13CC: return "ForceInteractStart";
        case 0x8E281394: return "Interact_AnimGraph_ForceEnter_FromAGCode";
        case 0x995CB6D5: return "ForceInteractEnd";
        case 0x0D59A6E2: return "OnInteractStart";
        case 0xB72B1B3E: return "OnInteractComplete";
        case 0x7F8D00E4: return "OnInteractFullyEngaged";
        case 0x1795B981: return "OnInteractAbort";
        case 0xBD56A59F: return "OnInteractCancel";
        case 0x6BF05E76: return "OnInteractEnd";
        case 0x1615BA67: return "OnInteractAnimDone";
        case 0xC12339AF: return "OnInteractVolumeEntry";
        case 0xE7E19653: return "OnInteractVolumeExit";
        case 0x9354FAE4: return "OnInteractPromptShow";
        case 0x930CF3D2: return "OnInteractPromptHide";
        case 0x5A211BFF: return "OnInteractGlobalPromptHide";
        case 0x5A35E187: return "OnInteractGlobalPromptShow";
        case 0xC1C844FC: return "OnInteractDenyQuery";
        case 0x54DFEEAA: return "OnInteractPushPullStart";
        case 0xF16E07AE: return "OnInteractPushPullEnd";
        case 0x72719675: return "OnInteractPushPullImpulse";
        case 0xF9DAB3D6: return "OnAdvertiseAbort";
        case 0xDF2A45C4: return "OnAdvertiseCancel";
        case 0xD82D72E1: return "OnAdvertiseComplete";
        case 0xF35DB4FA: return "OnAdvertiseDenyQuery";
        case 0xC8B6310F: return "OnAdvertiseEnd";
        case 0xFEDCE1C0: return "OnAdvertiseStart";
        case 0xFD49DAF4: return "OnInteractEverybodyReady";
        case 0xF8FA3F10: return "OnInteractEverybodyComplete";
        case 0xE550333A: return "OnInteractSomebodyFailed";
        case 0x8019C811: return "uiplus_status_menu_collided";
        case 0x2B159B7E: return "uiplus_status_menu_collided_end";
        case 0xA76242F2: return "uiplus_status_menu";
        case 0xF2EC049F: return "uiplus_status_menu_end";
        case 0x9FF69EE3: return "uiplus_status_menu_can_not_open";
        case 0x157D91A5: return "uiplus_radialSelector_menu_2d";
        case 0x1F3DC4C4: return "uiplus_radialSelector_menu_2d_end";
        case 0x4619F030: return "uiplus_objective_primary_title";
        case 0xEC6C09A5: return "uiplus_objective_primary_desc";
        case 0x80C2E8D8: return "uiplus_objective_secondary_desc";
        case 0x9597C11D: return "uiplus_objective_secondary_ID";
        case 0x7D165A8F: return "uiplus_objective_secondary_type";
        case 0x49BA3780: return "uiplus_objective_image_path";
        case 0x6362D46A: return "uiplus_objective_subobjective_title";
        case 0xC0410651: return "uiplus_radialSelector_menu";
        case 0xA2061344: return "uiplus_status_menu_fullscreen_end";
        case 0xCAFF1651: return "uiplus_status_menu_fullscreen_start";
        case 0x33467F16: return "uiplus_status_menu_open_state";
        case 0xD816F801: return "uiplus_status_menu_collectible_instanceID";
        case 0x4253F129: return "uiplus_status_menu_collectible_dump";
        case 0xD20C7E1C: return "uiplus_status_menu_collectible_foundinfo";
        case 0x263BBFC3: return "uiplus_status_menu_hidden_info_search";
        case 0xBDFFC35A: return "uiplus_status_menu_shutdown";
        case 0x17AD6207: return "uiplus_status_menu_end_map_collectible_view";
        case 0x63BE2147: return "uiplus_ammo_select_end";
        case 0xB02D893E: return "uiplus_ammo_select";
        case 0x7BF25854: return "uiplus_award_challenge";
        case 0x04B9554F: return "uiplus_award_mission_complete";
        case 0x8290A0C9: return "uiplus_xp_end_percent";
        case 0xDEF033A8: return "uiplus_xp_start_percent";
        case 0x6BAC32BC: return "uiplus_award_lxp";
        case 0xFE3767F5: return "uiplus_award_xp";
        case 0x023A8A31: return "uiplus_xp_complete";
        case 0xF8371D09: return "uiplus_xp_bonus_name";
        case 0x9350432F: return "uiplus_xp_skillpoints";
        case 0xBD58DC45: return "uiplus_interact_end";
        case 0x07CD224A: return "uiplus_interact_fail";
        case 0x07E20FCB: return "uiplus_interact_pass";
        case 0x768A437F: return "uiplus_interact_progress";
        case 0x9762FF3F: return "uiplus_interact";
        case 0x29CBD080: return "uiplus_collectable_done";
        case 0x7618151A: return "uiplus_collectable_reward";
        case 0x3D90244F: return "uiplus_collectible_set_updated";
        case 0xF6D00E86: return "uiplus_collectible_set_status";
        case 0x9B05CBF7: return "uiplus_collectible_has_extra_info";
        case 0x43455B45: return "uiplus_collectable_audio_state";
        case 0x59A04FE7: return "uiplus_collectible_extra_info_found";
        case 0x59C09F64: return "uiplus_collectible_extra_info_title";
        case 0xB3AA43AC: return "uiplus_collectible_extra_info_desc";
        case 0x44390C91: return "uiplus_data";
        case 0x97161D5E: return "uiplus_point_of_interest";
        case 0xFC5BB494: return "uiplus_pickup_count";
        case 0x4F2C2E17: return "uiplus_pickup_new_percent";
        case 0xB8CC3E3B: return "uiplus_pickup_old_percent";
        case 0xAB60B605: return "uiplus_pickup_type";
        case 0x6A823858: return "uiplus_pickup_max_count";
        case 0xA981DA4C: return "uiplus_objective_primary_ID";
        case 0x7C1D566A: return "uiplus_progress_add";
        case 0xAEDC515C: return "uiplus_progress_remove";
        case 0xA55823AC: return "uiplus_pickup_load_ui";
        case 0xD28AFE32: return "uiplus_progress_update_percent";
        case 0x416C0F11: return "uiplus_pickup";
        case 0x70B8002E: return "uiplus_pickup_ammo_full";
        case 0x0109ED9E: return "uiplus_pickup_is_crafting_resource";
        case 0xC257DD9B: return "uiplus_message_confirm";
        case 0x18560F3F: return "uiplus_message";
        case 0xD2C9E306: return "uiplus_message_desc";
        case 0xE371A214: return "uiplus_message_label";
        case 0x5EA8DE4A: return "uiplus_notify";
        case 0x41EDE7A1: return "uiplus_notify_hide";
        case 0x14255E94: return "uiplus_challenge_type";
        case 0x9EB34ED1: return "uiplus_challenge_desc";
        case 0xFE62549B: return "uiplus_camera_trigger";
        case 0xECDC9F87: return "uiplus_challenge";
        case 0x03F6A1D6: return "uiplus_challenge_complete";
        case 0x0AD05C44: return "uiplus_tutorial_attachInstance";
        case 0xBE8EE8AB: return "uiplus_tutorial_ID";
        case 0x9B622BE8: return "uiplus_tutorial_total";
        case 0xF015CF06: return "uiplus_tutorial_end";
        case 0xF232BFFD: return "uiplus_tutorial_displayoffset_rot";
        case 0xF232B8EC: return "uiplus_tutorial_displayoffset_pos";
        case 0xD14C4E74: return "uiplus_tutorial_done";
        case 0xC025588C: return "uiplus_tutorial_type";
        case 0x32D7563A: return "uiplus_tutorial_camera_transition_time";
        case 0x2DD42CFD: return "uiplus_tutorial_attach_to_cam";
        case 0x9E200A82: return "uiplus_tutorial_pause";
        case 0x82164363: return "uiplus_tutorial_prompt_type";
        case 0x9AEE5D80: return "uiplus_tutorial_image";
        case 0x0CF2782A: return "uiplus_tutorial";
        case 0x9B457446: return "uiplus_tutorial_useattachedcam";
        case 0x97370ACA: return "uiplus_tutorial_aligntocamera";
        case 0x4AD1BFD5: return "uiplus_tutorial_camera_move_complete";
        case 0x98B345B3: return "uiplus_tutorial_debug_bli";
        case 0x2F0C1105: return "uiplus_systemic_tutorial_cancel_early";
        case 0xB9FA042A: return "uiplus_systemic_tutorial";
        case 0x66FF9CEE: return "uiplus_systemic_tutorial_close";
        case 0xA5618B6B: return "uiplus_training_tutorial_start";
        case 0xB764D9CC: return "uiplus_ledge_grab_end";
        case 0x3BD065D6: return "uiplus_ledge_grab";
        case 0x34AAAF0C: return "uiplus_button_prompt_end";
        case 0xF991DF68: return "uiplus_button_prompt_balancebeam";
        case 0x4DC94CC6: return "uiplus_button_prompt_wallcrawl";
        case 0x6124D864: return "uiplus_button_prompt_ledge";
        case 0xF8216AE7: return "uiplus_objective_aligntocamera";
        case 0x2B1E5E8E: return "uiplus_objective_on";
        case 0xE9C221F1: return "uiplus_objective_secondary_count";
        case 0xF04247A6: return "uiplus_objective_secondary_total";
        case 0xF025CABC: return "uiplus_objective_secondary_title";
        case 0x589E6A94: return "uiplus_objective_title";
        case 0x2B1E5F09: return "uiplus_objective_ID";
        case 0xA4CC5792: return "uiplus_objective_type";
        case 0x9A881D19: return "uiplus_objective_description";
        case 0x2459D8EC: return "uiplus_hide_objective";
        case 0xFBAFF86B: return "uiplus_objective_hidden";
        case 0x1DA937A2: return "uiplus_objective_hideall";
        case 0x10248B23: return "uiplus_campsite_progress_on";
        case 0x23ACB7F2: return "uiplus_campsite_skill_on";
        case 0x154810FB: return "uiplus_campsite_travel_on";
        case 0x9992E07B: return "uiplus_campsite_state_change_name";
        case 0x998E2577: return "uiplus_campsite_state_change_desc";
        case 0x51E9DB68: return "uiplus_campsite_decamped";
        case 0xF48838E6: return "uiplus_tomb_state_change_name";
        case 0xF4893E71: return "uiplus_tomb_state_change_desc";
        case 0x91C224EC: return "uiplus_button_rope_to_ledge";
        case 0x1CD98857: return "uiplus_campsite_craft_on";
        case 0x4F292F21: return "uiplus_campsite_fullscreen_off";
        case 0x95A1F4A2: return "uiplus_campsite_fullscreen_on";
        case 0x586B1188: return "uiplus_campsite_start";
        case 0xF0F0089B: return "uiplus_campsite_end";
        case 0x7BE15690: return "uiplus_campsite_micro_panels_loaded";
        case 0x7364383C: return "uiplus_radialSelector_menu_end";
        case 0x00767552: return "uiplus_iss_end_fail";
        case 0x0A81887B: return "uiplus_iss_end_success";
        case 0x78C89B81: return "uiplus_iss_start";
        case 0x0D6B6C5B: return "uiplus_iss_trigger";
        case 0x93B3A05C: return "uiplus_enter_from_gamestate";
        case 0x31C29484: return "uiplus_exit_to_gamestate";
        case 0x6C7FBDCD: return "uiplus_exit_aim_mode";
        case 0x1D3FF02C: return "uiplus_enter_aim_mode";
        case 0xADB3A392: return "uiplus_dpad_up";
        case 0x9B46B7B1: return "uiplus_dpad_left";
        case 0x1AFAA34C: return "uiplus_dpad_right";
        case 0x9B836A84: return "uiplus_dpad_down";
        case 0xDEDE401F: return "uiplus_dpad_end";
        case 0xE917AC05: return "uiplus_ammo_select_bow_1";
        case 0xE917AC06: return "uiplus_ammo_select_bow_2";
        case 0xE917AC03: return "uiplus_ammo_select_bow_3";
        case 0x37C5255F: return "uiplus_ammo_select_shotgun_1";
        case 0x37C52562: return "uiplus_ammo_select_shotgun_2";
        case 0x7907A9B0: return "uiplus_ammo_count";
        case 0xD3E7C126: return "uiplus_ammo_count_total";
        case 0xE022455C: return "uiplus_fx";
        case 0x93F166A4: return "uiplus_seize_start";
        case 0x2703E28D: return "uiplus_seize_end_success";
        case 0xE419795C: return "uiplus_seize_end_fail";
        case 0x84AABCB2: return "uiplus_seize_attack_prompt";
        case 0x042A6527: return "uiplus_seize_attack_success";
        case 0x89950549: return "uiplus_seize_attack_fail";
        case 0x9545E8B1: return "uiplus_collectable_show_close";
        case 0x6ACAB3A8: return "uiplus_collectable_hide_close";
        case 0xBBBD8718: return "uiplus_collectable_count";
        case 0x3E2C8270: return "uiplus_collectable_total";
        case 0x29CDA96F: return "uiplus_collectable_desc";
        case 0x29E08581: return "uiplus_collectable_type";
        case 0x990FB496: return "uiplus_menu_extras_zoomin";
        case 0xD1DE55D9: return "uiplus_menu_extras_zoomout";
        case 0x6DE82C21: return "uiplus_menu_extras_unloadstreamlayers";
        case 0xC9E93C3B: return "uiplus_menu_extras_loadstreamlayer";
        case 0xCD56717D: return "uiplus_menu_extras_scenecamswitch";
        case 0xDD33ACFC: return "uiplus_menu_extras_character_scene";
        case 0x42C3A975: return "uiplus_menu_extras_showcharacter1";
        case 0x42C3A976: return "uiplus_menu_extras_showcharacter2";
        case 0x42C3A973: return "uiplus_menu_extras_showcharacter3";
        case 0x42C3A974: return "uiplus_menu_extras_showcharacter4";
        case 0x42C3A971: return "uiplus_menu_extras_showcharacter5";
        case 0x0E8DFAF1: return "uiplus_menu_extras_hidecharacter1";
        case 0x0E8DFAF2: return "uiplus_menu_extras_hidecharacter2";
        case 0x0E8DFAEF: return "uiplus_menu_extras_hidecharacter3";
        case 0x0E8DFAF0: return "uiplus_menu_extras_hidecharacter4";
        case 0x0E8DFAED: return "uiplus_menu_extras_hidecharacter5";
        case 0xD55A90E6: return "uiplus_menu_extras_camera_exploration";
        case 0x58CEECCA: return "uiplus_menu_extras_camera_modelview";
        case 0x50B04CE8: return "uiplus_menu_multiplayer";
        case 0x33EBAA93: return "uiplus_menu_multiplayer_lobby";
        case 0x8A1B5780: return "uiplus_menu_multiplayer_lobby_switch_team";
        case 0xC13D9713: return "uiplus_menu_multiplayer_lobby_team_view";
        case 0x9E631F92: return "uiplus_menu_multiplayer_lobby_character_enter";
        case 0x6219A877: return "uiplus_menu_multiplayer_lobby_character_exit";
        case 0x9F6F025D: return "uiplus_menu_multiplayer_loadstreamlayer";
        case 0x730764A5: return "uiplus_menu_multiplayer_unloadstreamlayer";
        case 0xA4F97B15: return "uiplus_menu_multiplayer_characterselect";
        case 0x61A4FC2F: return "uiplus_menu_multiplayer_characterselect_enter";
        case 0x33373F5F: return "uiplus_menu_multiplayer_ready";
        case 0xB4EE894C: return "uiplus_menu_options_zoomin";
        case 0x38D1DCF3: return "uiplus_menu_options_zoomout";
        case 0xE6C8E6C8: return "uiplus_menu_external";
        case 0x92ABB802: return "uiplus_menu_intro";
        case 0xB26FDBDB: return "uiplus_menu_zoom_in";
        case 0x8ACB9FE6: return "uiplus_menu_zoom_out";
        case 0x6158F72C: return "uiplus_main_menu_category";
        case 0x53234204: return "uiplus_streamlayerdemo";
        case 0x9D2E9E48: return "uiplus_streamlayer_mp";
        case 0x6FA55322: return "uiplus_camp_shotgun_instanceID";
        case 0x35105F6D: return "uiplus_camp_shotgun_dump";
        case 0x2CA34ABA: return "uiplus_camp_reset_weapon_rotation";
        case 0xD1CDDAA8: return "uiplus_camp_weapon_pose_id";
        case 0xE97E1C0E: return "uiplus_hint_reminder";
        case 0x43295CEE: return "uiplus_hint_reminder_end";
        case 0x3EAC8FBD: return "uiplus_collectable_found";
        case 0xCC7AD2F2: return "uiplus_HUD_display_health";
        case 0x30AD44E4: return "uiplus_HUD_display_adrenaline";
        case 0x03DF1F16: return "uiplus_HUD_display_reload";
        case 0xD7EB2B02: return "uiplus_HUD_display_reload_off";
        case 0x7BAD5FF0: return "uiplus_HUD_display_weapon_select";
        case 0x7468472D: return "uiplus_HUD_display_weapon_select_off";
        case 0xE5E4EAFE: return "uiplus_HUD_display";
        case 0xBB6DAAE4: return "uiplus_HUD_display_off";
        case 0xEF4FDEBD: return "uiplus_HUD_weapon_select_play_sound";
        case 0x1556059A: return "uiplus_HUD_weapon_select_force_close";
        case 0x0F2BD796: return "uiplus_campsite_switch_next_skill_item";
        case 0x128C6FE1: return "uiplus_campsite_switch_prev_skill_item";
        case 0x5B4687BD: return "uiplus_campsite_release_skill_image";
        case 0x8306F0B3: return "uiplus_campsite_load_marker_image";
        case 0x994A99FD: return "uiplus_campsite_load_region_image";
        case 0xC7676997: return "uiplus_campsite_load_salvage_category_image_bow";
        case 0x16E5E81C: return "uiplus_campsite_load_salvage_category_image_shotgun";
        case 0xC76798EC: return "uiplus_campsite_load_salvage_category_image_smg";
        case 0x88B10F5E: return "uiplus_campsite_load_salvage_category_image_pistol";
        case 0xBA3DD0B2: return "uiplus_campsite_load_salvage_category_image_gear";
        case 0x2CEA6BDD: return "uiplus_campsite_unload_salvage_category_image";
        case 0xA0F2B21C: return "uiplus_status_menu_load_marker_image";
        case 0xFC884CA3: return "uiplus_status_load_salvage_category_image_bow";
        case 0xE01AAD26: return "uiplus_status_load_salvage_category_image_shotgun";
        case 0xFC8805FC: return "uiplus_status_load_salvage_category_image_smg";
        case 0x26BDECED: return "uiplus_status_load_salvage_category_image_pistol";
        case 0x7B493ACE: return "uiplus_status_load_salvage_category_image_gear";
        case 0x2607A2C6: return "uiplus_status_unload_salvage_category_image";
        case 0x1AA77CFF: return "uiplus_status_load_skill_category_image";
        case 0xDD2CB035: return "uiplus_status_unload_skill_category_image";
        case 0x55834172: return "uiplus_load_marker_image_action";
        case 0xD7853A3A: return "uiplus_status_menu_load_region_image";
        case 0x8557D663: return "uiplus_load_region_image_action";
        case 0x5EABA5DF: return "uiplus_main_menu_reload";
        case 0x212AF369: return "uiplus_status_menu_load_salvage_category_image";
        case 0xE143072A: return "uiplus_status_menu_load_map_height_map";
        case 0x95818447: return "uiplus_status_menu_unload_map_height_map";
        case 0xA2DC57E1: return "uiplus_campsite_load_map_height_map";
        case 0x062F75E1: return "uiplus_campsite_unload_map_height_map";
        case 0x4FDD9405: return "uiplus_campsite_open_category_zoom_in";
        case 0x08BB1F9D: return "uiplus_campsite_close_category_zoom_out";
        case 0xF661622D: return "uiplus_campsite_message";
        case 0x3FF264A9: return "uiplus_campsite_message_end";
        case 0xFBE9CBE2: return "uiplus_marker_attach_state";
        case 0xB5C3E88C: return "uiplus_marker_attach_instance_ID";
        case 0x212B853A: return "uiplus_campsite_tutorial_open";
        case 0x41275689: return "uiplus_campsite_tutorial_close";
        case 0x78A88A61: return "uiplus_region_name";
        case 0x7570DC05: return "uiplus_region_area_name";
        case 0x448A44A3: return "uiplus_broken_weapon_found";
        case 0xB2449C4C: return "uiplus_broken_weapon_increment";
        case 0x461ED70C: return "uiplus_broken_weapon_count";
        case 0xDE39DD1F: return "uiplus_broken_weapon_total";
        case 0x42ECF8E5: return "uiplus_broken_weapon_salvage_total";
        case 0xBD7431F0: return "uiplus_broken_weapon_ready_notification";
        case 0x740720AC: return "uiplus_broken_weapon_name";
        case 0x09F1327C: return "uiplus_broken_weapon_part_name";
        case 0xD8B8F1C0: return "uiplus_campsite_brokenweapon_perform_upgrade";
        case 0x9B635400: return "uiplus_campsite_salvage_tutorial_skip";
        case 0xD515CA02: return "uiplus_tutorial_more_info_start";
        case 0x4551B441: return "uiplus_tutorial_more_info_end";
        case 0x6C877F34: return "uiplus_tutorial_block_close";
        case 0x8B411805: return "uiplus_tutorial_enable_respawn_hints";
        case 0x83BC8D00: return "uiplus_tutorial_disable_respawn_hints";
        case 0xA15C0CB3: return "npc_high_health";
        case 0xBA3F4B8B: return "npc_medium_health";
        case 0x3AB27D0C: return "npc_low_health";
        case 0x80137C46: return "npc_full_health";
        case 0x7AA10A89: return "npc_deathless_health_enter";
        case 0xD37C18FD: return "npc_deathless_health_healed";
        case 0x7B145457: return "action_prompt_look_end";
        case 0x9C2D3702: return "action_prompt_look";
        case 0x3DE5A694: return "action_prompt_ledge_grab";
        case 0xC5917A06: return "action_prompt_pull_up";
        case 0x1942BA1C: return "action_prompt_advertise_pry";
        case 0xD2F2AC53: return "action_prompt_progressive_pry";
        case 0x52C60098: return "action_prompt_advertise_flamable";
        case 0xAE40F462: return "action_prompt_progressive_flammable";
        case 0xC0D8605D: return "action_prompt_advertise_health_resource";
        case 0xDC0C3FAE: return "action_prompt_progressive_health";
        case 0x0723F602: return "action_prompt_ascender";
        case 0x887BA058: return "action_prompt_ascender_end";
        case 0x21CEED45: return "action_prompt_advertise_pickup";
        case 0x4A5BF5C3: return "combat_display_death_from_above_prompt";
        case 0x4A0DD161: return "combat_hide_death_from_above_prompt";
        case 0xF891D855: return "evStrapBreak";
        case 0x51EF26DF: return "evSeizeEscapeBegin";
        case 0xA829DD55: return "evVisionSoundFadeIn";
        case 0xAFC7D92F: return "evVisionEffectsFadeIn";
        case 0xC5E580AD: return "cinecrow_die";
        case 0xC5DDF9B0: return "cinecrow_fly";
        case 0xBD381F1C: return "cinecrow_setdir";
        case 0xFBDE31F2: return "cinecrow_setdirb";
        case 0xFCAB2D8C: return "cinecrow_setposb";
        case 0xBD39814E: return "cinecrow_setpos";
        case 0xDDBAB82D: return "cine_fade_in_from_black";
        case 0xA3821463: return "cine_fade_to_black";
        case 0x9BC0FC1F: return "evVisionEffectsFadeOut";
        case 0x0CAE9DAA: return "evVisionEnterInstinctMode";
        case 0x9BB39191: return "evVisionExitInstinctMode";
        case 0xC6CFF7E9: return "evVisionEnterAdrenalineMode";
        case 0x0A065A6F: return "evVisionExitAdrenalineMode";
        case 0xF789DDDB: return "evVisionInstinctPing";
        case 0xE5272CD5: return "wolf_strike_stun_reset";
        case 0xF0454762: return "adrenalinePointsEarned";
        case 0x77BA93BF: return "camp_select_skills";
        case 0x8C622CE6: return "camp_select_travel";
        case 0x4B22FCA4: return "camp_select_crafting";
        case 0x2E2F916E: return "AttachToWallCrawl";
        case 0x300231B7: return "DetachFromWallCrawl";
        case 0x9D963BA5: return "seize_player_failed";
        case 0xDCCBD235: return "evFinisherInitiated_Adrenaline";
        case 0x9D30D78E: return "display_finisher_icon_start";
        case 0x8B12566E: return "display_finisher_icon_stop";
        case 0x51CC7311: return "display_finisher_icon_npc_ready";
        case 0x9D43A8F9: return "display_finisher_icon_ready";
        case 0xBACE2753: return "adrenalineEnemyShaderEnd";
        case 0x4207F3B8: return "adrenalineEnemyShaderStart";
        case 0x528EB49E: return "ArrowDamageToEnemy";
        case 0x2A21F839: return "enemyKilled_ByPlayer";
        case 0xF722ECCA: return "enemyKilled";
        case 0x9F5FE5CF: return "DamageToEnemyAnyType";
        case 0x94FA1B1F: return "ExplosiveDamageToEnemy";
        case 0x5582B1CA: return "ChargedArrowDamageToEnemy";
        case 0xB71A80F8: return "BulletDamageToEnemy";
        case 0x3013AEC8: return "PelletDamageToEnemy";
        case 0xE99D6FA4: return "player_instance_added";
        case 0xB05B653F: return "player_instance_removed";
        case 0x59AA503D: return "PlayerLookAt_State_LookAtScriptedInstance";
        case 0x9B48FA6D: return "PlayerLookAt_Aim_LookAtScriptedInstanceChanged";
        case 0x92F7FD35: return "adrenalineStartRequested";
        case 0xDA90A362: return "VocalStart";
        case 0x0CA299FD: return "DDA_loopBack";
        case 0xAC75E46B: return "fx_rain_splash_on";
        case 0x5207B3E3: return "fx_rain_splash_off";
        case 0x25177B90: return "evMarkupProjectileAttached";
        case 0xF95A40B2: return "evRopeProjectile_NotAttached";
        case 0x5A8261FC: return "evRopeProjectileAttached";
        case 0x18741D83: return "evRopeProjectileAttachedOnAttachable";
        case 0xD3AAFD0F: return "evRopeProjectileAttachedOnSwingable";
        case 0x259B1D28: return "evRopeProjectileIdentified";
        case 0x353008DC: return "evDualExecute_Execution";
        case 0x2E3DA743: return "evDualExecute_Initiated";
        case 0xFE0FE5F7: return "evDualExecute_Escape";
        case 0x43E72C18: return "evDualExecute_Timeout";
        case 0x68228B1D: return "evDualExecute_Death";
        case 0x6731EC46: return "projectileForcedTimeout";
        case 0xC2A93B0F: return "evNotifyPushPull";
        case 0x76D31AEB: return "fx_rain_off";
        case 0xA1ECB85B: return "fx_rain_on";
        case 0x8B77EBB3: return "fx_rain_geo_on";
        case 0x09075569: return "fx_rain_geo_off";
        case 0x2D847F22: return "WallOfDoom_Pause";
        case 0x2DC98564: return "WallOfDoom_UnPause";
        case 0x43107C5E: return "AnticipationReactionFinish";
        case 0x0EF49FCD: return "finish";
        case 0xA837463E: return "cancel";
        case 0xEB7CB8FB: return "PhysicsJointEvent";
        case 0x0B33D7BD: return "enemy_death_explosive";
        case 0x81FC2C09: return "enemy_death_falling";
        case 0x6D89F430: return "previous";
        case 0x347A14D6: return "next";
        case 0x27DE5FC5: return "fx_candles_off";
        case 0x96D23B63: return "fx_candles_on";
        case 0x347FF6C8: return "show";
        case 0x71809944: return "HideClimbingShoes";
        case 0xAE52F6DB: return "shown";
        case 0x346FEAA1: return "hide";
        case 0xD7918737: return "hidden";
        case 0xBB933426: return "ally_hit_by_melee_start";
        case 0x54AB412A: return "Cliffs_House_Falling";
        case 0x7472FD6F: return "Death_Underwater";
        case 0xA40ADB0A: return "Cliffs_Deathcam_1";
        case 0xA40ADB09: return "Cliffs_Deathcam_2";
        case 0xA40ADB08: return "Cliffs_Deathcam_3";
        case 0xA40ADB07: return "Cliffs_Deathcam_4";
        case 0xA40ADB06: return "Cliffs_Deathcam_5";
        case 0xA40ADB05: return "Cliffs_Deathcam_6";
        case 0xA40ADB04: return "Cliffs_Deathcam_7";
        case 0x7A7116D0: return "Cliffs_House_Falling_2";
        case 0x7A7116CF: return "Cliffs_House_Falling_3";
        case 0x7A7116D2: return "Cliffs_House_Falling_4";
        case 0x7A7116D1: return "Cliffs_House_Falling_5";
        case 0x7A7116E4: return "Cliffs_House_Falling_6";
        case 0x7A7116E3: return "Cliffs_House_Falling_7";
        case 0xA727EAE8: return "torch_equip_event";
        case 0xF19AD80C: return "inventory_weapon_selection_nochange";
        case 0xD57A1DDC: return "inventory_weapon_selection_changed";
        case 0x8EE14EE3: return "inventory_ammo_count_changed";
        case 0xADCC0ADF: return "broadcast_player_trait_purchased";
        case 0x6AEC35B3: return "broadcast_camp_salvage_tutorial_passed";
        case 0x35EC7A16: return "broadcast_first_run";
        case 0x7AADF7AD: return "fx_rain_master_enable";
        case 0xED6DFB79: return "fx_rain_master_disable";
        case 0x60647741: return "fx_checkpoint";
        case 0x428BB8B0: return "fx_rain_fsfx_off";
        case 0xA4447BEC: return "fx_rain_fsfx_on";
        case 0x3E6DEF3E: return "combat_reload_complete";
        case 0xE47C826F: return "gainedInvItem";
        case 0xB01FA57C: return "torchCinematicExit";
        case 0xD90AE958: return "torchReadyExit";
        case 0x99203397: return "torchWaveAwaySnuff";
        case 0x594CF04B: return "torchWaveAway";
        case 0xB8C2F865: return "torchAway";
        case 0xC3E089C5: return "torchGained";
        case 0xC01D94BF: return "torchReadySparkIgnite";
        case 0xEFD5A0AD: return "torchReadySpark";
        case 0xEBB60405: return "torchReady";
        case 0x35041C60: return "Mission_BackpackReturned_Complete";
        case 0x25699B0A: return "Mission_BackpackPickedUp_Complete";
        case 0xE2F9DC27: return "Npc_StunnedKnees_start";
        case 0x722A9CA2: return "pickaxe_swing_start";
        case 0x50BD5021: return "npc_start_parry";
        case 0xC775537C: return "detach_object";
        case 0xA585D74F: return "Objective_Primary_Start_Window_Closed";
        case 0x114E23B1: return "Secondary_Objective_Start_Window_Close";
        case 0x01B42374: return "Secondary_Objective_End_Window_Close";
        case 0x61734970: return "Objective_Getting_Removed_UsedByCodeOnly";
        case 0xF6EE8F2A: return "evNotifyShieldRemove";
        case 0x8764CAFC: return "evPlayerEnteredNewUnit";
        case 0xC9690035: return "force_combat_dodge";
        case 0x43A98F45: return "broadcast_updateGearGatedSurvivalInstinct";
        case 0x20437808: return "SMGFinisherFinished";
        case 0xDE3466C0: return "ArcherFinisherFinished";
        case 0x49D8F7D0: return "DFAFinisherFinished";
        case 0x18C9CA49: return "ShotgunFinisherFinished";
        case 0x34991090: return "BowFinisherFinished";
        case 0xF39EF033: return "ClimbingPadShock";
        case 0x8B0A1B13: return "fast_travel_to_hub";
        case 0x31879AE3: return "fx_fog_on";
        case 0x4F723F25: return "fx_fog_off";
        case 0x441B5A61: return "health_transition_time";
        case 0x159BF7C2: return "fx_fog";
        case 0x040C480F: return "laraCamHelper_deathseize1";
        case 0xD30E84C1: return "laraCamHelper_deathseize_sword";
        case 0xD2C6850E: return "laraCamHelper_deathseize_heavy";
        case 0x040C4810: return "laraCamHelper_deathseize2";
        case 0xFA7F3B75: return "laraCamHelper_kneelingFinisher";
        case 0xF6ECA2A1: return "laraCamHelper_kneelingFinisher2";
        case 0xDBD9F3BF: return "KneelingFinisherFinished";
        case 0xD76A7A13: return "StalkerKneeFinisherFinished";
        case 0x3DDF8185: return "StalkerStage2ArmorBreak";
        case 0x63C09372: return "StalkerStage1ArmorBreak";
        case 0xC7BD74B6: return "StalkerStage2Finished";
        case 0xAD19D30F: return "StalkerStage3Finished";
        case 0xA70B2FA6: return "StalkerStage1Finished";
        case 0xB4498950: return "StalkerNoDeathFinished";
        case 0x69738453: return "NetSessionSearchLANSuccess";
        case 0xB7F1AEDC: return "NetSessionSearchLANFailed";
        case 0xE2AFADF5: return "JoinNetSessionFailed";
        case 0xC653DD93: return "CreateNetSessionFailed";
        case 0xB9E9AC62: return "laraCamHelper_chokeholdSeizeDone";
        case 0x72E60C62: return "laraCamHelper_chokeholdSeize";
        case 0x7A324CCA: return "FinisherFinished";
        case 0x2871689A: return "laraCamHelper_MeleeFinisher_Done";
        case 0x10A0958B: return "laraCamHelper_MeleeFinisher";
        case 0x6990E26A: return "laraCamHelper_precombat_cine_version";
        case 0x819CFC50: return "precombat_end";
        case 0x20684F6D: return "precombat_enemies_alerted";
        case 0xF6CDDF45: return "precombat_start";
        case 0x14A2C945: return "DropDownStarted";
        case 0x0B249AB5: return "DropDownFinished";
        case 0xC7F545EA: return "laraCamHelper_ScavBearhugCliff_Done";
        case 0x07486144: return "laraCamHelper_ScavBearhugCliff";
        case 0x645216C8: return "EW_Idle";
        case 0x4113C133: return "EW_Hazard1";
        case 0x4113C136: return "EW_Hazard2";
        case 0x4113C135: return "EW_Hazard3";
        case 0x1DB897FE: return "EW_Idle_Hazard1";
        case 0x1DB897FF: return "EW_Idle_Hazard2";
        case 0x8B3C84AC: return "EW_Move_Forward";
        case 0x7E7BADAB: return "EW_Move_Backward";
        case 0xF8108F31: return "EW_Intro";
        case 0xEB7EC80E: return "EW_Outro";
        case 0xE502E04D: return "PlayerID";
        case 0xA96CC167: return "EW_TransitionBackwards";
        case 0x8A085592: return "EW_TransitionForwards";
        case 0x8FDFFDD5: return "EW_Passage_End";
        case 0x2D37B248: return "EW_Passage_Start";
        case 0x66C05A00: return "EW_Junction_Start";
        case 0x92E5383C: return "EW_Junction_End";
        case 0x5D58C6B5: return "EW_Junction1_Forward";
        case 0xE046475D: return "EW_Junction1_Backward";
        case 0x2FB83DCE: return "EW_Junction2_Forward";
        case 0xC1237968: return "EW_Junction2_Backward";
        case 0xFEFD2BA2: return "fx_snow_enable_mp";
        case 0x8F786609: return "fx_snow_enable";
        case 0x4FAC2473: return "EW_Round";
        case 0xEB5D9F29: return "EW_Pause";
        case 0x64CE50E2: return "EW_Resume";
        case 0x4DD51DD7: return "EW_SubtractMovement";
        case 0x52DD5FA8: return "StickL_input_set_enabled";
        case 0x3074D983: return "StickR_input_set_enabled";
        case 0x0CCF721D: return "fx_dust_enable_mp";
        case 0xC19448C4: return "fx_rain_enable_mp";
        case 0x9CC3DE7F: return "fx_rain_enable";
        case 0xB6D4FA44: return "Camera_FarDollyBowAim_Off";
        case 0x831329F6: return "Camera_FarDollyBowAim_On";
        case 0xC207D567: return "MeleeComboMove2";
        case 0xC207D566: return "MeleeComboMove1";
        case 0xC137953C: return "SurvivalInstinctComponentDeleted";
        case 0x3FA1AC68: return "Jonah_Instinct_On";
        case 0x6CB38BA9: return "Jonah_Instinct_Off";
        case 0x05B0D35A: return "MeleeFinisherEnding";
        case 0xBA114A8D: return "MeleeFinisherStarting";
        case 0x176055AF: return "monastary_shotgunyank_pullstage1_start";
        case 0xCB7D10AB: return "skipped";
        case 0xD678066B: return "player_enable_lipsync";
        case 0x52E03CF5: return "player_disable_lipsync";
        case 0x908491D3: return "PlayerReviveTeammate";
        case 0xE85B2916: return "mp02_Camp_FightStart";
        case 0x88A94650: return "AIDirector_MAX_Intensity_Reached";
        case 0x3694D372: return "AIDirector_MIN_Intensity_Reached";
        case 0x996F7C72: return "AIDirector_Spawn_Started";
        case 0xCDEEDD9C: return "Camera_Rig_Starting";
        case 0xE9E487F1: return "Camera_Rig_Ending";
        case 0x73AB6F57: return "nav_helper_complete";
        case 0xF75C2A7F: return "character_select_camera";
        case 0x3C4AC3EA: return "killed_by_melee";
        case 0x3BEC9EDB: return "MP_my_target_meleed";
        case 0xCF976985: return "MP_my_target_fired";
        case 0x7DD0EF40: return "MP_Lobby_CharacterSelect_Select";
        case 0x523873D7: return "MP_Lobby_CharacterSelect_Unselect";
        case 0x808AD712: return "debug_object";
        case 0xBF192A49: return "start_swing";
        case 0x4485345B: return "start_pull";
        case 0x5454CCA1: return "ended_swing";
        case 0x61BD8097: return "end_swing";
        case 0x2EEAFD0A: return "started_swing";
        case 0xAB43BBD5: return "started_pull";
        case 0x02CEFC84: return "MP_seize_me";
        case 0xD453593B: return "MP_dont_seize_me";
        case 0x2FD065AF: return "MP_I_seized_you";
        case 0x67651AD2: return "SpikeyDeath";
        case 0x28244AB9: return "friendly_fire_flash_healthbar";
        case 0x6290CB70: return "friendly_fire_dont_shoot_teammate";
        case 0xBB920560: return "ResetStateTransitions";
        case 0xC5FAA709: return "Music_01";
        case 0xC5FAA70A: return "Music_02";
        case 0xC5FAA707: return "Music_03";
        case 0xC5FAA708: return "Music_04";
        case 0xC5FAA705: return "Music_05";
        case 0xC5FAA706: return "Music_06";
        case 0xC5FAA703: return "Music_07";
        case 0xC5FAA704: return "Music_08";
        case 0xC5FAA701: return "Music_09";
        case 0x93BDB8FE: return "Objective_Primary_Start";
        case 0xD58EEF08: return "Objective_Primary_Complete";
        case 0x026BCAB5: return "Objective_Secondary_Complete";
        case 0xB0BD52A6: return "Objective_Secondary_Start";
        case 0x454B6C55: return "Objective_Sub_Start";
        case 0x5772D2F3: return "Objective_Sub_Complete";
        case 0x2341C920: return "secondary_obj_shotgungatedestroyed";
        case 0x3CE3DC8E: return "SpikeImpaled";
        case 0x0F44844B: return "SnareCamStart";
        case 0xB422E77B: return "SnareCamEnd";
        case 0x841CB1D0: return "DE_obj_Stash1Found";
        case 0x81604CD1: return "DE_obj_Stash2Found";
        case 0x803119D4: return "DE_obj_Stash3Found";
        case 0xA9A46874: return "RemoteExplosiveTrigger";
        case 0xA386823C: return "ScavHub_InjuredState";
        case 0xE535A378: return "npc_dodge";
        case 0xF076FD05: return "ZiplineCamOff";
        case 0x23205CED: return "ZiplineCamOn";
        case 0x5B9255D1: return "evDisableInteractProfile";
        case 0x0C310D29: return "Ma_ObjectMove";
        case 0x0A5F7051: return "MA_RunOut_Enable_Rigidbody";
        case 0x596CF6E4: return "MA_RunOut_Destroy";
        case 0xF3F2CAAA: return "MA_RunOut_Shake";
        case 0xA9A7CCA6: return "StopCurrentCoversations";
        case 0xD262E7B8: return "GE_Grenade_Gate_Destroyed";
        case 0xF11CBA88: return "Melee_Dude_1_Spawned";
        case 0x7F969316: return "Melee_Dude_2_Spawned";
        case 0xAC9E3198: return "Melee_Dude_3_Spawned";
        case 0xBEBC2CCF: return "Melee_Dude_4_Spawned";
        case 0xB1D0E5C0: return "Melee_Dude_5_Spawned";
        case 0xC8859484: return "Melee_Dude_6_Spawned";
        case 0x5EACEF1D: return "Melee_Dude_7_Spawned";
        case 0xC89C30C9: return "Melee_Dude_8_Spawned";
        case 0x590DEDB8: return "Melee_Dude_9_Spawned";
        case 0xE2D4A4D2: return "Melee_Dude_10_Spawned";
        case 0xEBBCEFBF: return "Melee_Dude_11_Spawned";
        case 0x97BCBCF4: return "Melee_Dude_12_Spawned";
        case 0x3343E9F0: return "Melee_Dude_13_Spawned";
        case 0x9D7D9916: return "Melee_Dude_14_Spawned";
        case 0x1910FEB2: return "Melee_Dude_15_Spawned";
        case 0xFF966B82: return "Melee_Dude_1_Died";
        case 0x7802D1FC: return "Melee_Dude_2_Died";
        case 0x5EACA11F: return "Melee_Dude_3_Died";
        case 0x5CBD73AA: return "Melee_Dude_4_Died";
        case 0x86DE1C81: return "Melee_Dude_5_Died";
        case 0x8509AB61: return "Melee_Dude_6_Died";
        case 0x85A0969F: return "Melee_Dude_7_Died";
        case 0x637EF81E: return "Melee_Dude_8_Died";
        case 0x0F863553: return "Melee_Dude_9_Died";
        case 0x92AE5950: return "Melee_Dude_10_Died";
        case 0x09A13D09: return "Melee_Dude_11_Died";
        case 0xDA19577E: return "Melee_Dude_12_Died";
        case 0xCBC603A7: return "Melee_Dude_13_Died";
        case 0xC9F5CAE8: return "Melee_Dude_14_Died";
        case 0xCF250F54: return "Melee_Dude_15_Died";
        case 0xF0CCC96A: return "Archer_Dude_1_Spawned";
        case 0xA8B61776: return "Archer_Dude_2_Spawned";
        case 0xCE6914A0: return "Archer_Dude_3_Spawned";
        case 0x26091D82: return "Archer_Dude_4_Spawned";
        case 0x00C20E8C: return "Archer_Dude_5_Spawned";
        case 0x732440D1: return "Archer_Dude_6_Spawned";
        case 0x46328E3A: return "Archer_Dude_7_Spawned";
        case 0x3A1FD59A: return "Archer_Dude_8_Spawned";
        case 0x179F4345: return "Archer_Dude_9_Spawned";
        case 0x2D790251: return "Archer_Dude_10_Spawned";
        case 0x7C097F99: return "Archer_Dude_11_Spawned";
        case 0x9C316534: return "Archer_Dude_12_Spawned";
        case 0xFE126E41: return "Archer_Dude_13_Spawned";
        case 0xD9318FD7: return "Archer_Dude_14_Spawned";
        case 0x0A035AE7: return "Archer_Dude_15_Spawned";
        case 0x348E628D: return "Archer_Dude_1_Died";
        case 0x1E980AA9: return "Archer_Dude_2_Died";
        case 0x070898AD: return "Archer_Dude_3_Died";
        case 0x0256FB34: return "Archer_Dude_4_Died";
        case 0x2BDD0F4B: return "Archer_Dude_5_Died";
        case 0x359E0CEB: return "Archer_Dude_6_Died";
        case 0x3411BDAF: return "Archer_Dude_7_Died";
        case 0x314A7EB8: return "Archer_Dude_8_Died";
        case 0x2461BE17: return "Archer_Dude_9_Died";
        case 0x44D710CF: return "Archer_Dude_10_Died";
        case 0x4F5B5563: return "Archer_Dude_11_Died";
        case 0x4A7BC47A: return "Archer_Dude_12_Died";
        case 0x425516B4: return "Archer_Dude_13_Died";
        case 0x41F56497: return "Archer_Dude_14_Died";
        case 0x4BE57173: return "Archer_Dude_15_Died";
        case 0xF03FB6DC: return "ForceGearVisibilityCheck";
        case 0x8DDA9F19: return "ForceQuiverToRender";
        case 0x72448503: return "GetSpawnIndex";
        case 0x991031DE: return "ReturnSpawnIndex";
        case 0xBB8F3F90: return "Play_Level_Sound_Effect";
        case 0x0A271251: return "Pause_NPCs";
        case 0x04516B2C: return "Unpause_NPCs";
        case 0x92FC6FF8: return "NPCs_Run_Away";
        case 0x73A7A308: return "MA_runout_MoveStop";
        case 0xF195C636: return "Ma_RunOut_MoveCurve";
        case 0x20543C71: return "transitionTime";
        case 0xC5FAA632: return "Music_10";
        case 0xC5FAA631: return "Music_11";
        case 0x1CD346AE: return "Audio_01";
        case 0x1CD346AD: return "Audio_02";
        case 0x0B4F0A21: return "Music_Combat_Loop_01_End";
        case 0x6A974214: return "Music_Combat_Idle_Loop_01_End";
        case 0xC6879471: return "Music_Combat_Idle_Loop_01_Begin";
        case 0x43ECDB6F: return "Music_Combat_Loop_01_Begin";
        case 0x0BA2FC2F: return "Music_Combat_Loop_02_End";
        case 0x1005CB70: return "Music_Combat_Loop_02_Begin";
        case 0x7E185F65: return "Music_Combat_Epic_Loop_01_Begin";
        case 0xE8D09F4C: return "Music_Combat_Epic_Loop_01_End";
        case 0x7C46D7D6: return "Music_Suspense_Loop_02_Begin";
        case 0x45A20C7C: return "Music_Suspense_Loop_02_End";
        case 0x45F1B4E8: return "Music_Suspense_Loop_01_End";
        case 0x3339C5D3: return "Music_Suspense_Loop_01_Begin";
        case 0xBCDFAA98: return "Music_Stinger_Shock_03";
        case 0xBCDFAA97: return "Music_Stinger_Shock_02";
        case 0xBCDFAA96: return "Music_Stinger_Shock_01";
        case 0x4162FCFB: return "Music_Stinger_Awe_03";
        case 0x4162FCFC: return "Music_Stinger_Awe_02";
        case 0x4162FCFD: return "Music_Stinger_Awe_01";
        case 0x53F813C9: return "TT_BridgeMove1";
        case 0x53F813C8: return "TT_BridgeMove2";
        case 0x53F813C7: return "TT_BridgeMove3";
        case 0x53F813AE: return "TT_BridgeMove4";
        case 0x7DC31B58: return "TT_BridgeCurve1";
        case 0x7DC31B59: return "TT_BridgeCurve2";
        case 0x7DC31B5A: return "TT_BridgeCurve3";
        case 0x7DC31BBB: return "TT_BridgeCurve4";
        case 0xCEE7BFD5: return "evForceMarkupDetach";
        case 0xD751B1F2: return "EnterCrouchCover";
        case 0x5D433118: return "ExitCrouchCover";
        case 0xD56F9893: return "ExitWallConcealment";
        case 0x64B053BB: return "EnterWallConcealment";
        case 0x34C06AAC: return "EnterWallCover";
        case 0xD37765B7: return "ExitWallCover";
        case 0x1DC069E9: return "on_screen_damage_non_directional";
        case 0xF74B2122: return "on_screen_damage_direction";
        case 0x346D7E5D: return "West";
        case 0x34BBB393: return "East";
        case 0xAF92034B: return "North";
        case 0xAEB73732: return "South";
        case 0x783E2B44: return "end_left";
        case 0x60D51478: return "end_right";
        case 0x3E240E5F: return "StartingSnareCam";
        case 0x8D6FC475: return "EndingSnareCam";
        case 0xD86BF739: return "SystemicTrap";
        case 0xE2A68C09: return "TutorialTrap";
        case 0x16DDEFA2: return "end_of_level_mp";
        case 0xB0565A84: return "DBND_ForceEnemyInitiate";
        case 0xA2AFD689: return "DBND_GL_ForceEnemyInitiate";
        case 0x67D99DC7: return "evDBND_SeizeDefend";
        case 0x5F357084: return "SmallMarioHitReact";
        case 0x19797EC3: return "MediumHitReact";
        case 0xC026F918: return "HeavyHitReact";
        case 0x3EF024F7: return "End_DBND_Ammo_Type";
        case 0xFFE78716: return "NpcStatusEvent";
        case 0xDDBCB658: return "end_of_round_mp";
        case 0x1A17AD1D: return "threatenNpc";
        case 0xF6FC4F6F: return "evPlayerEnteredFlagDropzone";
        case 0x9229041F: return "evFlagObtainedByPlayer";
        case 0xAD956A81: return "evFlagObtainedByTeam";
        case 0x9CFB8571: return "evFlagPickupDisable";
        case 0x507E2746: return "evFlagAbandoned";
        case 0x00728633: return "evFlagTimeout";
        case 0x10ECDD05: return "evFlagCaptured";
        case 0xCF3A4F4A: return "evFlagCaptureRequest";
        case 0x13D9C5C9: return "evFlagFadeout";
        case 0x8F6E9301: return "evFlagReset";
        case 0xF2A6A9B6: return "evGameRulesChanged";
        case 0xDB2804F5: return "relic_hunt_team_a_base_marker";
        case 0x2DB93333: return "relic_hunt_team_b_base_marker";
        case 0xC1D79D4B: return "relic_hunt_ctf_object";
        case 0x1E59A783: return "DynamicMarkupComponentEvent";
        case 0x453BA456: return "Thrown_HitReact";
        case 0x3E35A442: return "Gas_Generator_Health_Full";
        case 0x78DF8607: return "Gas_Generator_Health_Dam_1";
        case 0x78DF8608: return "Gas_Generator_Health_Dam_2";
        case 0xBDE32E66: return "Ground_Push";
        case 0x02FF04D9: return "Melee_Armor_Hit_Restart";
        case 0xD47B926C: return "Melee_Push";
        case 0xCA2F0A6C: return "evPlayerWillToLiveRest";
        case 0xDE8A986D: return "evPlayerWillToLiveChallenge";
        case 0xFA262DC2: return "OnEverybodySynced";
        case 0x353E199F: return "OnRoundStart";
        case 0xAF02F074: return "OnRoundEnd";
        case 0x44994542: return "OnRoundLateJoin";
        case 0x4C0E653F: return "OnPlayerKilledPlayer";
        case 0x78F0813E: return "OnExitMultiplayerFinisherRequest";
        case 0x12AADD4C: return "evMultiplayerActivateQueen";
        case 0xA1A70A46: return "evMultiplayerDeactivateQueen";
        case 0x8106E425: return "evMultiplayerBroadcastEmpowerPriestess";
        case 0x86D7E3FC: return "evMultiplayerEmpowerPriestess";
        case 0x6074BDBE: return "evMultiplayerKickoffFinisherAnim";
        case 0xF19754F4: return "evMultiplayerFinisherStruggleInitialized";
        case 0x7D8E73E6: return "evMultiplayerFinisherKickoffStruggle";
        case 0xB6E43A2F: return "evMultiplayerFinisherEvaluateStruggle";
        case 0xBFE79C22: return "evMultiplayerFinisherConfirmed";
        case 0x609EAF01: return "evMultiplayerFinisherDenied";
        case 0xD6B84514: return "evMultiplayerFinisherStruggleLost";
        case 0xC782C05C: return "evMultiplayerFinisherStruggleWon";
        case 0xDE11011B: return "evMultiplayerFinisherStruggleKilled";
        case 0xB06827BD: return "evMultiplayerFinisherStruggleSurvived";
        case 0x1D00705F: return "evMultiplayerFinisherStruggleInterrupt";
        case 0x7F0FF58C: return "evMultiplayerFinisherCompleted";
        case 0x5061493D: return "evMultiplayerFinisherRequestDied";
        case 0xE1F6293D: return "evMultiplayerSuperdudeRequirementsMet";
        case 0x84B45F6E: return "evMultiplayerBecameSuperdude";
        case 0xFD29AAF2: return "evMultiplayerSuperdudeStalledRespawn";
        case 0x5A092EF1: return "evMultiplayerObjectUser";
        case 0x7D7D5372: return "evMultiplayerObjectTurnOn";
        case 0xAD536E49: return "evMultiplayerObjectInstantOn";
        case 0x3D5C03B5: return "evMultiplayerObjectTurnOff";
        case 0xEB1D305C: return "evMultiplayerObjectInstantOff";
        case 0x6CF5420A: return "evMultiplayerWarmZoneEnter";
        case 0x0634BF45: return "evMultiplayerWarmZoneExit";
        case 0xF7F6E6EA: return "evMultiplayerSubPenQuake";
        case 0xE6909C94: return "evMultiplayerWeaponDropped";
        case 0xE2F55E1A: return "evMultiplayerMeleeCombo";
        case 0x6ADA63D1: return "evMultiplayerPlayerDisconnected";
        case 0x82C53DC2: return "evMultiplayerStopwatchUpdate";
        case 0xC956C1C8: return "evMultiplayerForceStopCharge";
        case 0x4FE6DB03: return "evMultiplayerChasmStormIndoorsOn";
        case 0x4F921B2D: return "evMultiplayerChasmStormIndoorsOff";
        case 0x7ABC5676: return "RopeAscenderPull";
        case 0x4BE5A796: return "evActionMPPlayerRevived";
        case 0xE444FD77: return "evActionMPPlayerDead";
        case 0xD8964C09: return "AscenderTugEquip";
        case 0xF67DD912: return "AscenderTugComplete";
        case 0x348470C1: return "AscenderTraverseEnd";
        case 0xAA10B1C8: return "AscenderTraverseStart";
        case 0x3CE10696: return "AscenderTugFail";
        case 0x771F2C4F: return "combat_status_enter_threatened";
        case 0x63E4CB65: return "combat_status_exit_threatened";
        case 0x13C9F1FB: return "grim_use_zipline";
        case 0xE6D162B6: return "grim_shoved";
        case 0xA9067F8D: return "grim_tie_rope";
        case 0x762FF889: return "grim_call_over_enter";
        case 0x2BF12E2B: return "grim_call_over";
        case 0xAEB4455B: return "grim_cine_ambush";
        case 0x415E59B8: return "Ground_Cling_Fail";
        case 0x001CA291: return "NewEnemySighted";
        case 0x17053573: return "NpcSightedFire";
        case 0x00118070: return "Jump_Escape_Damage";
        case 0x78BF4B57: return "Jump_Escape_Fail";
        case 0x80B04A9D: return "evFinisherInitiated_NoKill";
        case 0x14A31F14: return "wet_percentage";
        case 0xA7F3AC39: return "wet_transition_time";
        case 0xD784566C: return "wet_full_body";
        case 0xB6D2F2BA: return "evInventoryChangeToNewItem";
        case 0x56305088: return "evInventoryChangeToSameItem";
        case 0xCB7DA169: return "evInventoryChangeItemInPortableAim";
        case 0x657AE190: return "Jump_Escape_Success";
        case 0x748D8221: return "evMPPlayerFinished";
        case 0xDC8FFF10: return "evMPPlayerSpectatorMode";
        case 0x134D3EB9: return "evMPPlayerRespawned";
        case 0x0073274A: return "evMPPlayerDead";
        case 0xF6E0EA8E: return "evMPPlayerScored";
        case 0x4084A66A: return "evMPPlayerCountdownOpened";
        case 0x093575E0: return "evMPPlayerCountdownClosed";
        case 0xA0335149: return "evMPHitDeathPlane";
        case 0x8F4499DC: return "animal_startRun_fromAnimGraph";
        case 0xCD189C54: return "animal_stoppedMoving_fromAnimGraph";
        case 0xFBB5AF5F: return "animal_startWark_fromAnimGraph";
        case 0x28F5CF3D: return "animal_butchered";
        case 0x69E0D652: return "animal_twitch";
        case 0xDB6E6D10: return "evActionReviveDefib";
        case 0x85CD654F: return "DeerKilled";
        case 0x0C7CEAB7: return "RegionHuntedOut";
        case 0xF7D08241: return "HuntManagerEnable";
        case 0xA3EABB78: return "HuntManagerDisable";
        case 0x52575CA5: return "fx_embers";
        case 0x8E295B89: return "StalkerVulnerabilityWindowOpen";
        case 0xCA0AB93D: return "StalkerVulnerabilityWindowClose";
        case 0x13D080A6: return "StalkerBerserkRecoveryEnd";
        case 0xC0BC528E: return "evPlayerNotIncapacitatedAnymore";
        case 0xFCE745FF: return "evReviveAnimationDone";
        case 0x6438D7D7: return "evEscapeFinished";
        case 0x3E2937C0: return "evActionReviveButtonPressed";
        case 0x6B79EAAC: return "skinningAnimal_started_deer";
        case 0xFE42816D: return "skinningAnimal_started_rat";
        case 0x7645FF8D: return "skinningAnimal_started_wolf";
        case 0x6B76B603: return "skinningAnimal_started_crow";
        case 0x4FA0F710: return "multiplayer_level_up";
        case 0x6FA9FD2B: return "evActionPostDefib";
        case 0xF0C55E38: return "Gondola_started";
        case 0xBFFA6684: return "finish_player_3";
        case 0xA01CDA53: return "finish_player_2B";
        case 0xBFFA6683: return "finish_player_2";
        case 0xBFFA6686: return "finish_player_1";
        case 0x334C4939: return "evPreferred_Finisher";
        case 0x3B20C50F: return "evActionPlayerFinishedExplosion";
        case 0xBDCE1C3B: return "evActionPlayerFinishedMelee";
        case 0x5A819FA1: return "evActionPlayerFinishedExecution";
        case 0xDB52865B: return "Tilt_ship_2";
        case 0xDB52865D: return "Tilt_ship_4";
        case 0xDB52866A: return "Tilt_ship_1";
        case 0xDB52865F: return "Tilt_ship_6";
        case 0xDA77EBA1: return "Tilt_ship_full";
        case 0xDB52865E: return "Tilt_ship_5";
        case 0xDB52865C: return "Tilt_ship_3";
        case 0x06B8F7D2: return "Debug_menu_trigger_message_01";
        case 0x06B8F7D1: return "Debug_menu_trigger_message_02";
        case 0x06B8F7CC: return "Debug_menu_trigger_message_03";
        case 0x06B8F7CB: return "Debug_menu_trigger_message_04";
        case 0xE3B8885F: return "Pylon_1_destroyed";
        case 0x6C8871ED: return "Pylon_3_destroyed";
        case 0xB4E52A9E: return "Pylon_2_destroyed";
        case 0x3B37B03D: return "Pylons_all_destroyed";
        case 0x2256EF5A: return "Turret_stage_1_start";
        case 0xD59B01C9: return "Turret_stage_2_start";
        case 0x43B0CA2E: return "Turret_stage_3_start";
        case 0x34B181C0: return "uiplus_no_ammo";
        case 0x9C6C0D90: return "noticeable_action_event";
        case 0xFE455E51: return "evPlayerClimbUpLedge";
        case 0xE2888EB3: return "uiplus_max_level";
        case 0x456D13BB: return "HitReactsOff";
        case 0xD3811CB5: return "HitReactsOn";
        case 0x1CFCE0D4: return "evActionDefibSparkOn";
        case 0xAC8A5B3E: return "evActionDefibSparkOff";
        case 0x99075CCF: return "mp_Disable_Seize";
        case 0xD9D912F5: return "StartLeftPuppets";
        case 0x29EBEC05: return "StartRightPuppets";
        case 0x26E9D1DE: return "StartZipPuppets";
        case 0xE898A0F6: return "StartMiddlePuppets";
        case 0x2EDAE830: return "StopLeftPuppets";
        case 0xA332E6B2: return "StopRightPuppets";
        case 0x211A6BD1: return "StopMiddlePuppets";
        case 0x8B1D6E13: return "StartTopPuppets";
        case 0xE38939EA: return "StopTopPuppets";
        case 0xCFB2800A: return "StopAllPuppets";
        case 0x32AE3573: return "StartAllPuppets";
        case 0xA07DB420: return "StopZipPuppets";
        case 0x7BFE1B46: return "StartPuppetAngryMob";
        case 0xF56E40F2: return "StopPuppetAngryMob";
        case 0x9825976C: return "uiplus_campsite_brokenweapon_newobject";
        case 0x74B3307A: return "uiplus_campsite_brokenweapon_oldname";
        case 0xD50CFAF1: return "uiplus_campsite_brokenweapon_newname";
        case 0x23644703: return "uiplus_campsite_brokenweapon_typename";
        case 0x4920104B: return "AudioCombatMusicStart";
        case 0xBB94C27B: return "AudioCombatMusicStop";
        case 0xE9D91A5C: return "AudioIdleMusicStart";
        case 0x5CF1E41F: return "BlockWolfEncounter";
        case 0x80012D5C: return "OpenWolfEncounter";
        case 0x8C746092: return "AudioIdleMusicStop";
        case 0xD9F5D59D: return "PreCine1";
        case 0x4F6FB9FD: return "PostCine1";
        case 0xD9F5D59C: return "PreCine2";
        case 0x4F6FBA00: return "PostCine2";
        case 0xD9F5D59B: return "PreCine3";
        case 0x4F6FB9FF: return "PostCine3";
        case 0xD9F5D5A2: return "PreCine4";
        case 0x4F6FBA02: return "PostCine4";
        case 0x78C1CF62: return "uiplus_campsite_brokenweapon_popup_close";
        case 0xF0E07F42: return "Conversation_SomeOneTalking";
        case 0x92450706: return "evMPModeCoop";
        case 0x9E9072F7: return "evActionHasBeenRevived";
        case 0xA1B2AE08: return "skinningAnimal_started_deer_albino";
        case 0xF3CA2A29: return "mp_stop_spawn_npc";
        case 0x3B4F8D45: return "EnableSqueezeCamera";
        case 0x6B53241D: return "DisableSqueezeCamera";
        case 0xD238B25D: return "EnableCombatCamera";
        case 0x71021A6B: return "DisableCombatCamera";
        case 0x4DE39078: return "PlayerCombatEnter";
        case 0x19E2B5F3: return "PlayerCombatExit";
        case 0xEEBB0F3E: return "evMenuStateChanged";
        case 0x88E41CB2: return "evEnterLookAtScriptedTarget";
        case 0x386C5752: return "evExitLookAtScriptedTarget";
        case 0x9296C468: return "evMPPlayerOpenOrCloseGate";
        case 0x2D16CBAB: return "evMPTeamRespawn";
        case 0x800AE9BA: return "evMPTeamRespawnDone";
        case 0xA16E8A0A: return "evMPCryForHelpScavengerScored";
        case 0xEB18D176: return "evMPCryForHelpScavengerParticipated";
        case 0x07B8D94C: return "OverarchingConvo";
        case 0x7B484008: return "Multiplayer_Adaptation_Event";
        case 0x1D28C3EB: return "evMPUnlikelyAllianceEndedByAllysDeath";
        case 0x0AC820A1: return "evMPUnlikelyAllianceEndedByYourDeath";
        case 0x93F4F914: return "evMPUnlikelyAllianceEndedByAllyReviving";
        case 0xC4A5B595: return "EnterExplorationCover";
        case 0x80F1994A: return "evMPEliminatedAPlayer";
        case 0xDD0413C9: return "evMPEliminatedAPlayerCancelled";
        case 0x0B49389C: return "evMP_barksubgraphhelper_fallback_success";
        case 0x8347270D: return "evMP_barksubgraphhelper_fallback_instanceID";
        case 0x85D592E0: return "evMP_barksubgraphhelper_fallback_soundIndex";
        case 0xC15A8B5B: return "EnterCloseCover";
        case 0x87733A71: return "combat_notify_npc_hit_friendly_npc";
        case 0x8AAC59A2: return "combat_notify_npc_hit_opposing_npc";
        case 0x82A3F9C8: return "combat_notify_npc_hit_neutral_npc";
        case 0x98AD1FED: return "Deer_ID3";
        case 0x98AD1FEE: return "Deer_ID2";
        case 0xB245ED8C: return "Deer_ID";
        case 0xEE8F84FD: return "fx_rain_ramp_down";
        case 0x0C9F0612: return "fx_rain_ramp_up";
        case 0xDE4F9D63: return "evMPPlayerKilled";
        case 0x68082CAA: return "evMPActionAmmoAlmostEmpty";
        case 0xF8E621D4: return "evMPActionInvaderKillSurvivor";
        case 0x17A89A37: return "evMPActionInvaderDownSurvivor";
        case 0x93CBBC29: return "evMPActionGotRevived3Times";
        case 0x74CC5CB7: return "evMPActionKill3PlayersWithoutDying";
        case 0x227E20AC: return "evMPActionMeleeKill";
        case 0x22D5BF6F: return "evActionMPThrowBeartrapLocal";
        case 0xB51631F0: return "evActionMPThrowLandmineLocal";
        case 0x9EFF2A6D: return "evMPActionLaunchGrenadeLocal";
        case 0xA3DE4B2C: return "evMPActionLaunchGrenade";
        case 0x0EFCA08D: return "evMPActionKillSelf";
        case 0x3CEE4D6C: return "evMPActionFoundAmmoFullRunOver";
        case 0x745C676D: return "evMPActionFoundAmmo";
        case 0xE409D159: return "evMPActionTurretGrabbing";
        case 0xDA3F58D0: return "evMPActionTurretShooting";
        case 0x8FBC44E1: return "evMPActionRevenge";
        case 0x4BC7CA84: return "evMPActionBatteryCollected";
        case 0x87489063: return "evMPActionTowerActivatedAlmost";
        case 0x55F93E8F: return "evMPActionTowerActivated";
        case 0x909E6EC6: return "evMPActionTowerDrainStarted";
        case 0x532FB29D: return "evMPActionTowerDrainStopped";
        case 0xF3C2D281: return "evMPActionTowerFillStarted";
        case 0xF5801156: return "evMPActionTowerFillStopped";
        case 0x4723FCDF: return "evMPActionHeadshot";
        case 0x05B84018: return "evMPActionOneShotHeadshot";
        case 0xCFA7F558: return "evMPActionHeadshotTeamate";
        case 0xFCDED45C: return "evMPTowerSurvivorCount";
        case 0xB031F634: return "evMPTowerInvaderCount";
        case 0x2B9E9A43: return "evMPTowerNeutral";
        case 0x3D005462: return "evMPTowerEmpty";
        case 0xD5BCC336: return "evMPTowerFFArrows";
        case 0x0E06B6C5: return "WolfSeizeDamage";
        case 0xA9680FF3: return "Wolf1";
        case 0xA9680FF4: return "Wolf2";
        case 0xA9680FF5: return "Wolf3";
        case 0xC58A9900: return "balancebeam_ledge_pullup";
        case 0xC19BBF49: return "mp_spawn_current_wave";
        case 0x3B05ED5E: return "mp_spawn_next_wave";
        case 0x59BE2626: return "Padshock_Trigger";
        case 0x4AFBA986: return "OnGiveCollectible";
        case 0xE06D15A5: return "Melee_Evade_Swing_2";
        case 0xE06D15A6: return "Melee_Evade_Swing_1";
        case 0x22F62DD3: return "EvFinisher_HelmetShatter";
        case 0x2327CFE2: return "CreepyWadeOn";
        case 0xED83ECB9: return "CreepyWadeOff";
        case 0xF89B655A: return "Throwable_Camera_Type";
        case 0x96B29FB7: return "lighter_anim_named_value_set";
        case 0xE4C56462: return "evMPActionLoadoutChanged";
        case 0x83338076: return "evMPActionHijacker";
        case 0x952591E5: return "evMPActionBatteryDropped";
        case 0x6E42CF4E: return "summon_oni";
        case 0xAB99D29D: return "dust_in_eyes";
        case 0x8AD09824: return "npc_berserk";
        case 0x1D11955A: return "mp_spawn_on_friend_enabled";
        case 0x92A77C83: return "mp_spawn_on_friend_disabled";
        case 0x73F3B049: return "evMPActionEnsnaringAssist";
        case 0x1F30DE59: return "evMPActionEntrapment";
        case 0x4F095684: return "evMPActionDoubleKill";
        case 0xB572AF79: return "evMPSpecialWeaponFound";
        case 0x920FC79C: return "evMPActionLiberator";
        case 0x1DD397AD: return "evMPActionLastManStanding";
        case 0x751F3A04: return "evMPOnLevelChange";
        case 0xF1698991: return "evMPOnMaxLevel";
        case 0x1A3BD2C8: return "evMPOnSalvageChange";
        case 0x1D054721: return "evMPAchievement_OnMyWayUP";
        case 0x584D045D: return "evMPAchievement_WasteNot";
        case 0x193AAB9B: return "evMPAchievement_TrueCommitment";
        case 0x43A9C814: return "npc_needs_backup";
        case 0xDB525A2F: return "BarkEvent";
        case 0x03C437E9: return "npc_ready_for_next_phase";
        case 0xA1055595: return "evMPAchievement_MonkeyAround";
        case 0x26F1EAFA: return "evMPActionKillAssist";
        case 0x2B142D47: return "evMPTrapProjectilePlaced";
        case 0xEC44F58E: return "uiplus_campsite_desc";
        case 0xEC442EC7: return "uiplus_campsite_name";
        case 0x13BE82C2: return "WolfSkinSpecialOff";
        case 0x9235C76F: return "radio_put_away";
        case 0x975A22BC: return "ResetAscenderLogic";
        case 0x450DC7B8: return "OnInteractDoneWithInventory";
        case 0x3CF7C635: return "evNpcRangedAttackWithPartialLOS";
        case 0x7B6D7DC4: return "stalker_seizes_lara";
        case 0xA34A83A6: return "evMPOnWindStormActivated";
        case 0x16914AAB: return "evMPOnWindStormDeactivated";
        case 0xF0F5D31F: return "evMPOnPlayerRangABell";
        case 0xA7E055C1: return "EnterCrouchMP";
        case 0xED8988AF: return "ExitCrouchMP";
        case 0x775F59D1: return "player_combat_status_assert_stop";
        case 0x3D08779A: return "player_combat_status_assert_start";
        case 0x38F3F6B4: return "Combat_Dramatic_SlowMo_Begin";
        case 0x21B54D62: return "Weapon_Attachment_GrenadeLauncher_Unequip";
        case 0x155D7342: return "Weapon_Attachment_GrenadeLauncher_Equip";
        case 0x1B6B1F35: return "Weapon_Fire_Loop";
        case 0xD10BF948: return "Weapon_Show_Clip";
        case 0x2685EE78: return "Weapon_Hide_Clip";
        case 0x82BE28E1: return "disable_fast_actions";
        case 0x99541064: return "enable_fast_actions";
        case 0xC57EB4C4: return "torchActionOverride";
        case 0x6FC3490C: return "radioActionOverride";
        case 0x9F2A4408: return "new_gear_acquired";
        case 0x69C7F12C: return "endPhase1";
        case 0x69C7F131: return "endPhase2";
        case 0xC4B18482: return "found_map_regionID";
        case 0xE83200EC: return "evOutfitManager";
        case 0x97C6C077: return "evMPActionUpdateCapturePoint";
        case 0x5BE2799B: return "ScaleformMovieClosed";
        case 0xFB944336: return "MPDebugShowAllInGameUI";
        case 0xCE6C9C10: return "MPDebugResetAllInGameUI";
        case 0x861F0EC6: return "evMPOnSmokeEnteredOwner";
        case 0xAD106FEB: return "evMPOnSmokeEntered";
        case 0x09A6912F: return "evMPOnSmokeExited";
        case 0x7B9222CB: return "evMPOnSmokeExitedOwner";
        case 0x570B0914: return "SpecialStrangleCamOff";
        case 0x8DB153AC: return "SpecialStrangleCamOn";
        case 0x8C2E105C: return "collectible_set_complete_stinger_played";
        case 0x21EB7727: return "collectible_picked_up";
        case 0xD7F178CC: return "NpcInFire";
        case 0x4AB5C822: return "evNpcEventDeathReceived";
        case 0x8356EB94: return "evNpcEventTakedownReceived";
        case 0xFD09B614: return "evNpcInFire";
        case 0x122C6913: return "uiplus_interrupt_idle_menu_drift";
        case 0xF83B3142: return "evMPOnFlareEntered";
        case 0xA1DA6061: return "evMPOnFlareExited";
        case 0x75A2867F: return "evMPOnFlareFinished";
        case 0x224B2C97: return "killedByEnemy";
        case 0xBE66715F: return "killedEnemy";
        case 0xB0A59E1C: return "killedAlly";
        case 0x668BD228: return "evMPFlareFired";
        case 0x22536A4B: return "evMPActionOneManShow";
        case 0x01C5D738: return "evVisionEffectsFadeOutImmediate";
        case 0xD5B44096: return "playerMeleeTargetChanged";
        case 0xA84593A4: return "opened_map";
        case 0xC0F6E17D: return "evMPActionCantTouchThis";
        case 0x4F75EFE5: return "evMPActionTopGun";
        case 0xEFD0AE6A: return "evMPStartSpawnInactivityCountDown";
        case 0x0C778059: return "evMPStopSpawnInactivityCountDown";
        case 0x49871FAB: return "block_deer_butcher";
        case 0xAD905BC2: return "unblock_deer_butcher";
        case 0x107474FF: return "evMPOnFlash";
        case 0x6341E33E: return "CinematicEndedNotifyStateControl";
        case 0x70469B0C: return "wolf_dodge_window_open";
        case 0x9F7D064D: return "wolf_dodge_window_close";
        case 0x0EB52FF5: return "Campsite_Journal_ID";
        case 0x24568A90: return "uiplus_tutorial_disable_broken_weapon_ui";
        case 0x4989F074: return "uiplus_tutorial_enable_broken_weapon_ui";
        case 0x8B9B5B69: return "campsite_is_quiet_reloading_all_weapons";
        case 0xDB743EE8: return "healDone";
        case 0x6F3993EE: return "healWrapFinished";
        case 0xDBA0C33D: return "healWrap";
        case 0x2F41BA54: return "healStart";
        case 0x68222228: return "throwable_use_start";
        case 0x883B3393: return "throwable_use_success";
        case 0x6553CBC6: return "weather_type_activated";
        case 0xFA27E2AA: return "weather_type_deactivated";
        case 0xB2E7CAA0: return "time_of_day_type_activated";
        case 0x16FC7120: return "time_of_day_type_deactivated";
        case 0x35F47B26: return "large_pickup_done";
        case 0x075FEAD6: return "TrapReady";
        case 0x96B17F48: return "TrapLaraReady";
        case 0x49F56F71: return "TrapBroken";
        case 0x2CAB7956: return "TrapSprungNPC";
        case 0xC9CA5941: return "TrapSprung";
        case 0x0FC9ABEF: return "evFluidContainerFill";
        case 0xB39B74E3: return "evFluidContainerEmpty";
        case 0xD8C45F5B: return "evFluidContainerFinishedFilling";
        case 0xEB878553: return "evFluidContainerFinishedEmptying";
        case 0x3196941D: return "PushPullEnd";
        case 0x324E1F0D: return "PushPullStart";
        case 0x473C5C88: return "trap_aim_start";
        case 0xDB699CEC: return "trap_aim_success";
        case 0x8F2752F4: return "trap_pry_fail_animDone";
        case 0xD4B3EC21: return "trap_pry_fail";
        case 0x604CE5F8: return "trap_pry_success";
        case 0x08BA639D: return "trap_pry_start";
        case 0xDFA4FFC0: return "trap_prepry_start";
        case 0x030E90CE: return "trap_pry_enter";
        case 0x5E52D08C: return "trap_release_npc";
        case 0x406520A7: return "trap_npc_entry_done";
        case 0xE2EDC696: return "trap_npc_exit_fail";
        case 0x30BCEA24: return "trap_npc_exit_begin";
        case 0xD12BCCD3: return "trap_npc_exit_finished";
        case 0xD173085E: return "evGasPour";
        case 0xCF7E778A: return "LC2_LaraID";
        case 0xB4395896: return "LC2_PlayerDamaged";
        case 0x47A2E12B: return "LC2_CompanionID";
        case 0xFC50D4B1: return "LC2_GetPlayerIDs";
        case 0x7A76A7B7: return "evFreeCraftingBegin";
        case 0x030E5AD8: return "evFreeCraftingCancel";
        case 0x8A61854B: return "evFreeCraftingUse";
        case 0xEF1570F2: return "evFreeCraftingComplete";
        case 0x842FD76F: return "evSmokeBombCanCrafted";
        case 0x21C24603: return "evTimeBombGasCanCrafted";
        case 0x79DF1E81: return "evSpikeTrapCrafted";
        case 0xCB7B76CE: return "evRadioTrapCrafted";
        case 0xDBA573F1: return "evMolotovCrafted";
        case 0x8F9D0FF3: return "OnEnterRed";
        case 0x989FDF9B: return "OnEnterBlue";
        case 0xA473B72C: return "OnQEVisionModeStart";
        case 0x452B4A5D: return "OnQEVisionModeStop";
        case 0x1C6E3988: return "globalWeatherCheck";
        case 0xB5C1B724: return "indoors";
        case 0x12BA2528: return "Beckon";
        case 0x537C7077: return "Camera_Grapple_Braced";
        case 0x623D9B3E: return "NPC_DoneWaiting";
        case 0x1ED8FADA: return "NPC_Waiting";
        case 0x0270DABA: return "NPC_PlayerEnteredDetectionRadius";
        case 0xE8304527: return "NPC_PlayerEnteredReactionRadius";
        case 0x6E7507A8: return "NPC_PlayerExitedDetectionRadius";
        case 0xA351D6B4: return "NPC_PlayerExitedReactionRadius";
        case 0xFD9389FC: return "NPC_Start_Side_Step";
        case 0x56CA28E6: return "NPC_Side_Step_Limit_Reached";
        case 0x7B742E74: return "NPC_Side_Step_Over_Limit";
        case 0xF3E03722: return "Concealment_Finisher_Target_Aquired";
        case 0xD94F5E38: return "Concealment_Finisher_Target_Lost";
        case 0xE3FECC52: return "NPC_StopFollow";
        case 0xF1B4B7F2: return "ev_dr_stealDevice";
        case 0x206BFC25: return "CheckToD";
        case 0xAE299E9E: return "characterWetnessCheck";
        case 0xB7280F41: return "evFinisherInitiatedPostDeathFromAboveKill";
        case 0xD9732296: return "Finisher_Silent_Kill_Axe";
        case 0x38419CEA: return "Finisher_Silent_Kill_Bottle";
        case 0x0C46A4A9: return "Finisher_Concealment_Kill_Knife_S1_Front";
        case 0x5C456B96: return "Finisher_Concealment_Kill_Bow_S1_Front";
        case 0xCE795B92: return "Finisher_Concealment_Kill_Knife_S1_Behind";
        case 0x0926E739: return "Finisher_Concealment_Kill_Bow_S1_Behind";
        case 0x6F9A6FFA: return "light_to_weapon";
        case 0x61FC02C5: return "light_to_hidden";
        case 0x90C7882C: return "light_to_r_hand";
        case 0x4BE31013: return "evSwimSubmerge";
        case 0x12FE046F: return "fx_rain_density";
        case 0x50041FD8: return "fx_rain_time";
        case 0x8B7DE61D: return "ocd2_mc_action_begin";
        case 0xD18E1B62: return "ocd2_mc_action_end";
        case 0xE8048526: return "ocd2_mc_grabbed";
        case 0x3997FF66: return "ocd2_mc_released";
        case 0x26C66FD6: return "uiplus_pickup_ammoType";
        case 0x4D66ED51: return "craftable_trap_sprung";
        case 0x543756A1: return "evObjectMolotovImpact";
        case 0x3BBCA0C0: return "evNpcLostTarget";
        case 0xAC22E5BB: return "evNpcLostTarget_Player";
        case 0x21520C37: return "evNpcInvestigationFailed";
        case 0x8B264136: return "evNpcSearchingForEnemyTarget";
        case 0x450D8450: return "evNpcStartingHighAlertPatrol";
        case 0x53983C1E: return "evNpcTakingDefensivePosition";
        case 0x41E3A8BC: return "evNpcRecognitionTimeStarting";
        case 0xF3B72A29: return "evInvestigationOfThisInstanceStarted";
        case 0x089CDD34: return "evInvestigationOfThisInstanceEnded";
        case 0xE9C013E8: return "fx_cover_conceal_type";
        case 0x51802F25: return "fx_cover_conceal";
        case 0xFDFC33D7: return "evNpcSawConcealedTarget";
        case 0x38A6AB45: return "evNpcSearchingConcealedArea";
        case 0x952486E6: return "evNpcChangingEventForInvestigation";
        case 0x733B5BE9: return "evNpcSightedFire";
        case 0xEC33F966: return "evNpcDeniedAttackRequestByPlayer";
        case 0xE9EB8654: return "evStaffEquip";
        case 0xBEE53CDA: return "evStaffUnequip";
        case 0x2856F52B: return "evActionMoveToMeleeAttackOffscreen";
        case 0xFB0F568A: return "evActionAttackMissed";
        case 0xE771C8A1: return "evNpcArmorDestroyed";
        case 0x922D2DE7: return "evNpcTargetInaccessible";
        case 0x56771A71: return "evNpcMovingToUsableObject";
        case 0x1B582D5B: return "evNpcOutOfAmmo";
        case 0xEE203D6D: return "evNpcMovingToAttackableObject";
        case 0xA34AB903: return "evNpcStartUsingGuardPoint";
        case 0x33A05E7A: return "evNpcEnemyClimbingOnZipline";
        case 0x5590BD97: return "evNpcEnemyDescendingOnZipline";
        case 0x58F1634F: return "evSquadAbortAttackCasualties";
        case 0x73D04EB6: return "evSquadAbortAttackTimeout";
        case 0x11F4CB76: return "evSquadAcquireNewTarget";
        case 0x0C4E041C: return "evSquadMoveToAttackFormation";
        case 0xA095CF70: return "evSquadMemberGivenAttackPermission";
        case 0xC855E9BC: return "evSquadMemberDied";
        case 0x688CF93E: return "evSquadMoveToSquadTraversalPoint";
        case 0x6E245FE3: return "evSquadStartUsingGatherPoint";
        case 0x88C8456F: return "evSquadSpawnNewMember";
        case 0x66C09E8D: return "evSquadFinishedSpawning";
        case 0x5A6752E9: return "animAlarm_npc_search_callgroup";
        case 0xEAC2A7E0: return "animAlarm_npc_search_callforsearch";
        case 0x6F3D5599: return "animAlarm_npc_search_calloffsearch";
        case 0x7A2AFDE5: return "animAlarm_npc_beginning_strafing_fire";
        case 0x07F587E8: return "animAlarm_npc_concealment_dispell";
        case 0xF22556C8: return "animAlarm_npc_bark_callforhelp";
        case 0x928323F8: return "ocd2_mc_anger_enter";
        case 0x598FD0FE: return "ocd2_mc_anger_exit";
        case 0xC314B0EC: return "ocd2_mc_fear_enter";
        case 0xFBBA7AF8: return "ocd2_mc_event";
        case 0xB8B2DDFF: return "ocd2_mc_fear_exit";
        case 0x5482C16E: return "enable_wind_hair_sfx";
        case 0x0D8945C4: return "stop_wind_hair_sfx";
        case 0x891F25DE: return "disable_wind_hair_sfx";
        case 0x1782BEC8: return "evMarkupDetected";
        case 0x7F81ABE6: return "evFailedScrambleAttempt";
        case 0x8FAC3349: return "evPlayerCountChanged";
        case 0x98D2D741: return "on_out_reverb_ext_sub";
        case 0x95746882: return "LC2_TreasureRoom_LootingComplete";
        case 0x39229875: return "LC2_TreasureRoom_PlayerLooted";
        case 0xB78F1F81: return "grappleaxe_wallclimb_attach";
        case 0x656D8CF7: return "LC2_P1_DamageDone";
        case 0x2C13B761: return "LC2_P2_DamageDone";
        case 0xC76CC8C6: return "LC2_P3_DamageDone";
        case 0x44DBD13A: return "LC2_P4_DamageDone";
        case 0x52779A51: return "LC2_PlayerReviveStat";
        case 0xE35AA714: return "LC2_PlayerDeathStat";
        case 0x18541EDB: return "dialogue_overlay_turn_off";
        case 0xAD3AB25F: return "LC2_duatEffectOn";
        case 0xF08F85F8: return "LC2_duatEffectOff";
        case 0x8DCF1CC0: return "line_convo_done";
        case 0xA693F642: return "force_pivot_left";
        case 0x264E05E5: return "force_pivot_right";
        case 0x8DCA7D0B: return "line_convo_hail";
        case 0x592FA447: return "line_convo_started";
        case 0x103BCF3B: return "ActorAGestureStart";
        case 0x83C48EA7: return "ActorAGestureEnd";
        case 0x3036F39F: return "ActorBGestureStart";
        case 0xC44E25C7: return "ActorBGestureEnd";
        case 0xF1EA45CF: return "Switch_to_Friendly";
        case 0x6E250584: return "Switch_to_Enemy";
        case 0x014D81B9: return "BearValleyDFA";
        case 0x7836555D: return "IceTombDFA";
        case 0x3722C028: return "GradualDestructionComplete";
        case 0x1A1A65EF: return "fx_screen_cold_water";
        case 0x13612F3F: return "fx_screen_cold_01";
        case 0x96E687A1: return "cam_lookat_mushrooms_quest01_start";
        case 0x00F9AB67: return "cam_lookat_mushrooms_quest01_end";
        case 0xD26DBA60: return "crouch_pullup_from_ledge";
        case 0xE0CA018A: return "AudioManuallyTriggerTinnitusFromPosition";
        case 0xD1F2CC63: return "ledge_pullup_from_hurdle";
        case 0xEE6E3F07: return "NPC_DropPortable";
        case 0xFE41463D: return "KOBK_Shotgun_Fire";
        case 0x91EC0B03: return "KOBK_LooterFlee_hit1";
        case 0x91EC0B04: return "KOBK_LooterFlee_hit2";
        case 0x91EC0AF1: return "KOBK_LooterFlee_hit3";
        case 0x4A46624E: return "LC2_TeleportingThroughGateway";
        case 0x2DCD94B5: return "OnKnifeEquip";
        case 0xFDB46D06: return "evCorpseBoobyTrapCrafted";
        case 0xEF77A662: return "animAlarm_level_audio";
        case 0xDFB464CF: return "lc2_ui_level_brief_accept";
        case 0xFFDBDAB5: return "lc2_ui_level_brief_cancel";
        case 0xA00FBD1B: return "lc2_points_scored";
        case 0x62FF4AD5: return "evNpcTriangulatingSoon";
        case 0xC186AA54: return "evNpcTriangulating";
        case 0xEE86B1BA: return "evNpcSearchEnded";
        case 0xA204647A: return "evNpcSearchAnotherLocation";
        case 0x085C1962: return "lc2_player_killed_scarab";
        case 0x1314091F: return "lc2_player_killed_jackal";
        case 0x487BC40F: return "lc2_player_killed_skeleton";
        case 0x06FEC6B2: return "lc2_player_killed_mummy";
        case 0x6AF7E966: return "lc2_player_killed_croc_biped";
        case 0x81517337: return "lc2_player_killed_croc_swim";
        case 0x5E935084: return "lc2_player_killed_scarab_bomb";
        case 0x4759A2FA: return "lc2_player_killed_jackal_bomb";
        case 0x601241AE: return "lc2_player_killed_skeleton_bomb";
        case 0x12E6E908: return "lc2_player_killed_mummy_bomb";
        case 0x1CB34326: return "lc2_player_killed_croc_biped_bomb";
        case 0xF8F066AA: return "lc2_player_killed_croc_swim_bomb";
        case 0xFE4CC59D: return "ledge_pullup_from_jump";
        case 0x74EBD65C: return "MainFocusUnitChanged";
        case 0x29CBF110: return "evNpcLostEnemyDetected";
        case 0x1780E41A: return "rainFire";
        case 0xDED1CF3F: return "waterVolumeDetection_ExitedWater";
        case 0x10ACB079: return "waterVolumeDetection_DistanceFromWaterSurfaceChanged";
        case 0xEA666CC0: return "waterVolumeDetection_WaterSurfaceHeightChanged";
        case 0x8DED0757: return "waterVolumeDetection_EnteredWater";
        case 0x8B2BA97A: return "exited_Water";
        case 0x6B985D55: return "combat_status_pre_enter_threatened";
        case 0x8513DA1E: return "combat_status__pre_exit_threatened";
        case 0x683F747C: return "combat_status_pre_enter_combat";
        case 0xA8327F1A: return "combat_status_pre_exit_combat";
        case 0xB9DE8B5F: return "TombType_Khepri";
        case 0xC3281FE4: return "TombType_Sobek";
        case 0x456CDCB7: return "TombType_Setesh";
        case 0xB848CD08: return "TombType_Overworld";
        case 0x414C29C6: return "evNpcDistraction_ObjPlacementID";
        case 0x23D5FE4D: return "evNpcDistractedWhileSearching";
        case 0xA452F335: return "evNpcUrgent_Run_Started";
        case 0x8E71EA63: return "evNpcUrgent_Run_Ended";
        case 0x9C600E87: return "lc2_MainMenu2Game";
        case 0x73A88D4A: return "evGlowstickOn";
        case 0xA303D49D: return "evGlowstickEmergencyOff";
        case 0xF2B6DF7F: return "evGlowstickOff";
        case 0x99480DF9: return "evGlowstickMaxItensity";
        case 0xF2B6E376: return "evGlowstickNew";
        case 0xACC14F45: return "evGlimpsedByNPC";
        case 0x30E39794: return "evFlareDrop";
        case 0x3584574B: return "evGlowstickDrop";
        case 0xBA9E4E17: return "evGlowstickRange";
        case 0x47702C15: return "evGlowstickSwapLights";
        case 0x48BDF29E: return "evGlowstickChangeColor";
        case 0xDBA356CE: return "evGlowstickCustomIntensity";
        case 0xE7CAA0BB: return "evGlowstickIntensity";
        case 0xF42D900C: return "evGlowstickSpawned";
        case 0xCC5A32C2: return "evGlowstickEquip";
        case 0x1906E701: return "evGlowstickUnequipped";
        case 0xF78855B0: return "evGlowstickDestroyOrUnequip";
        case 0x23D341FD: return "evRebreatherEquip";
        case 0x97A8197E: return "evRebreatherUnequip";
        case 0x6C6C245A: return "evRebreatherToMouth";
        case 0xA0FBE2E5: return "evRebreatherToHand";
        case 0x231F4A0D: return "evRebreatherActivate";
        case 0x552114E2: return "evRebreatherDeactivate";
        case 0x5DF6195D: return "evRebreatherPassageEnter";
        case 0x160EC98A: return "evRebreatherPassageExit";
        case 0x1A75314C: return "evFlareEquip";
        case 0x5F504B61: return "evFlareUnequip";
        case 0x8E482037: return "dialogue_gesture_right";
        case 0x5915D2B8: return "dialogue_gesture_left";
        case 0xE71AD900: return "dialogue_greeting_done";
        case 0xF51BEA84: return "dialogue_gesture_forward";
        case 0xB0A6B54E: return "dialogue_gesture_backward";
        case 0xAF154F27: return "dialogue_optional_convo_check";
        case 0x6BBFE65D: return "dialogue_object_start";
        case 0x6F9346D0: return "dialogue_object_exit";
        case 0x63D815CB: return "dialogue_loop1_start";
        case 0x3C965A36: return "dialogue_loop2_start";
        case 0x21A96A71: return "dialogue_loop2_exit";
        case 0xDADED168: return "npc_rotate_value";
        case 0x1EB68EAB: return "dialogue_loop1_exit";
        case 0xEC4E44FF: return "MP_LIVE_doc_collected";
        case 0x09F0E688: return "StartSlowMo";
        case 0x904E3463: return "StopSlowMo";
        case 0xD5E81CA5: return "MeleeMoveAnimTargetRelocationOffset";
        case 0xAF27167C: return "LedgeClimbUpExhausted";
        case 0x0D20F5B5: return "HurdleOntoGround";
        case 0x250E39B1: return "User_Sync_Ready";
        case 0xAA382CA9: return "evCameraSubmerged";
        case 0xEB9ADD39: return "evCameraSurfaced";
        case 0x0BA37449: return "CraftedPortableLimit";
        case 0x2967F9FF: return "evPoisonGrenadeCrafted";
        case 0x429EF3C0: return "evShrapnelGrenadeCrafted";
        case 0xD7F15EC7: return "impact";
        case 0x180EEA4F: return "swerve";
        case 0x4DE1B411: return "ram_start";
        case 0xFD3FBDAB: return "evSmokeGrenadeCrafted";
        case 0x175FED93: return "evJackOLanternCrafted";
        case 0xDFD1717C: return "waterfall_fade_height";
        case 0x643A5F19: return "auto_lock_zone_on";
        case 0xF2CC8ED0: return "auto_lock_zone_off";
        case 0xFCDACE6E: return "auto_lock_target_locked_id";
        case 0x65922B5B: return "auto_lock_target_lost_id";
        case 0x789AE933: return "SwimAudioEffectsManualStart";
        case 0xFABD897D: return "SwimAudioEffectsManualEnd";
        case 0x2469EEA0: return "BearMeleeHit_A";
        case 0x2469EE95: return "BearMeleeHit_B";
        case 0xFB385594: return "ISS_GenericEvent5";
        case 0xFB385593: return "ISS_GenericEvent6";
        case 0xD2D2D7F4: return "uiplus_leveled_language";
        case 0xC283F760: return "UI_SFX_Tutorial_end";
        case 0x16E3D7E3: return "UI_SFX_Tutorial_start";
        case 0x53C5AF77: return "NpcAimingAtEnemy";
        case 0x1AF71389: return "JacketBandageDone";
        case 0x268706C4: return "JacketArmWound";
        case 0x6E7DD6E5: return "evNpcRangedAttackThroughSmoke";
        case 0x21209D60: return "evNpcTakingExtremeAntiCampingMeasures";
        case 0x3CFB3D79: return "evNpcGettingCloseToSearchTarget";
        case 0x7C410BA1: return "evNpcInvestigationEndedNowSearch";
        case 0xBDC16494: return "ev_Transition_to_Default_Moveset";
        case 0x3063A8C8: return "ev_Transition_to_Custom_Moveset";
        case 0xAB6502C4: return "evMolotovTutorialCrafted";
        case 0x7B3AD1F8: return "weapon_primary_loadout_cursor_changed";
        case 0xD8C579C6: return "weapon_secondary_loadout_cursor_changed";
        case 0x45D5EAEE: return "weapon_contextual_loadout_cursor_changed";
        case 0x98C2C185: return "player_invincible_powerup_start";
        case 0x484BF86B: return "player_invincible_powerup_complete";
        case 0x721A0698: return "swapHairBack";
        case 0xE0AE4A5B: return "item_got_revealed";
        case 0xB57BD5EB: return "dialogue_exhausted";
        case 0xE4D9979B: return "dialogue_UI_off";
        case 0x225ED745: return "dialogue_UI_on";
        case 0x09510F0C: return "ledge_fall_DFA";
        case 0x74868614: return "anim_slope_jump_prepare";
        case 0x04E8ED43: return "evActiveHealComplete";
        case 0x723A3742: return "evStealthKillStarted";
        case 0x928D60B2: return "evDeathFromAboveStarted";
        case 0xB1B71753: return "evPerformRangedFinisher";
        case 0x9EA86CA9: return "evCombatEncounterStart";
        case 0x0247CDBB: return "evCombatEncounterAbort";
        case 0xD24396E3: return "evCombatEncounterComplete";
        case 0xD7183779: return "evDlcFeatureStateChanged";
        case 0x7000270C: return "WaterType_Message";
        case 0x18DDFBE6: return "evGasAreaEnter";
        case 0xABB6F67E: return "evGasAreaExit";
        case 0x3982C4E2: return "convo_interact_ended";
        case 0x5B4E9FA4: return "convo_interact_resumed";
        case 0x3260854F: return "convo_interact_aborted";
        case 0xE0D3D607: return "convo_interact_started";
        case 0x30EBB4E0: return "ForceWeaponFire";
        case 0x50662741: return "ContinuousWeaponFireStop";
        case 0x3010978A: return "Meatbit_Death";
        case 0x7002F720: return "evReplayTimeOutIndicator";
        case 0xAE48966B: return "Fa_ISS_Winch_End";
        case 0x020BEAE4: return "ForceWeaponFireContinuousEnd";
        case 0x73A655A3: return "ForceWeaponFireContinuousStart";
        case 0x18AD37F5: return "campsite_stance_quiver_exit";
        case 0x09BD7BEB: return "campsite_stance_quiver_enter";
        case 0x1CD30662: return "campsite_stance_crampons_exit";
        case 0xADD26FE1: return "campsite_stance_crampons_enter";
        case 0xB940847A: return "campsite_stance_gloves_exit";
        case 0x7FE0FCB4: return "campsite_stance_gloves_enter";
        case 0x22B1F890: return "campsite_stance_ascender_exit";
        case 0xF2A7BE90: return "campsite_stance_ascender_enter";
        case 0xFFFEC41F: return "campsite_stance_satchels_exit";
        case 0xB0869D15: return "campsite_stance_satchels_enter";
        case 0x745CE157: return "campsite_stand_to_sit";
        case 0x7F706255: return "campsite_stand_to_sit_done";
        case 0xCD7F8F2F: return "ropeTugInstanceID";
        case 0x81DC61A1: return "evFastTravelInitiated";
        case 0x5C1819C4: return "loadout_changed_attempt_reload";
        case 0x43EE1B60: return "evDisplay_DFA_Mesh";
        case 0x409D8383: return "evHide_DFA_Mesh";
        case 0x3915A7AC: return "npc_give_player_item";
        case 0x7B5411AF: return "npc_deathless_regen_done";
        case 0xEF9912CD: return "SwaptoCineMaterials";
        case 0xB16EB8E5: return "SwaptoNormalMaterials";
        case 0x1A64A8B7: return "dialogueCalloutStarted";
        case 0xFEC5EC43: return "dialogueCalloutEnded";
        case 0x2BDADF28: return "JacketHeadWound";
        case 0xE86C4363: return "NpcCompletedMeleeAttack";
        case 0xBC918098: return "AltClimbingAxeAway";
        case 0xFF7641E5: return "ClimbingAxeAway";
        case 0x2B585646: return "AltClimbingAxeReady";
        case 0x9C7A3B7B: return "ClimbingAxeReady";
        case 0x71990FE4: return "ClimbingAxeLocked";
        case 0x9E2630FC: return "ClimbingAxeUnlocked";
        case 0x371B3D71: return "DFA_NPC_Event";
        case 0xE9C3E9C8: return "flareApex";
        case 0xB2983DC0: return "flareLanded";
        case 0x2611A27B: return "evNPCChoking";
        case 0x87A1E0CE: return "CheckInventoryState";
        case 0x70B191DC: return "HairCineProfileCheck";
        case 0xE128F119: return "HairRenderProfileCheck";
        case 0xB7B44502: return "replay_points_scored";
        case 0x834AB900: return "inventory_member_ready_enter";
        case 0x28D5DA95: return "inventory_member_away_enter";
        case 0x0E5A88B1: return "inventory_member_locked";
        case 0x2E1E14BC: return "inventory_member_unlocked";
        case 0x56C501EE: return "DisableSensible";
        case 0x5D84CE5C: return "crowFlyAway";
        case 0x42805DB0: return "EvNPC_Investigate_Enter";
        case 0x422247D5: return "evNpcNewEnemyAndCantCallForHelp";
        case 0x20C19363: return "evNpcEventCallForHelpReceived";
        case 0x1CDDE587: return "campedExit";
        case 0xA928B7BB: return "campedEnter";
        case 0x9BDEEE7D: return "laraRecorderOld_On";
        case 0x968D5F2D: return "laraRecorderOn";
        case 0x2E667695: return "laraRecorderOff";
        case 0x9C8105BB: return "ResourceCollected";
        case 0xE4DEB8AE: return "health_bandaging_aborted";
        case 0x5924E3B1: return "Finisher_SilentKill_Bow_Behind";
        case 0x1ACE8C03: return "Finisher_SilentKill_Bow_Front";
        case 0x6E1452E6: return "Finisher_SilentKill_Knife_Front";
        case 0x5AD2B0CD: return "Finisher_SilentKill_Waterfall";
        case 0xDA0F4CB7: return "Finisher_SilentKill_Knife_Behind";
        case 0xFE86C92C: return "Finisher_SilentKill_Wading_Front";
        case 0x42CE6B4C: return "Finisher_SilentKill_Underwater_Front_B";
        case 0x23FA9311: return "Finisher_SilentKill_Underwater_Front";
        case 0xAB4F19E9: return "Finisher_SilentKill_Wading_Behind";
        case 0x3D9EEF54: return "Finisher_SilentKill_Underwater_Behind";
        case 0xA8DDC623: return "Finisher_Incapacitated_Pickaxe_B";
        case 0xA8DDC624: return "Finisher_Incapacitated_Pickaxe_A";
        case 0xFA7D09CD: return "Finisher_Incapacitated_Rock";
        case 0x49782DE0: return "evPoisonArrowCrafted";
        case 0xC2D6FEA0: return "evReinforcedLimbsPurchased";
        case 0x8E2D317E: return "dialogue_look_at_event";
        case 0xD5E0007C: return "Finisher_DFA_Stun";
        case 0xCC712CC6: return "Finisher_DFA_Rock_Part2";
        case 0xD62CADF4: return "Finisher_DFA_Rock";
        case 0xE9F9C569: return "Finisher_DFA_Knife";
        case 0x65C96E11: return "Konstantin_Ground_Knife_Move_Done";
        case 0xD92DFD9A: return "Konstantin_DFA_Move_Done";
        case 0x33663622: return "Konstantin_DFB_Move_Done";
        case 0x8F039090: return "Konstantin_React_Done";
        case 0x7040C046: return "Konstantin_Final_Move_Started";
        case 0xDD7175BE: return "SofiaRadioInteractLock";
        case 0xC398FBF4: return "SofiaRadioInteractUnlock";
        case 0xFBC3E3BE: return "Finisher_Shotgun_03";
        case 0xFBC3E3BB: return "Finisher_Shotgun_02";
        case 0xFBC3E3BC: return "Finisher_Shotgun_01";
        case 0xAA8280BB: return "Finisher_Bow_01";
        case 0xAA8280BE: return "Finisher_Bow_02";
        case 0xAA8280BD: return "Finisher_Bow_03";
        case 0xCA244EB5: return "Finisher_SMG_01";
        case 0xCA244EB4: return "Finisher_SMG_02";
        case 0x75FAE82A: return "Finisher_Pistol_01";
        case 0x1C11F9FE: return "evSeizeJumpFailKonstantin";
        case 0x9BE81A4A: return "evNpcStatusEvent_Object";
        case 0x60271A2E: return "evNpcStatusEvent_Waypoint";
        case 0xD57ACC9D: return "evNpcStatusEvent_ArrivedAtAssignedLocation";
        case 0x0F03E7C3: return "evNpcStatusEvent_Incapacitated";
        case 0x763B952D: return "SetAnimatedHairOn";
        case 0x24320D29: return "SetAnimatedHairOff";
        case 0x1F1ED1C0: return "dialogue_set_to_idle_loop";
        case 0x46A50FF0: return "dialogue_set_to_inspect_loop";
        case 0x8DA6B28E: return "dialogue_set_to_direct_loop";
        case 0x2138887A: return "PlayerHeartbeatAudio_Started";
        case 0x433E2E11: return "PlayerDeathAudio_Falling_Scripted";
        case 0xFFF1BC41: return "PlayerDeathAudio_Falling_Systemic";
        case 0x0AB218C8: return "player_using_campsite";
        case 0x1B7319A4: return "outOfAmmo_WeaponSwitch_SendMetric";
        case 0xF081FEF0: return "evCheckNetdataFlag";
        case 0x51EDBCBA: return "OnPowerMeterFilled";
        case 0x268C676E: return "OnPowerMeterLost";
        case 0x869D7F3B: return "evArmorRipoff_LArm";
        case 0x84E7BB27: return "evArmorRipoff_RArm";
        case 0x869BB39C: return "evArmorRipoff_LLeg";
        case 0x84F3A3BF: return "evArmorRipoff_RLeg";
        case 0x84FB2A95: return "evArmorRipoff_Body";
        case 0xE711EC4E: return "evReplayCountdownFinished";
        case 0xAB10F9DC: return "ev_npcarrowshatter";
        case 0xF6853876: return "Finisher_NonLethal_Bow_01";
        case 0xE505EF6B: return "Finisher_NonLethal_Rifle_01";
        case 0x8DAF24F4: return "npc_arrow_clear";
        case 0x366CB08C: return "npc_damage_enrage";
        case 0x56D247B5: return "PitonArrow_Attached";
        case 0x8E9AB31C: return "PitonArrow_Bounce";
        case 0xA23386B9: return "PitonArrow_Ejected";
        case 0xCC01FA77: return "PitonArrow_Good";
        case 0x80384EB0: return "PitonArrow_NoLongerGood";
        case 0xEB1BD802: return "evDlcInstallComplete";
        case 0x0A179C40: return "NPC_RadioOverlayOn";
        case 0xE08623F7: return "NPC_RadioOverlayOff";
        case 0x488491C4: return "Finisher_NonLethal_SMG_01";
        case 0x700C3DFD: return "Finisher_NonLethal_Shotgun_01";
        case 0x2CB2F89C: return "Finisher_NonLethal_Pistol_01";
        case 0x77F8E117: return "forceGlowstickPrecombatLight";
        case 0xC14A4F64: return "forceGlowstickPrecombatLightDone";
        case 0x39B4785B: return "Custom_DFA_Tutorial_Logic";
        case 0x018F3683: return "Replay_RedBarrellDestroyed";
        case 0xCA8A93FE: return "evUsedAirBubble";
        case 0x296480BF: return "Replay_ChallengeEvent_01";
        case 0x296480C0: return "Replay_ChallengeEvent_02";
        case 0x296480C1: return "Replay_ChallengeEvent_03";
        case 0x296480C2: return "Replay_ChallengeEvent_04";
        case 0x296480BB: return "Replay_ChallengeEvent_05";
        case 0x296480BC: return "Replay_ChallengeEvent_06";
        case 0x296480BD: return "Replay_ChallengeEvent_07";
        case 0xE3022A80: return "Replay_CoinCollected";
        case 0xAFB40201: return "Replay_CollectibleCollected";
        case 0x07BCE8FD: return "Replay_CoinCacheCollected";
        case 0x85B115C5: return "Replay_DocumentCollected";
        case 0xD8BCED2B: return "Replay_RelicCollected";
        case 0x2D6F1C7E: return "Replay_EnemyKilledByTrebuchet";
        case 0xFBC1A83A: return "Replay_TargetDestroyed";
        case 0x9F998642: return "Replay_SignalFireLit";
        case 0x56D26FF1: return "Replay_LaptopDestroyed";
        case 0xC4F11AED: return "Replay_BellCutDown";
        case 0x3D505073: return "Replay_CenserDropped";
        case 0x0E3F4E32: return "Replay_BrazierDestroyed";
        case 0xD5EE47A1: return "Replay_BannerBurned";
        case 0x4B88B720: return "Replay_RR_HVTSatchelSpawned";
        case 0x8BAFD56F: return "Replay_ScrollsDestroyed";
        case 0x9AD21EE7: return "Replay_StatueDestroyed";
        case 0x5FDB344D: return "Replay_AmmoDerivativePickedUp";
        case 0x4623CC04: return "Replay_StatueHeadDestroyed";
        case 0x7238B5A8: return "Replay_ChandelierKill";
        case 0xF026A5E9: return "LIVE_RR_WolfDied";
        case 0x93FF8D5F: return "LIVE_RR_SpawnerPlacementID";
        case 0xFF42470D: return "LIVE_RR_SubObjectiveComplete_NoDamage";
        case 0x0BE7859A: return "LIVE_RR_SubObjectiveComplete_NoKills";
        case 0xBE5EF937: return "LIVE_RR_SubObjectiveComplete_Stealth";
        case 0x16E40A75: return "LIVE_RR_ObjectiveCompleteScreenFinished";
        case 0xBBD5DF5A: return "laraRadioLightOff";
        case 0x3C009404: return "laraRadioLightOn";
        case 0xBC39B16C: return "laraRadioOn";
        case 0x42B730F2: return "laraRadioOverlayActivated";
        case 0x1CF4E890: return "laraRadioOff";
        case 0xE059DF04: return "dialogueIdleTimerStart";
        case 0xC94F3273: return "clearRadioActors";
        case 0x190CD628: return "ui_parachute_show";
        case 0x1A5D2CF6: return "ui_parachute_hide";
        case 0x698965CF: return "crafted_quiver_medium";
        case 0x9FEA2565: return "crafted_quiver_large";
        case 0xB9864D1A: return "crafted_quiver_ancient";
        case 0xDCB9AC61: return "Replay_NestDislodged";
        case 0x67E12A04: return "Replay_EnemyRopeKill";
        case 0x6BE26194: return "NotifyMeleeTargetFinisherEndedEarly";
        case 0x86D52D56: return "evReplayChallengeSelectionEntered";
        case 0x3BC697FE: return "evReplayChallengeSelectionExited";
        case 0xFC473233: return "evReplayCardSelectionEntered";
        case 0x7A30BD61: return "evReplayCardSelectionExited";
        case 0xAF6BD83F: return "evCardPackOpeningEntered";
        case 0xF47B2670: return "evCardPackOpeningExited";
        case 0x47FD65B4: return "evCreditsPackOpeningEntered";
        case 0xEE74E6CC: return "evCreditsPackOpeningExited";
        case 0xE3686BF2: return "NullDontSend";
        case 0xFEA4B702: return "evPlayerHasMultipleWeapons";
        case 0x93A74404: return "evChangeOutfits";
        case 0x284E5F04: return "LastStand_SurvivalInstinct_OFF";
        case 0x388880E6: return "LastStand_SurvivalInstinct_ON";
        case 0x47C927CB: return "Spawned_In_SH_Via_FT";
        case 0x31248892: return "NpcFearTransition_OnEdge";
        case 0x5E84543A: return "NpcFearTransition_Scared";
        case 0xBF81FA5F: return "NpcFearTransition_BeyondTerrified";
        case 0x20D335F2: return "NpcFearTransition_Terrified";
        case 0xDC604E59: return "NpcRequestDespawn";
        case 0xCF1A7FB4: return "camouflage_on";
        case 0xB2E80EF9: return "camouflage_on_body";
        case 0xB2CD7DA1: return "camouflage_on_legs";
        case 0x51AF9FBF: return "camouflage_on_leftarm";
        case 0x1675B18E: return "camouflage_on_rightarm";
        case 0xB2E1F334: return "camouflage_on_hair";
        case 0x7A16882B: return "camouflage_on_abort";
        case 0xDE40A4BB: return "camouflage_on_silent";
        case 0x944745F4: return "camouflage_setPercent";
        case 0xD740274A: return "camouflage_off";
        case 0xCD7B8A48: return "camouflage_off_body";
        case 0xCF8AD07D: return "camouflage_off_legs";
        case 0xFCB0D53E: return "camouflage_off_leftarm";
        case 0x6BA536CC: return "camouflage_off_rightarm";
        case 0x441EB256: return "camouflage_off_postCombat";
        case 0xCF899FD0: return "camouflage_off_hair";
        case 0x6AF448E1: return "Revolver_Load_Bullet";
        case 0x1EFDEFD4: return "av_walk_talk_show_single_axe";
        case 0xC9A24F73: return "av_walk_talk_show_double_axe";
        case 0x71BD0F27: return "ev_notification_is_displaying";
        case 0x0C4B28D7: return "ev_notification_is_closing";
        case 0xDD5E6295: return "ev_tutorial_is_closing";
        case 0xB2F78B9B: return "ev_tutorial_is_displaying";
        case 0x9EF07A08: return "ev_mission_completion_is_hiding";
        case 0x48C18B60: return "ev_mission_completion_is_showing";
        case 0x74C904B9: return "ui_mission_gear_tutorial_closed";
        case 0xC131C7A5: return "PlayerInPacVolume";
        case 0x5081E55B: return "evColdStateChanged";
        case 0xFCD0A3B8: return "evHungerStateChanged";
        case 0xE647D606: return "evColdMeterDeductTick";
        case 0x1BF9F71E: return "evHungerMeterDeductTick";
        case 0xCF5E8687: return "evColdMeterEmptyDamageTick";
        case 0x53292FD1: return "evHungerMeterEmptyDamageTick";
        case 0x3FD6D246: return "ui_piton_arrow_grab";
        case 0x44A3215F: return "ui_weapon_equippedtrait_changed";
        case 0x8D50A360: return "ui_weapon_equippedtrait_climbingaxe";
        case 0xBEBD83FE: return "player_in_crypt";
        case 0x254F0213: return "evProgress100PercentReached";
        case 0xDFBFFFD2: return "evEnduranceSuspendTODCycle";
        case 0xAA0BDC53: return "evEnduranceResumeTODCycle";
        case 0xFAC6187B: return "evEnduranceRestToDay";
        case 0xDF54D12A: return "evEnduranceRestToNight";
        case 0x86317EC6: return "LIVE_RR_ObjectiveID";
        case 0xA6D240C2: return "FieryDeathTriggered";
        case 0x1FD5F6BA: return "evEnduranceLaraExtracted";
        case 0x347CB8A0: return "Camera_Wallrun_Jump_Exit";
        case 0xDFCBCCA4: return "entering";
        case 0xD2D3DEC5: return "ISS_Move_Forward";
        case 0xDACC61CD: return "ISS_Hazard";
        case 0x57B14F91: return "ISS_Idle";
        case 0x5C4DFAB0: return "ISS_Outro";
        case 0x783394B5: return "weather_rain_mist";
        case 0x45C302F6: return "Disturbed_Anim_Ended";
        case 0x4888D9F2: return "ReactionTouchEnded";
        case 0xF97A0BCC: return "ReactionPushEnded";
        case 0x47F3796D: return "Drift_KnockUnder";
        case 0x70A2AD85: return "evPlayerLowCollisionReaction";
        case 0x2EB56014: return "SND_Play_Corpse_Drop_Stinger";
        case 0xB0A43DC6: return "evNpcCanScale";
        case 0x9D7E37E2: return "weather_rain_UI";
        case 0x969DA3B8: return "evRappelFromWallCrawlConnectRope";
        case 0x3728E8A6: return "evRappelFromWallCrawlSwitchAxes";
        case 0x88B80043: return "Move_Interrupt";
        case 0xF5ED2766: return "NPC_Start_Pre_Anticipation_Reaction";
        case 0x2999817F: return "NPC_Start_Anticipation_Reaction";
        case 0xD338DE0C: return "DisableUnderwaterPadshocks";
        case 0x7015C168: return "EnableUnderwaterPadshocks";
        case 0xFFCB89C9: return "fx_systemic_water";
        case 0x30D05C21: return "NpcReaction";
        case 0x85ACB2E1: return "headtracking_start";
        case 0xAB16C580: return "headtracking_stop";
        case 0x77C054B1: return "SND_Kill_Bow_Foley_SFX";
        case 0xFF1513A9: return "SND_Start_Bow_Foley_SFX";
        case 0x8C5D7FA6: return "SND_Kill_Bow_Arrow_SFX";
        case 0xAB88BA5E: return "SND_Start_Arrow_SFX";
        case 0xE5753FAD: return "StumbleReaction";
        case 0x4768B3D9: return "Flashlight_Facing_Forward";
        case 0x7A400B5F: return "Flashlight_Facing_Camera";
        case 0x1ED46431: return "SND_Enable_SlapBack";
        case 0xF8EE2A02: return "SND_Disable_SlapBack";
        case 0xFC3616E7: return "paraglide_is_speed_boosting";
        case 0x66C8F134: return "paraglide_is_not_speed_boosting";
        case 0x498F1963: return "paraglide_is_slow_falling";
        case 0x8D3F6A97: return "paraglide_is_not_slow_falling";
        case 0x783305EF: return "weather_rain_Lara";
        case 0x1178A98F: return "weather_rain_splash";
        case 0xEF5DA867: return "evBARK_LH_ARP";
        case 0xEF5DB0A6: return "evBARK_LH_CRA";
        case 0xA6F80C9E: return "evBARK_LH_CRLL";
        case 0xA6F81221: return "evBARK_LH_CRHL";
        case 0x0CFDA5E6: return "Lara_Footsteps_Probes";
        case 0xA5E01EDF: return "Flashlight_Light_PlacementID";
        case 0xDB384387: return "evStateFull";
        case 0x263B1F87: return "evStateEmpty";
        case 0x25FEC9C2: return "evStateAlert";
        case 0xFFBEC95B: return "evStateWarning";
        case 0x44ED1C42: return "HangingRope_Attached";
        case 0x62426168: return "AnimalAlarm_Entered_Idle";
        case 0xAE154F1B: return "AnimalAlarm_Entered_Disabled";
        case 0x185C174E: return "AnimalAlarm_Entered_Triggered";
        case 0x09957755: return "AnimalAlarm_Entered_Warning";
        case 0x8501E298: return "evObjectReset";
        case 0xE0FF9B41: return "evObjectResetDone";
        case 0xA8189635: return "evObjectTrigger";
        case 0x25F767CC: return "evObjectTriggerDone";
        case 0x2B0334FA: return "Flashlight_TurnLightOff";
        case 0x428D4FBD: return "Flashlight_AnimRequestTurnLightOn";
        case 0x13689E09: return "Flashlight_AnimRequestTurnLightOff";
        case 0x88E0FABE: return "Flashlight_AnimTurnOn_Callback";
        case 0x4CDF1F2A: return "Flashlight_AnimTurnOff_Callback";
        case 0x48F5BFA7: return "Flashlight_TurnLightOn";
        case 0xBB45F451: return "Flashlight_Flicker_On";
        case 0x42EE26B2: return "Flashlight_Flicker_Off";
        case 0x6CD01084: return "Flashlight_Color";
        case 0xCD433E07: return "Flashlight_Color_Reset";
        case 0x17CFAB63: return "evObjectDespawn";
        case 0x341B910D: return "evObjectDespawning";
        case 0xD08FCA2C: return "Flashlight_Flicker_Moment";
        case 0xC4F555DB: return "evObjectFireWeapon";
        case 0x9B4F654D: return "enter_StealthLoopState_Undetected";
        case 0x7BB222A0: return "enter_StealthLoopState_Glimpsing";
        case 0x8429017F: return "enter_StealthLoopState_Detecting";
        case 0x0D5C3061: return "enter_StealthLoopState_Detected";
        case 0x82D7A0D4: return "enter_StealthLoopState_Vanishing";
        case 0xBE8903FE: return "evNpcTerrifiedSelfTalkBark";
        case 0xDBBB66F2: return "RemoveMudAfterCombat";
        case 0x8689DD57: return "RemoveMudAfterCombatEnded";
        case 0xCF97D854: return "evSearchBushWallNotifyNearby";
        case 0x16140E6A: return "jaguar_canopy_collision_disable";
        case 0x80B3140F: return "jaguar_canopy_collision_enable";
        case 0x50332758: return "evNpcDiscoveredTerrifiedNpcBark";
        case 0x30CB1C19: return "evNpcDiscoveredTerrifiedNpcWhileSearchingBark";
        case 0x462B8396: return "evNpcDiscoveredWhenTerrifiedBark";
        case 0xD312E68F: return "PlayLineStarted";
        case 0x73C804FE: return "PlayLineEnded";
        case 0xD126827A: return "SND_ISS_Moray_Eel_Start";
        case 0x1B61C11D: return "SND_ISS_Moray_Eel_End";
        case 0x0B64673B: return "evStealthLoopStatusChanged";
        case 0xB34D1215: return "FollowTarget_StopFollowNow";
        case 0x105ABC0D: return "GroundEvadeStarted";
        case 0xA48971D5: return "SND_Silent_Kill_Event";
        case 0x464B9044: return "SND_Terrified_START";
        case 0x215D1928: return "SND_Terrified_STOP";
        case 0x2D26A124: return "evNpcEventScaryDeathReceived";
        case 0x3C6D83EE: return "evNpcWithMudNotSeenByThermalVisionBark";
        case 0x5BE4CA19: return "evCompanionAnimhostStartActionA";
        case 0x5BE4CA1A: return "evCompanionAnimhostStartActionB";
        case 0x5BE4CA13: return "evCompanionAnimhostStartActionC";
        case 0xF71A4B25: return "evCompanionAnimhostReturnToPrimaryIdle";
        case 0xCA0277B1: return "evCompanionAnimhostCompletedActionA";
        case 0xCA0277B2: return "evCompanionAnimhostCompletedActionB";
        case 0xCA0277AF: return "evCompanionAnimhostCompletedActionC";
        case 0x93DF5A53: return "evNPCFullbodyWeaponEquipComplete";
        case 0xA0797481: return "OnWallcrawlEntry";
        case 0xBB885B59: return "OnRappelSwingEntry";
        case 0x06D10064: return "OnRappelSwingExit";
        case 0x74CDDD80: return "ISS_GlidingPoint";
        case 0xFA4CD539: return "ISS_ClearStoppingPoint";
        case 0xF521C1E8: return "ISS_StoppingPoint";
        case 0xBD2CA6ED: return "SND_LITJ_Jaguar_Loop_03_Start";
        case 0x60CD5269: return "SND_LITJ_Jaguar_Loop_02_Start";
        case 0x39DA9131: return "Add";
        case 0x008BF2B9: return "SetInitial";
        case 0xBABF34C0: return "SetCurrent";
        case 0x12EB0BB6: return "SetFinal";
        case 0x5473482B: return "Positive";
        case 0xD41AF581: return "Negative";
        case 0x6F21A33F: return "Controller";
        case 0xE15A82C5: return "Situation";
        case 0x347FD02C: return "Role";
        case 0x6968C945: return "evVrSettingsStateChanged";
        case 0x00E685E2: return "evVrGlobalsStateChanged";
        case 0xF09C53FE: return "evShowTextPrompts";
        case 0xA38B7676: return "evHideTextPrompts";
        case 0xD11A9BD8: return "evNpcStuckInGlue";
        case 0x1B4D7B81: return "evVrFpActivated";
        case 0xC8740B67: return "evVrFpDeactivated";
        case 0xC1174E6E: return "evStartFrenzyFiring";
        case 0x585F666A: return "evStartGlueReaction";
        case 0xDCB8D25A: return "wolf_pack_flee";
        case 0x2ABF00B0: return "evWitnessFrenzyFire";
        case 0x70CEDAE6: return "merchant_transaction_purchase_success";
        case 0x07421DD7: return "merchant_transaction_sale_success";
        case 0x7AC6D179: return "merchant_transaction_fail_inventoryfull";
        case 0x412C84B7: return "merchant_transaction_fail_reachedtradelimit";
        case 0x75EE270E: return "merchant_transaction_fail_notenoughresources";
        case 0xB1326BAC: return "evActionInvestigationStartedCasual";
        case 0x2021147E: return "evActionInvestigationStartedNonCasual";
        case 0xDC9022CB: return "evNpcSearchTracking_Start";
        case 0x3454B4A1: return "evNpcSearchTracking_AtTrackPosition";
        case 0xA68BC3AA: return "evNpcSearchTracking_ClearedTrail";
        case 0xDFC89EED: return "flee_from_animal_alarm";
        case 0x417A02AF: return "SND_Lara_Cover_Head";
        case 0xEB7267B9: return "merchant_transaction_nomoreavailable";
        case 0xA92D5BD9: return "evNpcPropagateHighAlert";
        case 0x47B90E64: return "evNpcFlashStarted";
        case 0xD8AB27DD: return "animAlarm_npc_concealment_mine";
        case 0x375021FC: return "evMinePlacedBushNotifyNearby";
        case 0xF51F58B1: return "evMineDetonatedBushNotifyNearby";
        case 0xFFD3332B: return "SocialSonarAnimDone";
        case 0x01EA7009: return "SND_Unblock_Combat_Music_System";
        case 0xCBDAC0F8: return "SND_Block_Combat_Music_System";
        case 0xD283E90C: return "SND_RopeSwing";
        case 0x860D6072: return "evNpcFrenzyFireStarted";
        case 0x1A7BAD08: return "evENMPLivesDecremented";
        case 0xC6841943: return "evENMPLivesIncremented";
        case 0xB5C1B911: return "evMPPingedByPlayer";
        case 0x0B39F0C9: return "evNetSyncObjectChanged";
        case 0x75B7A05E: return "evPrologueClimbCutSpline02";
        case 0x75B7A05C: return "evPrologueClimbCutSpline04";
        case 0x75B7A05B: return "evPrologueClimbCutSpline03";
        case 0xEDC6D1B8: return "Finisher_SilentKill_EnterState";
        case 0xFBBE861E: return "ChainedTakedownTriggered";
        case 0xBB9E5C2B: return "npc_reset_health_state";
        case 0x32EF1489: return "NpcUsingSuppressiveFire";
        case 0x61E0B929: return "evActionLightReactionStarted";
        case 0xB96D9994: return "ShowClimbingShoes";
        case 0x81E60663: return "rare_resource_cache_reveal";
        case 0x14CDBE54: return "DigsiteCollected";
        case 0x1ABE6C6B: return "evFinisherChainedWindowEnded";
        case 0x03EF55F5: return "BranchTaunt_Attach";
        case 0x5862F341: return "BranchTaunt_Detach";
        case 0x3387E3CF: return "RareResourceCache_Incan_Intermediate_1_Reveal";
        case 0x93D1F641: return "RareResourceCache_Incan_Intermediate_2_Reveal";
        case 0x52E56FE0: return "RareResourceCache_Incan_Advanced_1_Reveal";
        case 0x299EFC31: return "RareResourceCache_Incan_Advanced_2_Reveal";
        case 0xFE36C79B: return "RareResourceCache_Aztec_Intermediate_1_Reveal";
        case 0x2AF5F2C7: return "RareResourceCache_Aztec_Intermediate_2_Reveal";
        case 0x947F71F3: return "RareResourceCache_Aztec_Advanced_1_Reveal";
        case 0x0FE9A60E: return "RareResourceCache_Aztec_Advanced_2_Reveal";
        case 0x3CFB8A47: return "RareResourceCache_Mayan_Intermediate_1_Reveal";
        case 0x079031AA: return "RareResourceCache_Mayan_Intermediate_2_Reveal";
        case 0x997400BF: return "RareResourceCache_Mayan_Advanced_1_Reveal";
        case 0xB3273F74: return "RareResourceCache_Mayan_Advanced_2_Reveal";
        case 0xB0D77670: return "Digsite_Aztec_Intermediate_1_collected";
        case 0x02505E1C: return "Digsite_Aztec_Intermediate_2_collected";
        case 0x9654E0C7: return "Digsite_Aztec_advanced_1_collected";
        case 0x042D8A38: return "Digsite_Aztec_advanced_2_collected";
        case 0x0A3B0929: return "Digsite_Incan_Intermediate_1_collected";
        case 0x47F220F1: return "Digsite_Incan_Intermediate_2_collected";
        case 0x0AEFA483: return "Digsite_Incan_Advanced_1_collected";
        case 0x959F97C6: return "Digsite_Incan_Advanced_2_collected";
        case 0x32DA0064: return "Digsite_Mayan_Intermediate_1_collected";
        case 0x4294B257: return "Digsite_Mayan_Intermediate_2_collected";
        case 0x442D74F2: return "Digsite_Mayan_Advanced_1_collected";
        case 0xC87E0CAE: return "Digsite_Mayan_Advanced_2_collected";
        case 0x8BAF5791: return "evRappelForceTransToBraced";
        case 0x9B7A3426: return "evPlayerReload";
        case 0x1E0C8B84: return "Ledge_pullup_from_ledge_ended";
        case 0xF8F8211E: return "evFinisherInitiatedKukulkan";
        case 0x2C3A794C: return "Flashlight_SpotlightBounceEnabled";
        case 0x95C0DED7: return "Flashlight_SpotlightBounceDisabled";
        case 0xA16C472D: return "evDeepwaterPiranhasStopFollowingLara";
        case 0x60CB4F52: return "allied_player_is_near";
        case 0xED82821C: return "allied_player_is_far";
        case 0x6FA19951: return "evNpcIsDying";
        case 0x0B0FC9BB: return "evReceiveMeleeHitMeleeKnockdownChance";
        case 0x335CA3A5: return "evReceiveMeleeHitAncientPickaxe";
        case 0x77A0ED57: return "evReceiveMeleeHitMeleeKnockdownChanceAndAncientPickaxe";
        case 0xD3B64F36: return "evNotifyHerbCycle";
        case 0x18FEDCF9: return "evNotifyTriggerEmote";
        case 0xC0F3B257: return "laraRadioLightOnGreen";
        case 0xD197D808: return "evNpcUpdateAccuracySettings";
        case 0x3D50E1D7: return "SND_Block_Systemic_Breathing";
        case 0x9C003918: return "SND_Unblock_Systemic_Breathing";
        case 0x6849354B: return "RareResourceCache_Incan_Intermediate_3_Reveal";
        case 0xE6CAFD7B: return "Digsite_Incan_Intermediate_3_collected";
        case 0x37FAF4D9: return "health_damaged_to_grey";
        case 0x7E17A5E3: return "evSocialSpaceEnter";
        case 0x7F91E9B0: return "evSocialSpaceExit";
        case 0x9D328C9B: return "evBreathUnderwaterCameraCut";
        case 0xC27B691F: return "SND_Disable_UW_Flood_Hack";
        case 0xFB651D06: return "SND_Enable_UW_Flood_Hack";
        case 0xF48D6C1E: return "evFireArrowCrafted";
        case 0xFEA28FCF: return "SND_Relic_Chest_Opening";
        case 0xFCFD3E12: return "OutfitPieceEquipped";
        case 0x2C8D89AE: return "Achievement_Playing_with_Fire_Start";
        case 0xC9FDC5A6: return "Achievement_Gunslinger";
        case 0x94BB5B6A: return "Achievement_PetLlama";
        case 0x1EA5127C: return "Achievement_SixthSense";
        case 0x374C3D62: return "PlayerUpdateMudWallTutorial";
        case 0x163DA3EB: return "TR11_Lum_Ranking";
        case 0x6B9531E2: return "evNpcAnimhostStartLightReaction";
        case 0x1A40CC5C: return "evHerbStrikeCrafted";
        case 0x4DDE7C52: return "evPlayerEnterSwimmingFromAir";
        case 0xF5ED4EBF: return "evRopepullTakedownShowRope";
        case 0xB0E751F7: return "evScriptedHeadTrackFullBodyTurnCompleted";
        case 0x557E8F87: return "evMultiStatesAnimhostStartAction";
        case 0xBD024F82: return "evMultiStatesAnimhostStartIdleB";
        case 0x5321D258: return "evMultiStatesAnimhostStopIdleB";
        case 0x7505C999: return "evMultiStatesAnimhostReturnToIdleA";
        case 0xDE9CAF04: return "evMultiStatesAnimhostStartTimeline";
        case 0xD3394DAF: return "ForceMuzzleFlash";
        case 0x8129DF28: return "campsite_sit_to_stand";
        case 0xFB3F7DC8: return "evAvoidanceStopAndGoCompleted";
        case 0x3F4F9E81: return "SetPlayerArmRelation_MaxForce";
        case 0xE1CB1D1B: return "SetPlayerArmRelation_Default";
        case 0x69B2A7E7: return "SetPlayerArmRelation_Relaxed";
        case 0x4B0728DB: return "SetPlayerArmRelation_MidRelax";
        case 0xAC86D62D: return "BoneParamState_SignalUnderwater";
        case 0x8F6AE8F3: return "BoneParamState_SignalWet";
        case 0x8F6668A9: return "BoneParamState_SignalDry";
        case 0x182687AB: return "NpcHeroicAttackAnticipation_Start";
        case 0xCE45807B: return "evCinematicFinished";
        case 0x43094CFF: return "evPlayerAimSwitchManualOn";
        case 0xE20D3B34: return "evPlayerAimSwitchManualOff";
        case 0xB285204A: return "evPlayerAimStarted";
        case 0x854245BD: return "reveal_outcast_storyteller_pa_06";
        case 0x85424604: return "reveal_outcast_storyteller_pa_22";
        case 0x85424605: return "reveal_outcast_storyteller_pa_23";
        case 0x85424606: return "reveal_outcast_storyteller_pa_24";
        case 0x31B0DFA9: return "ui_challenge_tomb_customization_timer_ended";
        case 0x77C4EFCB: return "ct_coop_pendulum_abby_Vo";
        case 0x9D76A2AA: return "ct_coop_pendulum_lara_VO";
        case 0xB47FBBE4: return "ct_coop_gas_abby_VO";
        case 0x36A9DD26: return "ct_coop_gas_lara_VO";
        case 0x91778D8D: return "ct_coop_platform_abby_VO";
        case 0x26B32928: return "ct_coop_platform_lara_VO";
        case 0x9517B3A8: return "ct_coop_wr_water_height";
        case 0xBD2E84D3: return "ct_coop_wr_water_turning";
        case 0xAE842E1E: return "check_dlc_tutorial_blocker";
        case 0x623F29E6: return "DLC_01_Uninstalled";
        case 0x4F44784C: return "DLC_02_Uninstalled";
        case 0x15280982: return "DLC_03_Uninstalled";
        case 0x3AE735E0: return "DLC_04_Uninstalled";
        case 0xC5FB8B33: return "DLC_05_Uninstalled";
        case 0x291EA1DF: return "DLC_06_Uninstalled";
        case 0x36BF9AFC: return "DLC_07_Uninstalled";
        case 0xE813615D: return "interact_merchant_start";
        case 0xD8E36485: return "interact_merchant_end";
        case 0x29A5D2E6: return "social_fade_to_black_start";
        case 0x1ED24263: return "social_fade_to_black_end";
        case 0x0067D680: return "Hit_by_blade";
        case 0x78510F22: return "score_attack_enm_target_spawn";
        case 0x3A18A53B: return "BlockResourceFullVO";
        case 0x0D20CFE1: return "ShowFingerOfGod";
        case 0x21183ED0: return "Giant_Statue_Slot";
        case 0xD42AF41A: return "Croft_Manor_Stairs";
        case 0xE2AF4EC0: return "DLC8_Save";
        case 0xF7739E11: return "DLC8_Open_Maze_Gates";
        case 0x39FBF8AB: return "DLC8_Close_Maze_Gates";
        case 0xF5A59B50: return "DLC8_Maze_Platformes";
        case 0xADDCCF0C: return "DLC8_Achievement_Manorisms";
        default: return Str("%08X", eventId);
    }
}
